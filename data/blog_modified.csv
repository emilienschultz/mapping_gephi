,date,title,content,name_extraction
0,2023-09-27 10:27:13+01:00,14 ways you can contribute to¬†Gephi,"
> this blog post is a cross-posting from the blog of nocodefunctions.com, which is a companion toolbox for Gephi developed by the author.
How can we give back to Gephi so that it continues to thrive in the years to come?
I am not steering Gephi, so please do not take the following as anything ‚Äúofficial‚Äù nor definitive on the topic.
Please check the recent posts on the Gephi blog by Mathieu Jacomy and Mathieu Bastian to get the latest views from the core Gephi team.
Ok, let‚Äôs dive in:
Interests should be aligned ‚Äì and money makes things complicated
Gephi is used by a large diversity of actors: students to governments, librarians, academics and professional scientometricians, dataviz designers, social media listeners, citizen journalists, fraud detection analysts and NGO volunteers to professional osint and infosec specialists and many more.

In this list of users, companies would have been natural contributors to the development of Gephi: ‚Äútake my money, and in exchange I have a voice in Gephi to develop this or that feature‚Äù.
However Gephi is a free and open source software, and it will not accept funding in return for a right to control how it is developed.
This stance is not a mistake nor a handicap!
It is a conscious choice to evolve Gephi for all ‚Äì not just in the direction that is set by the stakeholders which can fund it.
But as a result, a very common resource ‚Äì funding money ‚Äì is not directly available to Gephi.
This simple absence of a market mechanism (I buy, you deliver) prevented Gephi from accessing resources that would have been so useful ‚Äì and it is also why I esteem and respect the team who develops this software for so long, to provide it as a digital commons.
So, are we stuck? No!
There are many alternatives to contribute to Gephi, in ways that make the best of your abilities AND with tangible feedbacks beyond the existence of Gephi itself.
This blog post will be expanded as I get your feedback: do you see new ways to support Gephi? Would you like to be cited as a contact point for any of those?
Are you a company or for-profit organization?
1. Fund Gephi, despite the hurdles
At the moment, there is no legal entity that is set to accept funding for Gephi, though it is bound to come one day.
However, events sponsored by Gephi could still receive funding, through the university that will host the event or a similar channel?
What to expect from it?
The 2nd edition of the Gephi week (August 2022) has been extremely productive.
It delivered bug fixes, new plugins, new directions for development but most of all it generated a renewed energy to participate and contribute.
By funding the next edition, you contribute in a very concrete manner to making Gephi more stable in the long term.
Are you an academic?
2. Make use of your unique power: citations!
As a librarian, professor, student‚Ä¶ a very impactful action in support of Gephi is to cite it in the bibliography of the documents your produce ‚Äì in articles of course but in every publication really, including applications to projects and reports.
These are the two papers referencing the tool you love:
> Bastian, M., Heymann, S., & Jacomy, M. (2009, March). Gephi: an open source software for exploring and manipulating networks. In Proceedings of the international AAAI conference on web and social media (Vol. 3, No. 1, pp. 361-362). link
> Jacomy, M., Venturini, T., Heymann, S., & Bastian, M. (2014). ForceAtlas2, a continuous graph layout algorithm for handy network visualization designed for the Gephi software. PloS one, 9(6), e98679. link
What to expect from it?
Gephi has an excellent academic standing, with the original contribution cited more than 10,000 times and Gephi being mentioned in over 39,000 academic publications.
Explicitly referencing Gephi in your publications contributes to making Gephi visible by making its impact measurable: it enhances its legitimacy and fosters adoption.
And for you?
Gephi having an established presence and growing reputation will make it easier to convince reviewer #2 that Gephi was indeed the right choice for this network analysis üòâ
3. What about organizing an academic conference?
I think that Gephi has actually never been the central topic of an academic conference ü§î. Would you like to be the first? This could be about Gephi itself, or Gephi in relation with your scientific specialty (network analysis, social networks, organizational mapping, biological networks, computer science, forensics, etc.). Gephi is part of a broader ecosystem of software for the visual exploration of networks: Cytoscape, NodeXL, Graphext‚Ä¶ come to mind. Organizing a conference around these would make total sense!
4. Grant writing!
At the suggestion of a Gephi user and academic: it would actually make sense to apply for funding to any local / international research funding agency, where Gephi would be listed as an essential resource in need of financing. Either directly or through the dedication of a research engineer / research designer / data scientist position working on Gephi, within the project team‚Ä¶ these are just initial thoughts.
I personnally would love the idea. I could also connect you to academics who would be outstanding contributors to such a grant writing project in France or the European Union. Do get in touch! (my contacts are at the bottom of this post).
Do you ever write tutorials, how-tos, blog posts?
5. Write a simple intro about your experience using Gephi, help others discover it
A classic writer‚Äôs block about Gephi is that ‚ÄúI am not expert enough‚Äù to write about it.
You are probably much more expert than you think (see next paragraph), but in any case you can explain and document the use case that you worked on with Gephi.
This is a very, very useful contribution to Gephi.
It makes it discoverable, easier to understand and it showcases what it can do.
Again, a common conception is that what we do is never ‚Äúoriginal enough‚Äù to be worth writing about.
Absolutely not: each dataset or research question has interesting specificities.
Help fellow users understand what you did and how you did it!
And if the case is confidential, don‚Äôt let it stop you!
Transform and abstract your case and showcase the principles you followed.
6. Shoot videos or shorts, any kind of social media postings are useful, too
I mentioned written pieces because that‚Äôs in my comfort zone.
But videos, short or long, or posts on your favorite social media would be perfectly useful!
Examples
These are quite ‚Äúhigh effort‚Äù examples, just to inspire you about the variety of formats. Do start with something smaller in scope!


Medium articles and tutorials by Veronica Espinoza or Ifeanyi Idiaye


A 20 minutes youtube video by Martin Granjean


A personal website with Gephi tutorials by myself


A company website hosting a blog, with a post dedicated to Gephi by OrgMapper


What to expect from it?
You gain the warm glow of knowing that you helped users discover what is possible with Gephi.
Not interested in warm feelings?
Then do it for the SEO, as Gephi is at the cross-road of network analysis, data science and data visualization: all SEO boxes checked at once.
Are you a beginner or moderately experienced with Gephi?
7. Help translate Gephi in your language!
Gephi is available in 22 languages, which is a good start but we can do better to bring the software to many other linguistic communities!
Also, not all of the current 22 languages are translated at 100%.
What you can do is participate in the translation!
It all happens online, here.
Even if the interface looks intimidating at first, do register and get a start! And as always, don‚Äôt hesitate to request help on the Gephi Facebook group üôÇ
8. Chat and contribute to the Gephi group on Facebook!
Yes, Facebook is really not anyone‚Äôs cup of tea.
Discord, LinkedIn, Slack, a WordPress forum‚Ä¶ all these would be preferable in some way and yet ten times less used than the group on Facebook.
So we stay there for the moment.
The Gephi Facebook group has close to 10,000 members and is a very welcoming and friendly community.
Join, post and read!
Stuck in any way?
Want to showcase a result?
Definitely the place to post about it.
And if you see anyone requesting assistance, which happens several times per week actually, have a look and it might well be something you have the answer to!
Don‚Äôt be shy to offer your assistance, again my feeling is that we all tend to underestimate how helpful even a small piece of advice or assistance can be.
What to expect from it?
By giving back to the community, you are helping somebody who is a beginner just like you were some time ago. You help the community grow.
Contributing to the Gephi Facebook group will also push you up on the learning curve by exposing you to a variety of cases, questions and solutions that you did not encounter in your usual flow of work with Gephi.
A kind of learning platform!
Are you quite experienced with Gephi?
9. Join the Slack group for Gephi!
This Slack group exists in some form for many years and is used by the core developers of Gephi. I think it became more widely used at the occasion of the Gephi Week for 2022.
It is different from the Facebook group in the sense that it is a channel with a lower frequency of postings, with bursts of discussions around organizing and developing Gephi, rather than users helping other users. So it is quite exciting because you can see ‚ÄúGephi in the making‚Äù but to remain productive, it should remain concentrated on that ‚Äì steering and pushing Gephi forward, not really discussing how to use filters üòâ
If you feel that you could contribute to this kind of discussions, do join here. You are not absolutely certain? Do join and be a listener for the first weeks, and you‚Äôll see whether you want to be part of the discussions or not.
What to expect from it?
Well, that is super interesting to get close to the core of the Gephi app and community! This is the place where you could learn about the things brewing for the next months, and suggest contributions you can make: in skills, time, money, credit, etc.
I would like to emphasize that on this channel the most important are contributions (things you can do), not suggestions (things others should do‚Ä¶). The entire group of Gephi core contributors are pretty overwhelmed already, let‚Äôs give them some help, not a wishlist! üôÇ
Are you a consultant / free-lancer / slasher?
10. Organize trainings and workshops!
It is not always super clear that Gephi as a topic and as an asset is for everyone ‚Äì it doesn‚Äôt have to be contained to the gephi.org website or in the Gephi software. You can develop a free or commercial and / or for-profit activity about Gephi. One obvious activity would be training sessions or workshops about Gephi, or any consulting activity in a given sector, leveraging Gephi. Maybe that when this gets clarified, we‚Äôll see a broader offer for trainings in Gephi?
What to expect from it?
Designing a training or workshop about Gephi is always a great occasion to re-learn what had become habitual. Besides the revenues you will generate from it, it will also establish your credentials in the domain.
Are you an indie developer, a startup or a larger company with resources for R&D?
11. Develop the ecosystem around Gephi!
Gephi provides hooks of an outstanding quality, that make it super convenient to develop your projects with a strong base:

the Gephi Toolkit is a standalone Java library that provides all the goodness of Gephi in of your projects, out of the box, with plenty of documentation
the gexf network format, which the Gephi team developed, provides a rich description of your networks ‚Äì attributes, visual features and dynamic dimension as needed
the Gephi graphstore is the low level, standalone graph engine that powers Gephi and you could use it in your own projects too!
Gephi lite, a web-based version of Gephi for interactive visualizations in the browser ‚Äì read about it in the Gephi blog.

What to expect from it?
Using these Gephi assets in your projects will save you time, not reinventing the wheel of a network app that includes the graph itself but also the algorithms, layouts, filters, management of attributes, I/O machinery etc. that you will also need pretty quickly. By doing so, you serve Gephi as you will naturally get involved in pushing Gephi and its various assets forward.
Are you a developer with significant experience?
It is on purpose that I kept this item for the end of the list. Indeed, we often assume that if we can‚Äôt code, we can‚Äôt contribute to Gephi. The 11 ways to contribute to Gephi listed just before have changed your outlook, I hope. Gephi really needs these 11 first types of contributions!
As a senior developer (or better said: not a full beginner in Java), you can also contribute to Gephi in several ways:
12. Java developer: shine!
Everybody has their own learning path, here is one:

one way to get acquainted with Gephi is to play with the Gephi Toolkit, which is the Gephi headless library for Java. It will give you a sense of how the API is structured, with a strong modular architecture and some not-so-common design patterns (not familiar with SPIs? You will be served! üòÄ).
then you might be interested in developping a plugin, which is another steep learning curve but very rewarding because, upon publication, your plugin becomes available to the entire Gephi user base (you can also choose to keep it private, of course).
in the course of using the Gephi toolkit or developing a plugin, you might open issues on Github. And depending on your expertise and grit, you will also look at the source code of Gephi and find things to solve. This is very welcome, of course.

13. Developer of desktop apps / Rich Client Applications
Gephi is built on top of the Apache NetBeans Platform, which is the Rich Client Application of the NetBeans IDE. If you have a strong interest in NetBeans / RCA / desktop applications / or the intrincaties of targetting a desktop app specifically for Windows of MacOS, you could make contributions of critical importance.
14. OpenGL for Java
I might be sloppy here as I have close to zero knowledge of the domain, but the visualization engine of Gephi is using OpenGL and that is of course quite a tricky aspect. I don‚Äôt have the details but Gephi is in the middle of a major upgrade of the underlying technologies for this OpenGL stuff, so if you or your organization is knowledgeable about this subject, you could also make essential contributions.
What to expect from it?
Gephi is led by developers who are first-class in their trade. Did you know that Gephi won a Duke Award back in the days? Contributing to this open source project would be a great learning experience for everyone involved and would speed up the delivery of key features. Gephi is also an open and free software: if you personally care about contributing to a FOSS, Gephi is a perfect choice ‚ù§Ô∏è.
In the end
If you‚Äôd like to contribute to Gephi in any of the ways listed above, a great place to initiate a discussion would be the Gephi Facebook group. I‚Äôd also love to get in touch! Just to discuss, give suggestions and point to the right person or resource. Don‚Äôt hesitate! I am Clement Levallois and my email is clement.levallois at gephi dot org.

","['Mathieu Jacomy', 'Mathieu Bastian', 'Bastian', 'Heymann', 'Jacomy', 'Venturini', 'Veronica Espinoza', 'Ifeanyi Idiaye', 'Martin Granjean', '', 'Clement Levallois']"
1,2023-01-31 16:17:50+01:00,Intro to the Gephi¬†codebase,"
How is Gephi made? Peek under the hood with Mathieu Bastian in this one-hour video.
It is primarily intended for developers who wish to get oriented with Gephi‚Äôs codebase, for instance to make a pull request or a plug-in. Mathieu gives a practical introduction to Gephi‚Äôs modular architecture, how its internal API system works, how the main modules are structured, and the build and release process.
This lecture was initially given to the participants of the Gephi Week 2022 in Paris (but we have cut the Q&A parts to not waste your time). It‚Äôs now on our YouTube channel. Subscribe!



The slides of the presentation are available down below.
introduction-to-gephi-codebase-and-developmentDownload
",['Mathieu Bastian']
2,2023-01-09 09:53:16+01:00,Gephi 0.10 released,"
Gephi 0.10.0 is here! Download it from http://gephi.org (only patch versions auto-update, it‚Äôs intentional). This time around we focused on a few long-awaited features, while keeping our pace on code and sustainability improvements. This release improves the usability and reliability. Here are 5 highlights:
1. Quick search
Searching the graph was previously only possible within the Data Laboratory. There is now a global quick search feature that allows to find nodes and edges in the graph and highlight them. Each result can be acted upon with the same right-click operations found in the Data Laboratory. Quick search is brand new and we‚Äôre interested in your feedback as we plan to extend it in future releases. 

2. Dark mode
We‚Äôve introduced a new dark look-and-feel in a previous version but a number of components weren‚Äôt adjusted accordingly. We have fixed all of these issues and the dark mode is now fully usable.
New dark mode in Gephi
3. Support for Apple Silicon
Gephi now supports the Apple Silicon architecture. As a result, both x64 and aarch64 bundles now exist for Mac OS. The performance improvements for M1/M2 processors is substantial as Gephi can now run natively on this architecture. It loads much faster and complex operations such as layouts run smoother. 


4. Preview Improvements
We shipped two major improvements to the Preview module: arrows on curved edges and node border matching the Overview style. 
Directed curved edges now have arrows as well. Previously only straight edges had arrows.
Node borders style now match the one seen on Overview: darker node color and size proportional to the node‚Äôs size. The border color and size remains entirely configurable.
5. Project and Workspace Management
We reorganised how projects work in Gephi to make it easier to use and pave the way for future features. 
Gephi now keeps track of all the projects you‚Äôve worked on in a project list. It‚Äôs also now easier to give projects and workspaces names so you can organise your work better. Finally, it‚Äôs now possible to duplicate any workspace with all of its settings.

New workspace management
List of improvements
You can check our changelog in the release page:https://github.com/gephi/gephi/releases/tag/v0.10.0
More about this release
This release is a follow-up to the code sustainability retreat 2022. You can read our report in our last blog post. Not all the features we discussed and worked on are included in this release but it certainly served as an accelerator. We also welcomed contributions from new developers with this release, which is great to see.
Check our road map as of Summer 2021 to have a better idea of where we are going. With this release, we continued to focus on core improvements that pave the way for future big features such as the undo/redo. Specifically, the core improvements to Project Management  bring us much closer to it.
Mac OS Users
Note that some users have been experiencing hangs with previous versions, at startup or when switching perspectives. We are aware of the issue and unfortunately there isn‚Äôt a complete fix or workaround available at this point. We‚Äôre still working on it and you can follow updates on this thread. With this release we hope to have mitigated the issue, while we work on a complete resolution.
As usual, please share your experience/feedback on our Facebook group or on Twitter.
",['Matthieu']
3,2022-11-15 09:59:38+01:00,Gephi Lite,"
Authors: Mathieu Jacomy, Alexis Jacomy, Paul Girard, and Beno√Æt Simard
It is a spin-off
For a long time, one could think of the Gephi as both a piece of software and a project; the purpose of the project would be to develop and maintain the tool. But from the start, our project was about more than Gephi‚Äôs code: websites, tutorials, forums, plugins, events, social media, fundraising‚Ä¶ We now take this further with an unprecedented decision (for us): the Gephi project will host 2 different tools.
Gephi Lite will be a web version of Gephi, with the same basic features, but reduced to a minimalistic package. It will remain similar to Gephi and be compatible with it, but will have less options. It will not be able to open big networks, but it will be simpler and more ergonomic.
It will not dilute our efforts to maintain and improve Gephi. If you think of the energy we can afford to dedicate to Gephi as a cake, you may think that we will now have to split the cake into 2 shares, one for Gephi and one for Gephi Lite. But in fact, we will have a bigger cake. Indeed, the development is taken in charge by a different team, namely Alexis Jacomy, Paul Girard and Beno√Æt Simard from Ouestware.
Bootstrapping Gephi Lite during the Gephi Week
The Gephi community has known Ouestware for a long time thanks to their work on network visualization on the web, to which we must add Guillaume Plique from the Sciences Po m√©dialab. Let us call them the JS community in this context. Over the years, these developers have been contributing to a long series of libraries, prototypes, and tools adjacent to Gephi. Here is a quick list of their collective contributions to network visualization:

Libraries: Graphology, to handle graphs; and SigmaJS, to render them on the web.
Prototypes: ManyLines, to share networks as explorable slides; MiniVan, to share networks online as browsable documents; and a top-secret project to make up networks quickly.
Tools: Retina, an online network visualizer with filtering and search; and Gephisto, a one-click network visualizer for teaching.

We have also given a joint talk about Gephi and JS at the FOSDEM. We mention all of this to highlight that there was a fertile ground for something new. The skills were there, but everyone had pushed their own projects and explored different directions. Could we coordinate our efforts in the future?
Long story short: we met at the Gephi Week, it happened, and the outcome is Gephi Lite. Here is an account of the project after the Gephi Week and a follow-up sprint at OuestWare.
A very early prototype of Gephi Lite: the graph rendering is already functional thanks to Graphology and Sigma.
What makes Gephi Gephi?
We explored that question because we had to answer this: what should Gephi Lite be like? Indeed, what makes Gephi Lite different from the tools above is that it tries to stick to the Gephi recipe. But what is that recipe?
We distilled Gephi to this feature set:

Load data
Render layouts
Compute metrics
Apply filters
Select data
Set the semiotics (appearance panel)
Save data
Export as images
Export on the web
Manual intervention (create and edit data, for ex. attributes)
Plugins (Note: we will leave this aside for Gephi Lite for now)

To which we add:

Gephi Lite must interoperate with Gephi
Reuse the Gephi look and feel when possible (consistency)

We used this list as a starting point to decide Gephi Lite‚Äôs scope.
Sketching the scope of Gephi Lite
About the name: what does ‚ÄúLite‚Äù mean?
Lite means that Gephi Lite will always be at a higher level than Gephi desktop. Further from the metal, as we say. More blackboxed, with more layers of software. More usable, but at the core, less efficient. This is why it will have lower scaling capacities in terms of size of graph.
Lite also means that we aim at less complex usages than Gephi. This principle has to be taken as a general guideline and not a strict rule. Indeed Gephi Lite differs also by the fact that it is on the web. It is a drawback at times, but it also brings opportunities to do things differently and add new features. So Lite does not mean that Gephi Lite is Gephi with missing pieces. It has its own feature set..
We considered the name ‚ÄúGephi Web‚Äù but we decided that making it clear that it would not be as scalable as Gephi would help manage people‚Äôs expectations. The discussion is not entirely closed, though.
Data-driven rendering
Here is where Gephi Lite will differ from Gephi. The semiotic work on the visualization (node color and size, edge thickness‚Ä¶) will always be tied to the data. That is why we call it ‚Äúdata-driven‚Äù.
In Gephi, you can do whatever you want. You can manually paint a bunch of nodes in red. You can paint some nodes with a gradient of colors representing their degree, and other nodes with a color representing a cluster they belong to. You can play with this feature. You can do art. You can do things so weird you could not even explain. It‚Äôs flexible and powerful, but it comes with complications. And notably, you cannot always have a caption, because Gephi cannot keep track of what the colors or sizes mean.
Gephi Lite has a limited set of features, and it sometimes creates opportunities. We decided to allow no manual coloring of the nodes and edges, and to use a rule-based mapping of colors and sizes. For example, you can only apply colors according to an attribute or a simple combination of attributes. Think of the rule as something like ‚ÄúDemocrat blogs in blue and Republicans in red‚Äù, or something a bit more complicated but not too much. In Gephi Lite, the appearance of nodes and edges will be fully determined by such rules. As a benefit, it can keep track of what the colors mean, apply them dynamically, and build a caption. For most users, it will be simpler.
For the record, to make this system work, we settled on this set of features:

No manual coloring.
Add quali/quanti tags on node/edge attributes to help users make meaningful semiotic choices.
Nodes/edge appearance is dynamic: we watch attribute changes.
Appearance is determined by rules which are always applied, even if not in the filtered version. In other words, the modalities taken into account to set colors account for hidden nodes as well. It does not depend on how the network is currently filtered.
Missing values are systematically handled.
Gephi Lite will be able to draw a caption.
Gephi Lite will contribute and use the GEXF new v1.3 spec by prototyping it and contributing to its specifications.
Original GEXF viz attributes will be used as special ‚Äúgexf_viz‚Äù prefixed data attribute when no caption is present (GEXF <= 1.2) to be able to reuse it at export and use those default in the default appearance state.

Appearance panel
Like in Gephi, a dedicated space in the user interface will allow setting the semiotics of the map. In Gephi, it is the appearance panel. A similar space will exist in Gephi (whether that‚Äôs a panel or something else).
As we have just seen, the semiotics are rule-based and dynamic. In addition to this, we decided the following:

Appearance gathers all visual variables to draw nodes, edges and their labels (size, color).
Nodes and edges labels sizing will be dealt with in the appearance bloc.
Considered feature: applying different rules to different parts of the graph (see ‚Äúpartitions‚Äù later).
Appropriately handle missing values, anomalous values (ex: a string among numbers), unexpected values (ex: negative weight), and errors.
Always ask the user how to render undefined values. Undefined values could be the cases above or valid values that have not been set for different reasons. Those can typically be dealt with using a default color and size.

Something we have been discussing but we have not solved yet: where is the caption? We could generate a caption on-demand, but since the appearance is fully dynamic, we could as well have a caption accessible at all times. Is the caption part of the appearance panel? If not, is it redundant? We will be iterating over this question.
The appearance panel in our earliest work-in-progress.
Filtering
The filters UI in Gephi is both too complex for the scope of Gephi Lite, and inconsistent with web UX design. WE have an opportunity to do better, albeit simpler. We chose a new abstraction, that is less flexible but much simpler to manipulate:

Filters are a stack (and not a tree like in Gephi)
Each filter is applied on the graph resulting from the previous filter (they cascade)
The filters can be on nodes or edges
A filter can be related to an attribute, a custom script (written or pasted by the user), or a topological filter (ex: the main component filter).

We have to experiment with the design of filtering, but let us acknowledge that filtering has to be simple for the user. Our priority is to keep our user experience straightforward.
Statistics
Gephi Lite will feature statistics (computable metrics), although with less choice as Gephi. Those statistics are those included in Graphology, and if we add new ones they will also be included in Graphology. We want to make it possible to choose the name of the attribute where the output is generated (with a warning if it already exists).
Layout
Similarly to statistics, we will use the Graphology layout algorithms and possibly extend them.
Not only related to the layout, but let us share with you a complicated question that can give you a practical idea of the design challenges we face. In Gephi, the node size is relative to the layout. They use the same coordinate system. By contrast, in other contexts like with Sigma, the node size may vary independently. The scaling of the layout is, after all, arbitrary. But because Gephi Lite is a companion to Gephi, we want to enforce consistency between them. Therefore the node size should behave similarly to Gephi. It turns out that this behavior conflicts with the current architecture of Sigma, due how the renderer layer behaves. We see no other solution than to introduce a breaking change in Sigma (the v3 is therefore in preparation).
Buckets
The simplification of the filters and appearance systems gets in the way of some popular scenarios that we want to make possible in Gephi Lite. We are therefore adding a new concept to support these advanced uses, in a way that would be transparent to beginners. We call this feature buckets.
A bucket is a set of nodes and edges. A subgraph, technically. But you may think of it as a partition of your network, or a layer, or a selection. It‚Äôs just a way to handle a subset of your network in a few places where we think it is necessary.
The users who do not understand this concept can ignore it completely. It is not required to know what a bucket is in most situations. However, you may need it if you feel limited by the way filters and appearance settings work. For example if you have a two-mode network and you want to set the size of the nodes according to their degree, but with a different scale for each type of node, because one type consists of a few nodes with many links (they would be too big) and the other of many nodes with a few links (they would be too small). If you meet this kind of problem, then using buckets is the way to go.
We are aware that this feature makes the memory structure of Gephi Lite a bit more complicated to write, but we consider that it is worth the effort.
UX organization
We identified a few problems. For instance:

The appearance panel will be heavier than in Gephi
It is just too heavy to display all panels all the time
We cannot have tabs because the browser already has tabs
We do not want to split the app into pages (screens) for similar reasons

The solution we found (currently) entails:

A compact sidebar on the left with shortcuts to different panels: metrics, layout, appearance and filter.
When clicking on a shortcut in the compact sidebar, the corresponding panel opens in an additional sidebar next to the compact sidebar (the panel unfolds in a collapsible column).
A column on the right with graph context (visible nodes and edges) and contextual information and actions (for instance, what is selected etc.)

The organization of the sidebars as it currently exists in our prototype.
Our approach is to design by drafting (no mockups) but leaving aside all graphic design choices for the moment. Those will be designed later on in ‚Äúlive wireframes‚Äù (or as we call it, ‚Äúugly soulless prototypes‚Äù).
We have three personas in mind when making our design decisions:

The cartographer
The data scientist
The collaborator: someone who wants to share the exploration of a network

Cloud file management
Because we are on the web, it can be really useful to save the project‚Äôs file on the cloud. To achieve that we identified the following needs:

To sign-in
To list and/or search the files that are compatible with Gephi Lite
To load a file
To save a file

The first implementation that we want to provide is Github Gist.¬† Gephi has a plugin to publish a graph on the web that generates a GEXF file and saves it in Github as a Gist (we will post about that at a later point). Github Gist allows CORS (a major constraint of this approach), so an internet application can load a gist file like Retina does.¬†
How we see the lifecycle of a file in Gephi Lite:

Use Gephi
Export on the web
Use Gephi Lite
Import the GEXF into Gephi

The last part (importing a remote GEXF file in Gephi) doesn‚Äôt exist yet, but it‚Äôs easy to develop as a plugin. Using Github Gist gives us also the opportunity to see revisions of a file (history management, rollback‚Ä¶). This system is compatible with other providers that we could add in the future like Nextcloud, Google Drive, Dropbox, etc.
MVP
Our design intentions, as stated in this post, can be seen as a long-term road map for the project. Our short-term goal is the MVP, the ‚Äúminimum viable product‚Äù. The MVP is the smallest version of Gephi Lite that can be useful, the point before which it makes no sense to release the tool. Therefore, developing the features of the MVP are the priority. The rest is ‚Äúnice to have‚Äù because it requires the MVP to work. But deciding what belongs to the MVP is not just a matter of technical constraints, it is also a subjective call about what ‚Äúnecessary‚Äù and ‚Äúuseful‚Äù mean in the context of network analysis.
No final choice has been made for the moment, and we need a better view of the implementation complexity of the various components we have to do. But some things are already clear to us.
We do want the following features in the MVP:

Load and save a GEXF file, local or GIST
Visualize (zoom, pan the view, search)
Appearance (node color and size)
Filter (at least one)
Statistics (at least one)
Layout (Force Atlas 2)

We can wait later for:

Buckets
Custom scripts
Data edition

Roadmap
The next work iteration on Gephi Lite should happen in early 2023. There will be no prototype release before then. We will communicate on our advances at that point. See you there!
‚Äì Mathieu, Alexis, Paul and Beno√Æt
","['Mathieu Jacomy', 'Alexis Jacomy', 'Paul Girard', 'Beno√Æt Simard', 'Guillaume Plique', 'Mathieu', 'Alexis', 'Paul', 'Beno√Æt']"
4,2022-10-16 08:38:20+01:00,Gephi Week 2022:¬†debriefing,"
From 29 August to 2 September 2022, about 20 people met in Paris and online to make the Gephi codebase more sustainable, discuss the project, experiment with potential features, improve the design, and get closer to the 1.0 version. It was a follow-up to the 2021 code sustainability retreat, and its theme was community detection. In this post we present what we have done.
The event was sponsored by the SoBigData++ project, hosted by the Sciences Po m√©dialab, and live-streamed by Nicolas Bouchaib from First Link. Tommaso Venturini, Axel Meunier and Simon Bourdieu-Apartis carried the burden of organization. We warmly thank all of them for having made this event possible!
Work done
We have covered a broad spectrum of topics. Find the list below. Just keep in mind that not every project could be finalized during the week. About a half of the contributions will need some time to be released to the users. The forthcoming 0.10.0 version will include the rest, and is to be expected for the end of the year (2022).
These features and experimentations will be developed in upcoming blog posts:

Gephi Lite, an upcoming web version of Gephi. Alexis Jacomy has been paving the road map and leading the discussion about its features.
Revamping the icons in Gephi. C√¥me Brocas reworked the icons system and Mathieu Bastian reworked the implementation. This will also contribute to the upcoming dark mode!
New web export based on OuestWare‚Äôs Retina, with a plugin developed by Cl√©ment Levallois and Alexis Jacomy.
New Neo4J plugin, developed by an expert of that technology, Beno√Æt Simard.
Rethinking how we visualize community detection in Gephi, and notably when it comes to the ambiguity about the groups with which each node can be associated with. Tommaso Elli, Andrea Benedetti, Mathieu Jacomy and Guillaume Plique reflected on visualizing the process of the algorithm. Benjamin Ooghe-Tabanou, √âtienne C√¥me and Guillaume reflected on metrics and visualizations to assess the ambiguity itself.
Video presenting the codebase, by Mathieu Bastian. To be released soon!

These features are developed below in this post:

Allowing the export of node coordinates as columns in the data, an often demanded feature added by Sukankana Chakraborty.
Making the edge types editable in the data laboratory, which matters to multigraphs, by Matthieu Totet.
Exporting the same node borders as in the overview, by Roberto Luna-Garcia.
Exporting with a transparent background, by Roberto Luna-Garcia.
Adding arrows to curved edges when you export an image. Mathieu Jacomy tackled this seemingly simple issue, but it was more complicated than it looked.
Revamping the online documentation for developers notably, by Mathieu Bastian and Matthieu Totet.

Takeaways
A few general points before diving into the details.
Gephi is expanding to the web. We will develop this in an upcoming post, but in short, we are committed to stabilize a web version of Gephi, with a reduced scope but a more modern UX, called Gephi Lite. The team at OuestWare (Alexis Jacomy, Beno√Æt Simard and Paul Girard) has taken the lead of this branch of our project. It will be based on Graphology and SigmaJS, and benefit from the invaluable help of Guillaume Plique.
Gephi is popular, and many people are willing to help the project. This second edition attracted more participants than the last. More varied people, too: designers, researchers, data analysts, content creators, OSINT practitioners, and developers. Those categories are not mutually exclusive.
It is hard to recruit Java developers. One of the reasons seems to be that Java Desktop and Swing are not sexy, but more importantly, we are not that well connected to the Java dev world. We find our contributors either through plugins, or in the overlap of data science and dev: people who use Gephi and happen to also know how to dev. We will keep communicating about our need to stabilize a community of developers, and we believe that a lively non-dev community around Gephi (users, content creators, designers‚Ä¶) contributes indirectly to a more lively dev community.
We still need to stabilize the codebase. We are not ready yet to move to finalizing a version 1.0, at least because we still need to rework the visualization engine to get rid of unmaintained dependencies. This will require a separate effort later on this year.
The Gephi Week was very beneficial to the project. Although we struggle to be attractive to Java developers, the Gephi Week was an occasion for everyone to improve their knowledge about the codebase. Some contributors like myself were rusty, and it was for us an opportunity to exercise our coding muscles again, under the excellent coaching of Mathieu Bastian, who also recorded a guided tour of the codebase. Newcomers could also learn the basics, and the codebase received more scrutiny. Little by little, we build the ability to help and support each other, and improve our autonomy. And beyond the central concern about the sustainability of the codebase, the project immensely improved in many unexpected directions, such as rethinking the design of popular features like community detection, revamping big parts of the visual identity (icons), and building a web sibling to the Java version, Gephi Lite. Even beyond these developments, the coding retreat spawned satellite events like a meeting with the local OSINT community (many Gephi users!), live-streaming with YouTubers, and discussing with renowned researchers. Around the coding retreat, something like a mini-festival is growing by itself.
We remain committed to keeping this event yearly, and we expect it to grow again next year.
Wrap-up videos
As our wrap-up was live streamed, we had the opportunity to share that moment with you. The stream has been cleaned up and sliced. We published it on our YouTube channel as a playlist (see below). The playlist, about 100 minutes-long, is in the order it was recorded. For a more thematic approach, each video will be featured separately as we explain what we have done during the Gephi Week, starting in the next section.


Playlist of the wrap-up on YouTube. 100 minutes.
More about what we have done
Allowing the export of node coordinates
An often demanded feature added by Sukankana ‚ÄúSchuh‚Äù Chakraborty. The (x,y) coordinates of nodes are native to Gephi. They are not like any other attribute insofar as they are used to draw the layout. As an unfortunate consequence, they used to be omitted during the export of data. Which is a problem, notably if you want to draw the nodes in another environment like Tableau. Schuh addressed this issue and added the option.

Screenshot of the settings panel


Schuh (Sukankana Chakraborty) explains her work on making the node coordinate exportable.
Making the type of edges editable
In multigraphs, each edge has a given ‚Äútype‚Äù, also sometimes called ‚Äúkind‚Äù. Those differentiate the represented relations, for example mother, sister, niece‚Ä¶ Like for Schuh‚Äôs issue just before, the edge type was a special attribute, and we could not change it in the data laboratory. As Mathieu Bastian explains below, Matthieu Totet addressed the issue (he could not be present during the wrap-up).


Mathieu Bastian explains his work with Matthieu Totet on making edge kind editable for multigraphs in Gephi.
Exporting the same node borders as in the overview
You may have noticed that the nodes have a different look in the Overview and in the Preview. The Preview (the image exporter) can generally do more than the Overview, but one feature was missing: having node borders colored with a darker version of the node color. Roberto Luna-Garcia added this option to the settings.


Roberto Luna-Garcia showcases his work on adding node borders in the export.
Exporting a PDF with transparent background
Roberto also addressed the need to export network map with a transparent background:


Roberto Luna-Garcia showcases his work on making the background transparent when you export a Gephi visualization.
Adding arrows to curved edges
When Mathieu Jacomy picked this seemingly simple issue, he thought it would take a few hours. Alas, deep down the rabbit hole, a much more fearsome beast awaited. Bezier curves had to be replaced with circle arcs, which came with their own share of implementation weirdness, as each renderer speaks three different languages: SVG, PDF, and Java2D.


Mathieu Jacomy shows his work on adding arrows to curved edges during the Gephi Week.
Revamping the online documentation
How to write accessible documentation for developers? Matthieu Totet and Mathieu Bastian drew inspiration from the OpenRefine community, and reworked the system around Gephi, with a good share of automation.


Mathieu Bastian explains his role in the Gephi Week and showcases his work with Matthieu Totet on improving the online Gephi documentation.
Photos
Most of the week consisted of this collective workshopping that one would totally expect. Andrea, Guillaume, √âtienne, Benjamin, Mathieu B, Matthieu T and Nicolas.
It‚Äôs not just coding, it‚Äôs also thinking without coding. Guillaume and Benjamin enjoy the vibe while Mathieu J contemplates despair.
As expected, one could see networks. Here Guillaume is tinkering with semantic zooming.
Cl√©ment skimming through the book recommended by Mathieu B to understand the codebase better: The Definitive Guide to NetBeans Platform 7, by Heiko B√∂ck.
C√¥me at work redesigning icons that are too specific to be present in existing libraries.
Nicolas hosting a stream with Viviane (Scilabus on YouTube) and Mathieu J.
Nicolas installing the streaming setup for the wrap-up session.
It was exhausting but very enjoyable. Mathieu B, Matthieu T, Nicolas, Cl√©ment and Roberto.

This event is supported by the European Union ‚Äì Horizon 2020 Program under the scheme ‚ÄúINFRAIA-01-2018-2019 ‚Äì Integrating Activities for Advanced Communities‚Äù, Grant Agreement n.871042, ‚ÄúSoBigData++: European Integrated Infrastructure for Social Mining and Big Data Analytics‚Äù (http://www.sobigdata.eu).

 ","['Nicolas Bouchaib', 'Tommaso Venturini', 'Axel Meunier', 'Simon Bourdieu-Apartis', 'Alexis Jacomy', 'C√¥me Brocas', 'Mathieu Bastian', 'Cl√©ment Levallois', 'Beno√Æt Simard', 'Tommaso Elli', 'Andrea Benedetti', 'Guillaume Plique', 'Benjamin Ooghe-Tabanou', '√âtienne C√¥me', 'Sukankana Chakraborty', 'Matthieu Totet', 'Roberto Luna-Garcia', 'Alexis Jacomy', 'Beno√Æt Simard', 'Paul Girard', 'Guillaume Plique', 'Mathieu Bastian', 'Sukankana ‚ÄúSchuh‚Äù Chakraborty', 'Mathieu Bastian', 'Matthieu Totet', 'Roberto Luna-Garcia', 'Mathieu Jacomy', 'Andrea', 'Guillaume', '√âtienne', 'Benjamin', 'Matthieu T', 'Nicolas', 'Guillaume', 'Benjamin', 'Mathieu J', 'Cl√©ment', 'Mathieu B', 'C√¥me', 'Viviane', 'Heiko B√∂ck', 'Roberto']"
5,2022-06-18 08:56:06+01:00,Call for participants: Gephi code sustainability retreat¬†2022,"
We are organizing a second code sustainability retreat (check the first one), and we are looking for Java developers willing to contribute to Gephi‚Äôs core codebase over the next few years. It will be one of the two tracks of a broader event, the Gephi Week, the other one being dedicated to the question of visualizing community structure in networks (we will make a dedicated post for that).
Our goal: Make Gephi‚Äôs codebase sustainable, and beyond this, recruit a team of developers into the project.
When: 29 August to 2 September (one week, Monday to Friday)
How long: 4 to 5 days. Let‚Äôs see how travel goes for everyone.
Where: In Paris, France.
How many participants: We aim at about 5 Java developers, not counting the Gephi core team (~3 people).
Funding: We pay for travel and accommodation thanks to the sponsoring of the SoBigData++ project. We will also offer a small compensation for your time and effort (~100‚Ç¨/day).
What we will do during the retreat: Our lead developer will share knowledge about the codebase. We will get an overview of the state of Gephi, set up a more technical road map (identify the main challenges, decide of the best course of action) and code part of it ‚Äì in short, we will push the cart further. Furthermore, we will get to know each other better and have some good time together.
HOW TO APPLYSend an email to the organisermathieu.jacomy@gmail.com
What‚Äôs next: We will probably meet you online for a quick talk and check that we are on the same page. If too many people apply, we will make a choice and inform you of the result. We will deal with travel and accommodation, and then meet you in Paris!
Feel free to ask if you have any question (to the email above, in comments, or via Twitter to @Gephi).
To know more about this, you can check the report to the Gephi code sustainability retreat 2021.
This event is supported by the European Union ‚Äì Horizon 2020 Program under the scheme ‚ÄúINFRAIA-01-2018-2019 ‚Äì Integrating Activities for¬†Advanced Communities‚Äù, Grant Agreement n.871042, ‚ÄúSoBigData++: European Integrated Infrastructure for Social Mining and Big Data Analytics‚Äù¬†(http://www.sobigdata.eu).

 ",['Mathieu Jacomy']
6,2022-05-11 09:42:13+01:00,Transition to semantic¬†versioning,"
You may have noticed two things.
First, we released several versions recently. Gephi 0.9.2 was released in September 2017. Then the version 0.9.3 in March 2022, with a 4+ years hiatus. Then 0.9.4 three weeks ago, in April 2022. Then 0.9.5 a week ago, in May. What is going on?
Second, the splash screen. Version 0.9.1 and 0.9.2 were like this:

Then version 0.9.3 changed color, to mark the end of the hiatus. It was somehow a big change.
‚Ä¶but since version 0.9.4 it just features the version number 0.9 (without the last bit):

What is going on?
We are transitioning to semantic versioning
Semantic versioning is a certain logic to attribute version numbers. It uses three numbers:
The major version number. It is incremented when the new version breaks compatibility. It matters to the user because they may not want to upgrade, or not yet, because it may break for them.The minor version number. It is incremented when features are added, but in a compatible way. The user generally wants to upgrade, but may not like the changes, so we need a way to refer to that specific version.The patch number. It is incremented when it is just bug fixes. The user always wants to upgrade.
So far, Gephi was not versioned that way. In part because numbers have a cultural meaning. For example, 0.9 feels like we are getting close to version 1.0, and in many ways we are getting closer, but at the same time this does not have to do with the fact that we have release about 10 major versions. If it takes us 15 steps, then so be it. The next minor version will be 0.10 ‚Äì which is not like version 0.1! Weird, but version numbers do not work like decimal numbers.
Semantic versioning is a reasonable and safe way to version, and we are getting there, but not in one go. We will only fully do that from version 1.0.0, which requires meeting a number of goals on our road map. Nevertheless, we need to be able to push bug fixes to everyone, and for that, the best is to use the patch number. Which is why we had two more versions in just a month. But it remains less dramatic than the move from 0.9.2 to 0.9.3, which is why we removed the mention of the patch number from the splash screen. Like for semantic versioning, new patch versions should not feel like new versions to the user. And importantly, patch versions are pushed to all users through the automatic update mechanism. So to recap, it works like this:

As final word, you may wonder: why not have the post-hiatus version numbered 0.10.0 instead of 0.9.3? You‚Äôd be totally right! It should have been. We did not realize it soon enough, unlike the most savvy members of our community. Oops! But we‚Äôre doing it now. Better late than never üôÇ
",['Cultural']
7,2022-04-10 20:14:55+01:00,Gephi 0.9.3,"
Gephi 0.9.3 is here! Download it from http://gephi.org. No crazy new features, but many improvements and bug fixes. Here are 5 highlights:
1. No more Java installation required.
Gephi is installed on top of Java, so you had to install it before Gephi. On some computers, a bug related to theJava path caused the infamous ‚ÄúCannot find Java 1.8‚Äù issue. This does not happen anymore, as you do not have to install Java anymore! It is packaged with Gephi.


2. New look and feel
Gephi now has a flat look and feel. This is much better for Linux users, as well as some Mac users who had issues with the appearance (one did not see which tab was selected etc.).

3. New community detection algorithm via statistical inference
Tiago Peixoto attended the code sustainability retreat 2021 and we implemented a version of his approach to community detection. It uses the same convergence heuristic as the Louvain algorithm (‚Äúmodularity‚Äù in Gephi), also looks for assortative structures, but optimizes a different criterion, based on Bayesian inference.


You can look at Tiago‚Äôs blog for more information about it, or the two papers it is based on:
ZHANG, Lizhi et PEIXOTO, Tiago P. Statistical inference of assortative community structures. Physical Review Research, 2020, vol. 2, no 4, p. 043271.https://journals.aps.org/prresearch/pdf/10.1103/PhysRevResearch.2.043271
PEIXOTO, Tiago P. Bayesian stochastic blockmodeling. Advances in network clustering and blockmodeling, 2019, p. 289-332.https://arxiv.org/pdf/1705.10225.pdf
4. GEXF 1.3
The file format often used with Gephi, GEXF, has been updated to 1.3. This version is more mature and reliable than the previous one, and is implemented in Gephi. Check the announcement for the final specification there:http://gexf.net/history.html
5. High DPI screens
High resolution screens are mainstream. We corrected a number of issues to fully support them.
List of improvements
You can check our changelog in the release page:https://github.com/gephi/gephi/releases/tag/v0.9.3
For plugin maintainers
Check a specific announcement about your plugin right there:https://github.com/gephi/gephi-plugins/discussions/245
More about this update
This update is a follow-up to the code sustainability retreat 2021. You can read our report in our last blog post. Not all the features we discussed and worked on are included in this update. We are working on it, but it‚Äôs just better to release updates as soon as usable improvements are ready.
Check our road map as of Summer 2021 to have a better idea of where we are and where we go. We are still working on big features such as a new graphic engine and the infamous undo feature.
We will also have a code sustainability retreat in 2022 with funded travel and accommodation, if you are interested in contributing to Gephi. We will almost certainly hold it the week of the 29th of August. A call for participation will come soon.
As usual, please share your experience/feedback on our Facebook group or on Twitter.
","['Tiago Peixoto', 'Lizhi ZHANG']"
8,2021-12-06 17:59:49+01:00,Gephi code sustainability retreat 2021:¬†debriefing,"
From 29 November to 3 December 2021, 6 people met in Copenhagen to make the Gephi codebase more sustainable, discuss the project, pave the way to the long-waited version 1.0, and improve the tool overall. Before the event even started, it had already tackled its main goal. In this post we present what we have done.
The event was sponsored by the Aalborg University TANT Lab in Copenhagen, whom we warmly thank, because they basically funded the whole thing, and hosted us. The participants featured a whooping 50% of Mathieux, and more importantly, a healthy mix of skills:
Mathieu Bastian, who was Gephi‚Äôs lead dev for many years, and knows the codebase like none;Mathieu Jacomy, who designed Gephi‚Äôs UX and some of its algorithms, and organized the event;Matthieu Totet, who authored the Gephi Twitter plugin;Eduardo Ramos Ib√°√±ez, Gephi‚Äôs current lead developer;Tiago Peixoto, world-class expert on community detection;and Antonin Delpeuch, the main developer of Open Refine.
We spend the first two days discussing and preparing stuff, and the last three to code. The coding went surprisingly well, compared to many comparable situations, for example hackathons. That is why I wrote above that it had tackled its main goal before it even started: the codebase is sustainable. I know someone who cleans their house before the house cleaning service comes, because they don‚Äôt want to expose the actual messiness of their lives. Similarly, Mathieu Bastian and Eduardo had so well prepared the codebase in anticipation of the retreat that there was nothing left to do on that front. Bravo!
Code sustainability was our main goal, but that is not where it ends. We changed our perspective in the process. Let‚Äôs start with the main takeaways: goals met or not, and what we have learned.
Takeaways
Code sustainability. The codebase is in a good shape and developers can healthily engage with it. However, we can improve the documentation and entry points for aspiring developers.
Enrolling new developers. This did not work so well, but we will get there. We hoped for more new developers to come to this retreat. We had room and funding for two more people, so our call for participation did not work great. However, some developers manifested themselves during the event, when we started communicating about the retreat on Twitter. We aim at more participants next time.
Anticipating the fundraising phase. We learned a lot from the Open Refine project through Antonin. They have a fiscal sponsor: a structure that represents them legally and manages money, allowing them to collect funds and pay developers. This is what we need, and our next step will be to seek one.
Goodwill. There is still a huge amount of it around the project. The response of the public to this event was outstandingly positive. This is important notably to raising funds.
Dev infrastructure. The GitHub issues system, that we use to track and fix bugs, does not work that great for us in practice. We are thinking of an alternative.
Web presence. Reflecting on our website, blog, and online tools was an explicit non-goal: we decided to focus on that another time. But we could see that it definitely required a good reworking. We are aware of it.
Governance. As the project involves funds and more people, we will need to change our model. We want to talk about it with potential fiscal sponsors.
Mailing list. We have to make one, dedicated to developers, at least for the moment.
Achieved
Here is a summary of what we have achieved during the three coding days. Note that it does not directly translate into a release. You will have to wait for Christmas at least for that (it requires more work).
We triaged a lot of issues and tested the contribution process.We fixed a bunch of bugs on our bug bash.We defined and enforced code style on the repository, making it simpler going forward to collaborate between developers.We made the project saving/loading more resilient, preventing users from losing their work due to corrupted .gephi files.We embedded the Java JRE on the Windows and Linux installation, so that users don‚Äôt need to install Java by themselves anymore.We migrated the localization system from Transifex to Weblate, making it easier to translate Gephi.We made unit testing easier so that developers are more productive.We integrated the new visualization engine into the Gephi desktop app. We got it working the first day, but without workspace switch support.The following days we implemented the workspace switch, added support for High DPI screens, and got most of the interactivity and tools working fine.We implemented Tiago Peixoto‚Äôs statistical inference algorithm for community detection and its unit tests (in progress).We sketched a specification for the undo/redo feature.
Discussed
We discussed the state of the project in various ways during the first two days: its community of developers and users, its scientific state, the infamous (lack of) undo, our road map, governance, funding‚Ä¶ We learned a lot from Antonin (Open Refine), and on community detection algorithms from Tiago. That part is hard to transcribe here, but I will write down a few knowledge points we have established.
Our community is broad. It consists of developers and users, and we find those in various scientific fields: digital humanities, SNA (social network analysis), network science (notably teaching). Outside of research, we also find users in data journalism, activism, and in the industry: SEO (search engine optimization), social media listening, patents and papers analysis, intelligence (OSINT), and cybersecurity. We noted that Open Refine does user surveys to know their community better (we‚Äôve done so in 2016).
Gephi is not a commercial product. By that, we mean that we do not want to make Gephi for a specific public. We do not aim at normalizing or formatting usage. We just want to help different kinds of people, even when they want different things. [Mathieu Jacomy‚Äôs note: as I am writing this I realize that part of our audience will rightfully remark that we do have methodological commitments and that we necessarily shape usage. Hence this precision:] In other words, contrary to a company whose interest might be to serve certain consumers to the detriment of others, for example because they have higher purchasing powers, we do not have a fixed persona in mind when we make Gephi. We aim at satisfying the existing users including those who have marginal needs. In short, the features are decided on the pragmatic ground of usefulness to people versus implementation difficulty.
Do people leave Gephi and why? We don‚Äôt think we have a ‚Äúusers leave Gephi‚Äù problem. Here is what we believe: many users naturally move to more advanced tools, yet they may go back to Gephi on various occasions, because it‚Äôs easy to use. Using Gephi is sporadic anyway (one does not need to use it every day). That being said, some developers leave Gephi when they write code, because it‚Äôs easier to script (e.g. Python).
Web presence. Nice things we want to have: an introductory video to Gephi, a list of the best tutorials produced by the community, a simpler website because there is too much irrelevant information, the content for developers should be moved somewhere else (e.g. GitHub), remove the content about the Gephi Consortium (obsolete), a unified navigation bar over our different online spaces, a YouTube channel, and a way to promote the good content produced by the community.
Book. We would like to write one. Or a MOOC. The Gephi 1.0 release would be the ideal moment.
Community detection. Tiago Peixoto presented his work on the topic. He champions a Bayesian inference approach and considers modularity maximization as an obsolete (disproven) method. He also acknowledged that not everyone necessarily agrees in the research community. He documented his perspective in a series of blog posts (1, 2 & 3). We collectively agreed that we would keep the current popular Louvain method, add the more recent Leiden method, and add Tiago‚Äôs statistical inference approach. We will also group them in a specific section of the statistics panel, so that the users can identify them as alternatives, and muscle their own critical thinking by engaging with them.
Undo/redo. We learned how it is done currently in Open Refine, the problems it creates, and how it could be done better. The feature is doable in Gephi, and we sketched an architecture.
Funding. From Antonin‚Äôs feedback on the Open Refine project, we realized that what we needed was a fiscal sponsor, for instance Code for Science and Society. We also aggregated a list of possible funders: crowdfunding, Google Summer of Code (good to engage devs over the long run), Outreachy (idem), Chan Zuckerberg Initiative‚Ä¶
Feedback
Here is what we thought of how it went, to remember for next time.
To be improved: organization of travel and accommodation; we should identify decisions when we make them and note them apart; we should record some of the talks, notably the introduction to the codebase; it would be nice to have a (social) occasion to interact with Gephi users; the big map of the source code was not useful.
Went well: the coding was well prepared, thanks to Mathieu Bastian and Eduardo; the coding went often beyond our expectation; knowledge exchange across Gephi and Open Refine was great thanks to the meeting being in person; the live tweeting was engaging to our community including developers; the T-shirts are nice.
To consider for next time: live-streaming moments; a hybrid format or possibly a 100% online edition; preparing explainer videos.
Photos
Here is a small selection ofpictures of us at work, to get you an idea of what it looked like. We hope it makes you consider joining next time! Also, in the meanwhile, consider proposing a talk and attending the Open Research Tools and Technologies devroom where, notably, the Gephi team met Antonin: it‚Äôs a great place to meet like-minded people.
Mathieu Jacomy explaining stuff
Tiago Peixoto presenting his approach to community detection. On the left, Antonin Delpeuch at work.
Mathieu Bastian discussing how the Gephi architecture could support an undo/redo √† la Open Refine (action stack).

In short, this is the Gephi codebase.

Coding session with Matthieu Totet (left), Eduardo Ramos Ib√°√±ez (center), and Mathieu Bastian (right).

Tiago Peixoto monitoring his algo.
Antonin Delpeuch sieving Gephi issues. Behind, a map of the Gephi source code.
Attempts to track the steps of Tiago‚Äôs community detection algorithm during a debugging session.

A social event in the company of Ann-Sofie and Martin Grandjean, who visited us.

The end of the retreat intersected with the university‚Äôs Christmas party. More social events!

During this party, Matthieu Totet became a Danish legend (here with Anders Munk on the right).
One cannot fully know what will happen at a Gephi coding retreat. Consider applying in 2022!
","['Mathieu Bastian', 'Mathieu Jacomy', 'Matthieu Totet', 'Eduardo Ramos Ib√°√±ez', 'Tiago Peixoto', 'Antonin Delpeuch', 'Tiago Peixoto', 'Antonin', 'Tiago Peixoto', 'Antonin', 'Mathieu Bastian', 'Eduardo', 'Tiago Peixoto', 'Antonin Delpeuch', 'Matthieu Totet', 'Ann-Sofie', 'Martin Grandjean', 'Anders Munk']"
9,2021-08-23 16:23:33+01:00,Call for participants: Gephi code sustainability retreat¬†2021,"
We are organizing a code sustainability retreat, and we are looking for Java developers willing to contribute to Gephi‚Äôs core codebase over the next few years.
Our goal: Make Gephi‚Äôs codebase sustainable, and beyond this, recruit a team of developers into the project in anticipation of a fundraising phase. We believe that Gephi deserves care, that there is enough interest to fund it, and this is our first step to get there.
When: November or December 2021. Exact dates to be announced in September.
How long: About one full week (4 or 5 days).
Where: In Copenhagen, Denmark, and online.
How many participants: We aim at about 5 Java developers, not counting the Gephi core team (2-3 people).
Funding: We pay for travel and accommodation thanks to the sponsoring of Aalborg University. We will also offer a small compensation for the work (~100‚Ç¨/day).
What we will do during the retreat: Our lead developer will share knowledge about the codebase. We will get an overview of the state of Gephi, set up a more technical road map (identify the main challenges, decide of the best course of action) and code part of it ‚Äì in short, we will push the cart further. Furthermore, we will get to know each other better and have some good time together.
HOW TO APPLY: Send an email before September 15 (2021) to the organiser: mathieu.jacomy@gmail.comNote from MJ: Some of you have already applied, thanks a lot! If I‚Äôve answered you, you‚Äôre in the candidates‚Äô list.
What‚Äôs next: We will select participants for this first issue, tell each of you whether you have made it or not, settle the dates with participants, and prepare the retreat together. That‚Äôs a first time for us but we plan to do it again next year and on, see our road map for more info.
Feel free to ask if you have any question (to my email above, in comments, or via Twitter to @Gephi).
Note: We will also organize some sort of side event bridging over the dev/academia demarcation, because the retreat is hosted by a university and because Gephi naturally drives hybrid interest. If you‚Äôre interested in the research side of this, it might be even more interesting to you. More on that later on!
",['Mathieu.Jacomy']
10,2021-07-19 15:10:55+01:00,"Gephi road map, Summer¬†2021","
This road map states, in short, Gephi‚Äôs priorities, long-term and short-term goals, challenges in various areas, and way to go.
Project vision
Gephi is multiplatform, open source, installable, extensible by the community, and with local-based files.
Gephi is an opinionated take on network analysis, and is not intended to be the only network analysis tool. Its focus is visual interaction, and a scalable workflow from 10 to 10,000,000 nodes (assuming enough computing power). Its core features are visualizing, filtering networks, and computing statistics. Gephi is exploration-oriented: visualize primarily for yourself, secondarily for others. More info on the community of Gephi users in this post.
Priorities
Sustainability. Notably maintenance: Gephi needs to work before anything else. This includes: being easy to install (including Java) on all platforms, having the UI work in various screen resolutions and sizes, stability, fix major bugs, and have a sufficiently clear and documented codebase that multiple developers can understand it and contribute.Version 1.0, i.e. current Gephi with a consolidated set of features. We want to release a coherent version of today‚Äôs Gephi before discussing new directions to explore.Stabilizing core contributors. This entails institutional support, fundraising, and discussing governance.Other. Community tools and online presence (forum, website‚Ä¶). Plugins. Web integration (Gephi JS). Evolution of Gephi. Documentation, tutorials and teaching material. Dev community (code examples). Keeping Gephi state-of-the-art over the long term.
Project road map
Until Winter 2021: Gephi dev campaign.
Goal: enrol new developers in the project.
Fall 2021: Gephi codebase sustainability retreat.
Goal: train new Gephi developers, iterate over the technical road map to Gephi 1.0 and discuss its implementation. Set concrete sustainability goals for 2022.
We will invite ~5 developers for a 1-week code retreat in Copenhagen, compensation 100‚Ç¨/day.
2022: Fundraising for Gephi v1.0
Goal: explore opportunities, small (Google Summer of Code, Outreachy) and big (institutional funding, crowdfunding).
2022: Reach Gephi‚Äôs sustainability goals
Goal: make Gephi sustainable again.
Fall 2022: Gephi codebase sustainability retreat, 2nd edition
Goal: train new Gephi developers and iterate over the technical road map to Gephi 1.0
2022-2023: prepare and release Gephi V1.0
Goal: get through Gephi‚Äôs technical road map to version 1.0, with the help of the newly trained developers, and the funding. Release Gephi 1.0.
2023: Gephi 1.0 workshop
Goal: celebrate the release of Gephi 1.0. Recruit new contributors. Iterate over the road map. Prepare the future.
Technical road map to Gephi 1.0
This technical road map was largely established in 2018, more on that in this post. Additionally, design guidelines presented in that post.
UNDO feature, limited to the ‚ÄúGEXF scope‚Äù: network data, metadata, positions, sizes, colors‚Ä¶Default save to GEXF. More stable than ‚Äú.gephi‚Äù though it does not save the state of the user interface.Activity log, possibly coordinated to undo, possibly stored in the GEXF. A plugin is already exploring that direction.Parallel edges. The GraphStore supports it but not the rest of Gephi.New OpenGL engine. Eduardo already prototyped it. It is better but also solves maintenance issues.Curved edges in visual exploration. These are important because they help identifying edge orientation.Quick search in nodes and metadata. It turns out it should be pretty easy to implement.New icons. Many resources are now available to do better and the technical part is trivial.Cleaner data laboratoryUpdate to the latest Netbeans PlatformEmbed Java: no more hassle with installing the right Java version.Install from MacStore. Easier for Mac users.Fix filter composition.Revamp appearance (label color & size, sliders). For instance incentivize rankings as opposed to default unitary mode.GDPR compliance (bug reports contain PII at the moment)Logging (much more logs to facilitate debugging from crash reports)Instrumentation (opt-in statistics about feature usage and crashes)Unit testing (Gephi codebase has 0 unit tests, only Graphstore. Cover the basics like .gephi i/o, filters‚Ä¶)Better statistics reports in HTML5.Label anchor (start, middle, end)‚Ä¶ and possibly some jitter.Better label adjust (one that works better). Possibly with label jitter.
","['', 'Eduardo']"
11,2019-06-12 17:36:27+01:00,The Gephi paper gets the ICWSM Test of Time¬†Award,"
Today at the 13th International AAAI Conference on Web and Social Media (ICWSM) the ‚ÄúGephi paper‚Äù, published ten years ago in the same conference, obtained the Test of Time Award.

I (Mathieu Jacomy) attended the conference and received the award on our behalf. I had the occasion to say a few words, which I share here in a slightly redacted form.
Let me fix a misunderstanding, and pay my debt by acknowledging three persons.
This paper is the ‚ÄúGephi paper‚Äù. If it is still cited 10 years later, it is not because its content is decisive. It is because researchers use Gephi. The paper is a proxy. I thank these researchers, their citations matter to us. And the people who get this award, really, are the Gephi contributors.
It also matters that Gephi has been made by software engineers, not computer scientists. Mathieu Bastian, 1st author, is CTO of a startup in Berlin. S√©bastien Heymann, 2nd author, is CEO of his own startup. The award goes to us, but also secretly to Eduardo Ramos Ib√°√±ez. He is not an author of the paper, but the current lead developer of Gephi, and his invisible work has been crucial to maintaining Gephi to this date. As for me, the designer of Gephi (to make it short), after 10 years as a research engineer I finally decided myself to get a PhD, in a techno-anthropology lab, and I enjoy the irony of receiving a test of time award during that time.
I think a few things deserve to be stated on the occasion of this award. Science is not only done by researchers, of course. Research engineers also do science, although sometimes indirectly. Some designers as well. And some researchers also do engineering or design. This non-strictly-academic work is not so visible. Having a proxy paper for Gephi, and getting this award, help to make this work visible.
The reasoning of the ICWSM committee was pretty much the same, which I greatly appreciate. On behalf of the Gephi team, we sincerely thank the academic community for its outstanding support.
PS: We dedicate this award to our beloved professor, Franck Ghitalla, who passed away in December 2018. We did not left the way to knowledge he showed us.
","['Mathieu Jacomy', 'Mathieu Bastian', 'S√©bastien Heymann', 'Eduardo Ramos Ib√°√±ez', 'Franck Ghitalla']"
12,2019-02-02 20:05:54+01:00,Exploring the dystopian future of a Javascript¬†Gephi,"

Despite Graph Commons, Graphistry, Linkurious or Keylines, there is no equivalent of Gephi in web technologies ‚Äì notably free and open source. But what if?
We gave a talk at the FOSDEM 2019 on that matter. ‚ÄúWe‚Äù is Eduardo Ramos Ib√°√±ez, our lead developer, and Mathieu Jacomy, co-founder and network science researcher, teaming up with experts of Javascript network visualization Alexis Jacomy (Sigma.js) and Guillaume Plique (Graphology). The FOSDEM (Free and Open Source Developers‚Äô European Meeting), is a two decades old conference hosting about 4000 visitors every year. The 2019 edition featured 711 speakers, 746 events, and 62 tracks. It is a major moment of the European open source community. You can look at our ~40 min talk in video below, served with its slides.

Our slides:https://docs.google.com/presentation/d/1SAvbDRgDVLOt5VO_hu0QPDc1OL55yVUlyFGBmj7UrSQ
A quick summary of our talk
We have to face it: the multiplatform is moving from Java to web technologies. Oracle wants a Java that powers backends, not a user interface framework. Gephi‚Äôs OpenGL engine has maintenance issues (JOGL is not maintained anymore). At the same time, modern Javascript is powerful and online graph visualization is a thing. So, should we move to web technologies?
Eduardo has developed from scratch a new rendering engine that fixes our current OpenGL issues and improves the performance of Gephi. It has a lower CPU overhead, which provides a better scalability and better leverages the GPU power. It can be used as a library, and it crashes less thanks to its ability to fall back on supported features on older graphic cards. A key to these benefits is the shader-based architecture. Though the engine is still lacking some features (labels‚Ä¶) a demo is available on GitHub, (requires you to build).
On the Javascript side of the situation, graph visualization can be surprisingly efficient, but it comes with a specific kind of challenges. On the bright side, developing interfaces for the web is easy, that is even what it is made for! Web apps are portable, can work on mobiles and tablets, and even be packaged as applications (Electron). But on the flip side, memory boundaries are unpredictable (we cannot tell when an app will crash because of RAM usage), there is no proper multi-threading, and WebGL is only a subset of OpenGL. Gephi is in a specific spot because it is not a simple app (graph visualization has its own requirements) but at the same time we want to benefit from the traditional web app development to improve the user experience. Because of that the classic web development strategies are not sufficient, but we do not want to embrace the ‚Äúweb as a JVM‚Äù perspective of compiling C++ or Rust to WebAssembly. ‚ÄúGephi JS‚Äù would need a hybrid approach. It would also require to rethink current Gephi, but this is something we are going to do anyway.
We have made a small indicative benchmark comparing current Gephi engine to the new OpenGL engine and to a WebGL engine (Sigma.js v2 alpha). It turns out that the current Gephi engine is sensibly outperformed even by the WebGL engine, as you can see below!

As you can see below, all engines experience a performance drop around 10-100 thousands nodes or edges. The intensity of this drop varies, but it is pretty clear that after 10 million items, a normal computer cannot display a network smoothly enough to allow interactions (it lags too much). That being said, scaling up to hundred thousands nodes/edges is quite a lot already!


Ultimately, we believe that web technologies are the new multiplatform for graph visualization. It comes with very real challenges, but it is also a perfectly valid option. It does not mean that we will drop the Java Gephi, but that we are starting to think Gephi as a project hosting multiple tools and not only as a single piece of software, and that the web technologies will be part of its future.
A screenshot of the new OpenGL rendering engine
","['Eduardo Ramos Ib√°√±ez', 'Mathieu Jacomy', 'Alexis Jacomy', 'Guillaume Plique']"
13,2018-11-01 13:34:17+01:00,"Meet Eduardo, our new lead¬†developer","
Mathieu Bastian has been our lead developer for more than ten years. He is now the proud father of an adorable little girl, congratulations! üçæüéàüéâ At this occasion he decided to step down from his leading role in Gephi development, and hand over the reins to Eduardo Ramos Ib√°√±ez.
Mathieu has been the true architect of Gephi‚Äôs source code. Not only is he its most prolific author, but also the engineer reflecting on its structure, drawing its blueprints, and building the foundations. He transformed my clunky 2007 prototype into an actual software over half a dozen complete refactorings, never drawing back from facing challenges. We owe him everything that makes it work: the ability to be installed, to be maintained, to have plugins‚Ä¶ There would be no Gephi without him. Today is a good occasion to write thank you Mathieu for your years of service to the project! Fortunately he will stay an active member of the community ‚Äì we would be lost without his invaluable knowledge on the most intricate depths of Gephi‚Äôs source code.
So who is Eduardo? Let him present himself:
I am a spanish software developer, currently living in Madrid and I have been helping to maintain Gephi for several years. I love to create interesting software and trying to push its limits, specially data visualization! 
I am kind of a progressive music fan, and a cat lover üôÇ
You can follow or contact me on twitter @eduramiba
Eduardo is the person who knows best Gephi‚Äôs source code after Mathieu, and it is only natural that he is the next in line to lead development efforts. You already know his work since he almost entirely developed the data laboratory, but as often an important part of his contribution is not so visible ‚Äì maintaining the source code, fixing this bug‚Ä¶ This is how he became an expert of Gephi development over the years. He is now developing a new OpenGL engine for Gephi 1.0. Welcome Eduardo, and thank you for stepping up to this new role!
If you want to know more about the situation and future of Gephi, we wrote about it in this blog post.
","['Mathieu Bastian', 'Eduardo Ramos Ib√°√±ez']"
14,2018-11-01 13:02:18+01:00,Is Gephi obsolete? Situation and¬†perspectives.,"

Note: because it‚Äôs a bit long, you can also read it on Medium.
Despite years of collaboration, for the first time, Eduardo, Mathieu and I sit together at the same place. The Gephi community mainly exists online, and its members have few occasions to see each other in person. But we have to talk. Mathieu Bastian is Gephi‚Äôs lead developer and currently lives in Berlin. Eduardo Ramos Ib√°√±ez is the second most prolific contributor after Mathieu and the only other one to know Gephi‚Äôs core in depth. He lives in Madrid. As for me who started our project, Mathieu Jacomy, I live in Paris. We just arrived in Berlin to have an in-depth talk about Gephi: state of the project, its relevance, its future. Our goal is to question the Gephi project and reevaluate our commitment to it. We need a picture of the different options. We start by the elephant in the room: is the project still worth it? Here is our answer.
What is wrong with the Gephi project
We aim at identifying the project‚Äôs strengths and weaknesses. It is not only about evaluating if its benefits counterbalance its issues, but also about finding the right course of actions. Let us start with the problems.
A common issue to niche open source projects, our most limited resource is technical leadership. What does it mean? It is a consequence of Gephi‚Äôs code being fairly complicated. Fortunately this is not an issue for all contributors, for instance it is pretty easy to implement a statistics plugin. Many parts of Gephi could be improved by plugin developers, but not all parts. Sometimes we need to modify architecture itself, or a deep and specific part like the GraphStore engine. When it comes up, only a few community members are competent. Namely Mathieu and Eduardo. Coding these parts would not require crazy skills, but a fair amount of Gephi-specific knowledge. Unfortunately that knowledge is imprisoned in the brains of two people (well it‚Äôs still better than one!). This is what we call the bottleneck of technical leadership. We may choose to fix core issues ourselves or disseminate the knowledge to other developers, but both scenarios require the precious time of Eduardo and/or Mathieu.
Technology is changing, we must adapt, and it wears out technical leadership. It is obvious to developers but not to users: we cannot just produce a version of Gephi that works well and let it be. It would stop working because technology changes. New versions of Java, new operating systems would break features that work well in today‚Äôs environment. Sadly when incompatibilities arise, it is generally for the core developers to deal with. We were in such situation before version 0.9, at a moment when the new GraphStore engine was not ready yet but the Java compatibility broke and during that time, Mac users were not able to use Gephi without a convoluted turnaround. We are not sure to be able to keep up efficiently with these changes because of our limited technical leadership.
Technology evolves in an unfavorable direction. User experience is at the center of the Gephi project. Unfortunately it seems that the Java language tends to drift away from user interface design and development. Admittedly, it has never been a strength of Java. This technology does not support modern UI design ‚Äì I feel like Java assumes that the UI will be developed by an engineer rather than a designer. It may become even worse. With the obsolescence of OpenGL on Mac and the removal of JavaFX from the runtime environment, we could live in a world where multiplatform softwares have a Java brain and a web face. Gephi is based on the JOGL library whose development is increasingly uncertain, which forces us to consider alternatives like WebGL. We understand that it makes sense to delegate modern UI design to a well-established environment (HTML5 and friends). However WebGL is far from OpenGL stability and performance. We think that from the user stance, Gephi is a lot about forging one‚Äôs network exploration and analysis skills on small and easy cases, and scaling them up to larger, more complicated cases. Thanks to its OpenGL engine, it is able to work almost as well for networks of hundred thousands nodes than of tens of nodes. If the ability to visualize huge datasets is key to Gephi, then web technologies are not a viable alternative. We have no definite solution to this issue and we might be facing a technological dead-end in a not so distant future.
Gephi is not only about tech. As a projet it must also face the changes in the lives of its key contributors. Mathieu just had his first child, and more generally our careers follow their own paths that do not always align with the needs of the project. On the one hand we become more efficient at what we are doing, but on the other hand we have less and less time to dedicate to the project. In fact, we just have less spare time. We do not want Gephi to die but we are at risk of becoming tired of the burden it represents. We did not lose our desire for this unexpected journey, but reality often knocks on the door and it would be dishonest to omit this aspect of the situation.
Finally user needs are also changing. Users can access many other systems for network analysis and visualization. A market of web-based solutions emerged and each system found a niche to settle in. A landscape of network tools. Gephi is not necessary anymore, if it ever was. Complex networks were once the most fashionable trick of social science pioneers in a big data world, but now they have UMAP and deep neural networks. Complex networks entered a ‚Äúbusiness as usual‚Äù era. They ceased to draw the attention of the most creative minds. Complex networks had their moment, and it passed. We do not think that it is bad or sad, it might actually be a chance. Nevertheless the context has changed and it is possible that Gephi is not anymore what people need. So what do they need?
What is right with Gephi
We believe that Gephi actually still meets some needs, sometimes in its own unique way. Note that these ideas are not the outcome of a systematic study, but stem out of our empirical contacts with users, during workshops, online, or in our everyday lives. Eduardo, Mathieu and I were pretty convergent in our feelings.
First of all Gephi still has a public and it lies mostly in the sphere of education and research. The Facebook community is active and often features the visualization of digital data in a social science perspective, such as Twitter networks. Since it is the main place where to ask for help, it also attracts a certain amount of exotic tinkering and experimentation. The Gephi community is more than just about using the software, it is also a space where people share what they have done, discuss various topics, and get feedback. It has something of a subculture. We believe that Gephi has some appeal to curious minds, and that it helps a certain public getting engaged with network analysis. Following who mentions Gephi on Twitter also made us realize that ‚ÄúGephi‚Äù is sometimes used as a label to refer to a visual exploration. This seems to be particularly the case in social network analysis (SNA), the community where Gephi spread the most. Since they emerged, digital humanities also made a wide use of Gephi. From what we observe Gephi tends to be more used in social science and by beginners, but it is nevertheless used in natural sciences and by advanced users like data scientists. We can measure its success in the research sector by its 3780 citations (counted in Google Scholar). This public probably finds something in Gephi that it does not find elsewhere, even if just that it is free. This fairly large amount of users is still a good reason to keep maintaining and developing it.
Gephi also has some specificities that could be lost with it in the unfortunate event that its development comes to an end. It has its niche and many users value it for what makes it special. We believe that this specificity comes in three parts. (1) It is a free software that you can install easily on multiple platform. This make it one of the few inexpensive options for teaching, workshops etc. (2) It approaches network analysis from a graphical and interactive perspective that is more intuitive than the math equations of graph theory. It can be understood by non experts such as students and data journalists or social science researchers reaching out of their core competencies. (3) It allows you to scale up your network analysis and exploration skills to much bigger networks. Its learning curve bridges small qualitative networks with large quantitative datasets. The effects of complexity and the way you explore data will be very different but the basic tools at your disposal will stay the same (layout, statistics, filtering‚Ä¶). Gephi is an all-around tool that allows beginners to understand the gist of network exploration. It is at its best in a pedagogical setting where people will leverage practice to improve their data analysis skills.
I want to mention that some of the things that make Gephi appealing are not, in our views, essential. We are well aware that Gephi allows to produce impressive images and that the sight of a spatialization layout unfolding a network have something fascinating. They certainly are an important factor in its success. They also play a role in user engagement with data, which is key to progressing in data science. However these attractive features only make sense insofar as they lead users to improving their network analysis skills. Though Gephi may be used to produce ‚Äúdata porn‚Äù, we believe it does not end there. Toying is just the first step towards the ability to get insights out of networks. Other devices might produce evocative visualizations, but Gephi is one of the few that actively leverage play to arouse interest for science (in the field of network analysis).
Where the Gephi project currently stands
Gephi is not the only software for network analysis and more importantly, it does not want to be. Depending on one‚Äôs style and skills, other options might be preferable. NetworkX might be more flexible if you know Python. To draw diagrams you should head for GraphViz. As a biologist, Cytoscape is the tool your community is using‚Ä¶ and have you tried NodeXL? Different devices do different things and Gephi does not want to be all of that. In the past we have been tempted to build a generic tool for any kind of network, even the dreaded dynamic hierarchical mixed weighted graph. We now want to focus on what Gephi does best and articulate it with other tools that have specific benefits.
We think that Gephi‚Äôs niche is visual, interactive exploration of common types of networks with a set of features that are not too specific, and that scale to large number of nodes and edges. We have observed that most users tend to explore networks of multiple orders of magnitude: from 10 to 10K nodes, or from 100 to 10M nodes‚Ä¶ We believe that it is a key feature. Conversely we do not believe that producing a static map is its main mission. Other tools are in a better position for that task, and we prioritize exploration features over graphic outputs. Instant visual feedback central to Gephi‚Äôs identity. What it is in the best position to do, is making things visible when users apply an algorithm to their network. Fostering this kind of awareness helps users reflect on their method, make sense of their activity, and streamline their workflow.
The Gephi Toolkit has lost most of its relevance. Graph processing libraries like NetworkX have matured and feature most if not all operations you can do in Gephi. The toolkit is basically a separate branch of the project that requires a certain amount of maintenance. It drains forces from the main project. Considering that Gephi‚Äôs source code is open and that it is possible to tinker experiments without the Toolkit, we believe that it would make sense to discontinue it ‚Äì though we did not officially pull the trigger so far.
Refocusing Gephi is not only about removing parts, but also filling holes. For instance though we will deprecate hierarchical graphs because they are not so common, we consider supporting parallel edges, well represented in datasets. In the same spirit, because spatialization layouts are so central to user experience, we consider adding algorithms evaluating the quality of a layout and other features supporting visual network analysis. For instance we believe that edges visualization should be improved in the exploration panel. Last but not least, refocusing Gephi is also about reordering the general user interface to put emphasis on what is important and simplifying what is not. Reflexions about Gephi‚Äôs future user interface have already been presented in a previous blog post.
Finally it is worth talking about the project. We like that Gephi is opinionated, multiplatform, free, and open source. We do not want to change any of that. We will not go as far as writing a manifesto but we state here that Gephi is not a company, we do not want it to be company, and it will not become one. This does not mean that there can be no economic activity involving Gephi, but that when it happens it is not hosted by the project. So what is the Gephi project? An informal network of contributors that involves multiple individuals at various degrees, with no clear boundaries, and where anyone can bring their own thing to the project. However being free and open does not mean that we have no structure: the GPL 3 licence protects the project, codes and contents have authors, and different persons have different roles. Gephi is not only software and plugins but also website, blog, Facebook community‚Ä¶ A good part of people‚Äôs energy goes to producing contents. There is a Gephi project around the Gephi software, and it might become increasingly important.
As a conclusion to this section, lets us summarize what Gephi is and will remain:
FreeOpen sourceExtensible by the communityMultiplatformInstallable as a normal softwareWith local based files (no cloud hosting, works offline)User centricFocused on explorationBeginner friendly (as much as possible)Opinionated ‚Äì it will not always do what other tools do.
Gephi‚Äôs future: version 1.0 and beyond
An important part of our discussion revolves around future features. It is not only about what Gephi should focus on, but also what we can do in today‚Äôs and tomorrow‚Äôs context. As explained above, we have a limited technical leadership and we are constrained by the evolution of Java and OpenGL. This leads us to consider which features can be considered in the current state of Gephi and which features would require a paradigm change. We are not only imagining future Gephi but also future future Gephi (what our project could be if we challenged a number underlying assumptions). We have two different horizons: Gephi 1.0, a focused version of today‚Äôs software, and Gephi 2, a possible future on a different ground.
For Gephi 2 we are anticipating that Java is not fully supporting our needs, and we are considering porting a part (and possibly all) of the software in a different platform. Current technological context incentivizes us to use a Java brain behind a web-based face, but WebGL is still a bottleneck for big networks. We have no good solution but it might emerge in time. We are also acknowledging the blooming of the network analysis ecosystem and we believe that a single software might not be the best solution to address a constellation of user needs. For instance if Gephi focuses more on exploration, it leaves room for a different tool about network publication. This tool might be a part of our project and not be the software itself. It might not sound dramatic but for us it is an decisive psychological step to think of the project as multiple tools and not just the Java software. It brings clarity to our intentions and opens new possibilities to address difficult problems.
Future features: fragments of road map
Gephi 1.0 can feature a number of changes that make sense as a natural extension of today‚Äôs Gephi, while the more dramatic changes are postponed to Gephi 2. We have no clear picture of what Gephi 2 might be, but its existence helps us select the right features for a close future. Here is a list of improvements we would like to implement before moving to a different paradigm.
UNDO feature, limited to the ‚ÄúGEXF scope‚Äù: network data, metadata, positions, sizes, colors‚Ä¶Default save to GEXF. More stable than ‚Äú.gephi‚Äù though it does not save the state of the user interface.Activity log, possibly coordinated to undo, possibly stored in the GEXF. A plugin is already exploring that direction.Parallel edges. The GraphStore supports it but not the rest of Gephi.New OpenGL engine. Eduardo already prototyped an alpha version.Curved edges in visual exploration. These are important because they help identifying edge orientation.Quick search in nodes and metadata. It turns out it should be pretty easy to implement.New icons. Many resources are now available to do better and the technical part is trivial.Cleaner data laboratoryEmbed Java: no more hassle with installing the right Java version.Install from MacStore. Easier for Mac users.Fix filter composition.Better statistics reports in HTML5.Revamp appearance, label color & size, sliders‚Ä¶ For instance incentivize rankings as opposed to default unitary mode.Label anchor (start, middle, end)‚Ä¶ and possibly some jitter.Better label adjust (one that works better). Possibly with label jitter.
In conclusion
Gephi is not obsolete, and we have a good hope to make its strengths more apparent by refocusing our development efforts towards version 1.0. As an additional outcome of our discussion, we now welcome Eduardo as our new lead developer, but more on that in a separate blog post. Thank you for your support and cheers from Berlin!
Eduardo Ramos Ib√°√±ez, Mathieu Bastian, and Mathieu Jacomy
","['Eduardo', 'Mathieu', 'Mathieu Bastian', 'Eduardo Ramos Ib√°√±ez', 'Mathieu Jacomy', 'Mathieu', 'Eduardo', 'Mathieu', 'Gephi', 'Gephi', 'Eduardo Ramos Ib√°√±ez', 'Mathieu Bastian', 'Mathieu Jacomy']"
15,2017-09-26 14:37:59+01:00,Gephi 0.9.2 : a new CSV¬†importer,"
A new version of Gephi has been released! Thanks to Eduardo‚Äôs relentless issue fixing, Gephi‚Äôs overall stability has been improved. Eduardo is the author of the Data Laboratory, and at this occasion he revamped its CSV importer for a more flexible and straightforward user experience.
The new CSV/spreadsheet importer
Did you know that Gephi can export and import just the table of nodes or the table of edges? This feature is useful in many situations, for instance to produce charts in Excel or to clean data in Open Refine. Below we will showcase the new features and more generally explain how to import a spreadsheet as a list of nodes.
To import a spreadsheet you have to reach the Data Laboratory and click on Import Spreadsheet. In the example below a network is already loaded: we will decide later whether the imported nodes will be merged into the existing ones or not.

Gephi is now able to recognize the type of file you upload, and the support of Excel files has been added. Choosing the right separator is crucial since improperly separated columns would compromise the data. In the example below Gephi recognized that the separator is the Comma (as in a properly formatted CSV file).

The encoding of the file is a common issue, notably with languages using accents and special characters. Gephi can guess the encoding and you can manually edit it if necessary. In the example below Gephi correctly guessed the UTF-8 encoding.

Selecting a different encoding would produce errors. Fortunately the¬†Preview table allows you to see them and fix the encoding. In the screenshot below, see how the wrong encoding produces exotic characters in the data.

When you validate these settings, Gephi now opens the exact same panel as when you open a new network. I personally love this addition since it brings more consistency to the user experience. It allows Gephi to provide a number of useful informations like the number of nodes detected or the issues found during the import process.

Do not miss an important feature here: in this panel you decide either to create a new workspace with the imported data or to¬†merge the new nodes with the old ones. This very useful feature was already present at the opening of a new network, but many users still ignore it exists. Mind to select the¬†Append option if you intend to merge the nodes. In that case when an imported node has the same¬†Id than an already present one, the new node data will override the old one.

More info
Take a look at the full list of improvements there:
https://github.com/gephi/gephi/releases/tag/v0.9.2
How do I get this release?

If you have a recent Gephi, the update will be automatically proposed to you
If you have an older version (0.8 or before) you have to download and install manually
This update can be downloaded from http://gephi.org

",['Eduardo']
16,2016-02-15 22:20:44+01:00,Gephi updates with 0.9.1¬†version,"
A new Gephi version has been released and can be downloaded from gephi.org. This version is an update from the 0.9.0 version released last December and mostly addresses issues discovered since.
One notable improvement is a new localization: German! Gephi is now localized in nine¬†languages (English, French, Spanish, Japanese, Brazilian Portuguese, Russian, Chinese, Czech and German) and we hope to continue the momentum on this effort in the future.

Other notable improvements include a better support for parallel edges, appending to existing workspaces and how filters are saved in .gephi files. More than 60 bugs were fixed with a majority of them reported by the community.¬†Thanks to all users who took the time to help!¬†The complete list of bugfixes and improvements can be found in the changelog on GitHub.
In the next few weeks we would like to focus on documentation as there‚Äôs still many features brought in the 0.9.0 version without up-to-date documentation. This is especially important for more complex features such as dynamic graphs, which got a major upgrade.
As usual, please share your experience/feedback on our Facebook group or on Twitter.
",['None']
17,2016-02-06 01:15:06+01:00,A close look at the Gephi user¬†community,"
Last December we asked Gephi users to participate in a¬†survey. The survey‚Äôs main objective was to better understand who users are and what kind of projects they work on. One important dimension¬†we wanted to explore¬†was the diversity of the user community. Through the projects we‚Äôve seen¬†in research and on the web we knew that Gephi users were diverse, but we wanted to quantify it. Ultimately,¬†we aim¬†to make the tool better so it supports users‚Äô needs, but this is a process that requires first a good understanding of who the audience is and what are their objectives. Below we summarized our findings about the profile of users, the types of networks they work with and finally useful usage statistics the community can reflect on.
Profile
The largest share of Gephi users work in academia. The project started in the academic sphere from where it has spread into business, artistic and non-profits domains as well. Working at a profit organization is the second most common occupation, which confirms that network analysis is no longer reserved to scientists.
Q12. What is your occupation? n=285; multiple choice
Given that the largest group of users works in academia, it is not surprising that the most common title among Gephi users is a researcher.
Q14. What is your title? n=285; multiple choice
The user community is also widely spread around the world. Users from 46 different countries participated in this study. This confirms the importance of localization for as many languages as possible (Gephi currently supports eight). While many countries were represented by only a handful number of participants in the study, large concentration of users is, as expected, in the US (23%) and in France (15%). Significant presence in France is predetermined by Gephi‚Äôs presence in universities and businesses within which Gephi was originally founded.
Networks
Social networks¬†are by far the most commonly analyzed type of networks when using Gephi. 70% say that they typically analyze social networks when using Gephi. Social media and semantic network analysis are also common and typically analyzed by 46% and 43%, respectively. The rest of the networks are less common with ecological network analyzed by about 5% of users.
Despite SNA (Social Network Analysis) being the dominant use there is a large variety of other use as well. That said, networks can be analyzed only if the data are accessible and we (the community) still have work to do to ease¬†network collection and formatting.
We always wondered if given occupations are more likely to work with specific types of networks. Based on this study, some differences exist, but they are not as prominent as we have expected. We found that people working at profit organizations are more likely to use Gephi to analyze business and financial networks. While in total 24% use Gephi to analyze business network, it is 44% among those who work in a profit organization compared to only 12% among those who do not work in a profit company. Differences for other types of networks were not conclusive.
Q5. What type(s) of network do you typically analyze using Gephi? n=285; multiple choice
Gephi users commonly deal with a wide range of network sizes. Although the typical network has between¬†100 to 10K nodes, every size from <100 nodes to 1M nodes represent at least 10% of users. In total that is more than 5 orders of magnitude difference in data size, and without taking edges in consideration!
Q6. What is/are the graph size(s) you deal with when working with Gephi? n=285; multiple choice Q7. And what is the TYPICAL size of a graph that you manipulate with Gephi? n=285; single choice
While more than half of Gephi users have never used Gephi to analyse dynamic networks, the vast majority of the community is likely to use it in the future. ¬†This confirms the importance of the set of features related to dynamic networks that has long been one of Gephi‚Äôs primary focus.




Q8. Have you ever used Gephi to work with dynamic networks (networks over time)? n=285; single choice

Q9. How likely are you to use Gephi to analyze dynamic networks (networks over time) in the future? n=285; single choice



Usage
Both online and offline sources are important touch points through which people learn about Gephi for the first time. While web search is the most common way how people find Gephi, word of mouth remains an important channel and is not to be underestimated.
Q2. How did you first learn about Gephi? n=285, single choice
The community is very diverse when it comes to usage frequency which suggests that Gephi users are likely to have diverse needs. Occasional users are likely to have different expectations from a software than regular users. ¬†About one third uses Gephi at least once a week which confirms that there is a relatively large base of heavy users who use Gephi regularly.
Q3. On average, how often do you use Gephi? n=285; single choice
Online tutorials and online forums are key sources for users to learn about Gephi. This confirms the importance of creating and updating online tutorials. It also suggests that the community is well engaged to be able to provide answers one another on online forums and groups.
Q4. What source(s) have you used/are you using to learn how to use Gephi? n=285, multiple choice
Conclusion
This survey is a first, yet important step in understanding the Gephi user community at large. It also gives a general overview of the network visualization and analytics field and we hope this can be useful for others as well. But for us ‚Äì the Gephi leadership team ‚Äì this will help us in our future community management efforts. It will also help design a better tool in the future as we better understand¬†its user community.
In addition, talking about what kinds of projects users work on also helps shape the understanding of what network analytics is used for, and ultimately bring more people to the community. In the near future we want to double-down on this topic¬†and start a series of articles highlighting the most interesting projects. Many of the respondents indicated their willingness to share what they have worked on¬†so there‚Äôs already plenty to choose from.
Finally, to reflect on the diversity of users we believe it¬†simply reflects that networks are everywhere.¬†Analyzing networks¬†bring insights and answers to many different problems.

Appendix

Survey was conducted among Gephi users community. While the results provide a unique view into the Gephi community it is important to clarify that they are not meant to be representative of the entire community world wide.
The survey invitations were distributed throughout the week of Dec 1st 2015 via email, Twitter and Facebook
Final data set contains responses collected between Dec 1st 2015 and Dec 23rd 2015
A total of 285 participants completed the survey

","['Gephi users', 'None']"
18,2015-12-21 16:50:22+01:00,Gephi 0.9 released: Play with network data¬†again,"

We‚Äôre proud to announce the release of the next major version of Gephi! This 0.9.0 version has been more than three¬†years in the making but today brings an exciting new life to this project, and the graph/network¬†analytics community at large. You can download it here for Windows, Mac OS X and Linux.
Gephi is the leading graph visualization software ‚Äì known as the ‚ÄúPhotoshop for networks‚Äù and is open-source and free. It has been downloaded more than a million times and is used by many scholars and data scientists around the world. This new release brings new features in the area of dynamic networks (i.e. network over time) and major compatibility and performance improvements.
Since the last release in 2013, users were facing compatibility issues with Java, which¬†have been¬†resolved with this release. Development had slow down three years ago but had never stopped. In fact, in March 2013 the time had come to think about what Gephi 1.0 would look like and realize it¬†needed a new core. This was by far the most complex project the team had to overcome¬†but developers had¬†a long-term vision and know that future developments will¬†now rely on a robust and extensible core, with world-class performances.
The world is increasingly complex and interconnected. Gephi‚Äôs purpose is to unfold this complex relational data in a way anyone can understand them.¬†It¬†allows you to visualize graph data as a map and¬†create the visualizations to support your narratives.¬†State-of-the-art algorithms make¬†readable layouts, highlighting communities or¬†influential nodes. Visual tools tweak colors and shapes to reveal hidden patterns in the data, helping solving complex problems.¬†More and more network-maps are pictured in online, offline press and other communication media. They spread from science to business, art and activism. People are increasingly exposed to them and learn how to read them. Gephi aims to accelerate this commoditization process by providing free and easy-to-use¬†tools.
What‚Äôs¬†new in Gephi 0.9?
The list is too long! The complete changelog for this version can be found on GitHub‚Äôs release page.
Next steps
There are a few immediate next steps coming up right after this release. Following-up on the recent¬†plugin development announcement we‚Äôll get in touch with plugin developers and start migrating plugins to this version. There‚Äôs more than 80 plugins to update!
Then, we‚Äôll identify and resolve new issues¬†that appeared with this version. A future Gephi 0.9.1 release will come next year to address those.
A Gephi Toolkit release will also be made very soon so developers can update their application built on top of Gephi‚Äôs modules.¬†In the meantime, we‚Äôre interested in users‚Äô feedback and want to hear from you on Twitter or Facebook. Issues can directly be reported on GitHub as well, where the developers are.
Finally, thanks to all contributors and the community for supporting this project!
",['']
19,2015-12-16 00:22:29+01:00,Plugin development gets new tools and opens-up to the¬†community,"
Since the introduction¬†of the Gephi Marketplace and tools such as the Plugins Bootcamp we‚Äôve seen more and more plugins being¬†developed. Even developers with little experience with Java give it a try and succeed in creating their first plugin. We want developers to be productive and¬†make it as easy as possible to get started with plugin development and find help along the way. As the release of the 0.9 version is near, it‚Äôs time to review our plan on that matter and upcoming improvements. Here‚Äôs the summary:

The gephi-plugins base repository (i.e. repository plugin developers fork) is now using Maven¬†for building¬†and is simpler. It contains only 4 files versus 890 for the Ant-based system.
All Gephi modules are¬†published on Maven central, making it very easy to inspect and extend.
Introduction of a custom Maven plugin designed to facilitate plugin development.
The submission and review of plugins will be entirely based of GitHub, making it more scalable and transparent.
A new¬†online portal for plugins is coming up with an easier edit experience and new features.

From Ant to Maven
Before diving into plugins, let‚Äôs first review what has changed on how Gephi is compiled, built and packaged ‚Äì as this directly affects plugins as well. Since the Gephi 0.8.2 version¬†we have migrated our build system from Ant to Maven. This is in line with what the Netbeans Platform (i.e. which Gephi is based on) community recommends. It already has increased the level of automation we‚Äôre capable of as a result.¬†The main benefits are (compared to Ant):

Maven is great at dependencies management. It‚Äôs now very clear what version of what library Gephi depends on, making it simpler to integrate. Dependencies are also downloaded automatically instead of¬†being checked in the codebase
Unlike the Ant-based system, it‚Äôs independent from Netbeans. This¬†allows developers not using Netbeans to develop Gephi and produce a build entirely from the command-line.
Gephi modules can now be placed on Maven Central¬†(i.e.¬†global repository where Maven finds its dependencies). This allows plugins to automatically find the Gephi dependencies online, reducing the manual steps¬†at each Gephi upgrade.

Build assistant
There are a few critical steps we want to help plugin developers with and¬†as a result started the development of a custom Maven plugin. This new tool will work behind the scenes when developers build their plugin. No installation or configuration is needed as it comes already as dependency of the gephi-plugins module. It already addresses common pain points and hope to automate more and more of the steps in the future. This is what it can do as of today:

Plugin validation: The assistant reviews the plugin configuration and metadata at each build. This allows for instance to check if the plugin depends on the correct Gephi version or remind the developer¬†to define an author or license in its configuration.
Run Gephi with plugins: A single command allows to run Gephi with the plugins pre-installed. This makes testing faster than ever when developing plugins.
New plugin generator: A step-by-step command-line tool that creates the correct folder structure and configuration to get started.

In the future, we want to rely on this build assistant to further automate the process and for instance do¬†easy migration or code¬†generation. For instance, you could ask to generate a Layout plugin code and configuration. Afterwards, all needed would be to fill in the blanks in the code.
A new way to review and submit plugins
As the number of plugins grows, it‚Äôs important to¬†have a clear process how plugins are reviewed and updated. We also want this process to be transparent and open to the community. So far, the process was based on the submission of the plugin binaries with¬†a manual review done by the team. This helped us get where we are today, but we want to get¬†it to the next level and propose to entirely move this process¬†to GitHub ‚Äì using the pull-request mechanism. This has multiple advantages, listed below:

Reviewing new/updated plugins can scale because any developer can read the code and contribute to the pull requests.
Developers are already asked to fork the¬†gephi-plugins repository so submitting the plugin via GitHub is a natural extension to it.
There‚Äôs a clear history of each version, comment and what code has changed from one version to another.
It makes it easier to test plugins and detect issues before the plugin is approved.

As part of this migration, we‚Äôll no longer add¬†plugins with closed source code but all existing plugins for Gephi 0.8.2 will remain available. For security and stability reasons, it‚Äôs essential¬†that each plugin‚Äôs¬†code¬†can be inspected before approval. In order for this to work, all existing plugins not already on GitHub or not forking the gephi-plugins repository will need to migrate. For those already set up, the migration will be easier but¬†Ant-based plugins will still need to migrate to Maven.
To summarize, this is what the new 4-steps process looks like for developers:

In¬†the current submission process we ask for¬†additional¬†information such as description, author or license as well as allow the upload of images. Going forward with GitHub, all of these data will directly be defined in the plugin‚Äôs¬†configuration making it easier to update.
A new home for¬†plugins (again)
Plugins are currently available online from the Gephi Marketplace, where users could also reach people providing teachings and support. ¬†We¬†have ideas on how to improve these community services and will be migrating them¬†to a new architecture, starting with the plugins.¬†We will tell you more¬†about these changes in an upcoming post but for now our focus is on¬†developing a new lightweight plugin portal that can directly be connected with the data¬†source on GitHub.
Here is a preview of what it will look like for plugin pages:

¬†
The content of this website will be¬†automatically updated when plugins are published or updated. The way it works is with¬†Travis CI¬†(i.e. continuous integration platform)¬†simply refreshing the JSON file after changes to the plugin repository on GitHub.¬†Developers can even embed images and write the¬†description in Markdown. This will remove entirely the need for plugin developers to login to the marketplace, update NBMs and metadata.
Migrating plugins
This new Maven-based repository along with the new submission process¬†will be introduced with the Gephi¬†0.9 release. Let‚Äôs review what plugin developers need to know to bring their plugin to this new major version.
As with all¬†major Gephi¬†release, plugins compatibility needs to be evaluated as APIs may have changed. In fact, given this new version is based on an entirely redeveloped core it‚Äôs very likely code changes will be¬†required. Hopefully, these changes will often be¬†minor and actually simplify things (i.e less, more efficient code). Documentation will be published on these API changes and core developers will be available to answer questions as well.
Plugin developers will also get contacted regarding moving their code¬†to GitHub with a step-by-step guide. We‚Äôre considering adding a migrate command to the new Gephi Maven plugin to facilitate the transition from Ant but that‚Äôs an unfunded project at the moment (if you‚Äôre interested contributing to that, please let us know). Stay tuned for details right after the release on the path to migration.
And again, thanks for all your hard work on bringing your ideas to life though new Gephi plugins!
¬†
","['Ant', 'Travis']"
20,2015-12-04 00:33:24+01:00,Gephi boosts its performance with new ‚ÄúGraphStore‚Äù core,"
Gephi is a graph visualization and analysis platform ‚Äì the entire tool revolves around the graph the user is manipulating. All modules (e.g. filter, ranking, layout etc.) touch¬†the graph in some way or another and everything happens in real-time, reflected in the visualization. It‚Äôs therefore extremely important to rely on a robust and fast underlying graph structure. As explained in this article¬†we decided in 2013 to rewrite the graph structure and started the GraphStore project. Today, this project is mostly complete and it‚Äôs time to look at some of the benefits GraphStore is bringing into Gephi (which its¬†0.9 release is approaching).
Performance is critical when analyzing graphs. A lot can be done to optimize how graphs are represented and accessed in the code but it remains a hard problem. The first versions of Gephi didn‚Äôt always shine in that area as the graphs were using a lot of memory and some operations such as filter were slow on large networks. A lot was learnt though and when the time came to start from scratch we knew what would move the needle. Compared to the previous implementation, GraphStore uses simpler¬†data structures (e.g. more arrays, less maps) and cache-friendly collections to make common graph operations faster. Along the way, we relied on many micro-benchmarks to understand what was expensive and what was not. As often with Java, this can lead to surprises but it‚Äôs a necessary process to build a world-class graph library.
Benchmark
We wanted to compare Gephi 0.8.2 and Gephi 0.9 (development version) so we‚Äôve ¬†created a benchmark to test the¬†most common graph operations. Here is what we found. The table below represents the relative improvement between the two versions. For instance, ‚Äú2X‚Äù means that the operation is twice faster to complete.¬†A benchmarking utility was used to guarantee the measurements precision and each scenario¬†was performed at least 20 times, and up to 600 times in some cases. We used two different classic graphs, one small (1.5K nodes, 19K edges) and one medium (83K nodes, 68K edges) . Larger graphs may be evaluated in a future blog article.



Benchmark / Graph
SMALL (n=1490, e=19025)
MEDIUM (n=82670, e=67851)


Node Iteration
23.0x
34.6x


Edge Iteration
40.1x
109.4x


Node Lookup
1.6x
2.1x


Edge Lookup
1.2x
2.3x


Get Edge
1.1x
1.2x


Get Degree
2.5x
2.3x


Get Neighbors
3.4x
1.2x


Set Attributes
2.3x
0.1x


Get Attributes
3.3x
4.0x


Add Nodes
6.2x
5.7x


Add & Remove Nodes
1.4x
2.9x


Add Edges
7.7x
3.8x


Add & Remove Edges
3.3x
1.8x


Create View
2851.0x
4762.3x


Iterate Nodes In View
2.7x
1.5x


Iterate Edges In View
11.6x
7.3x


Save Project
2.4x
1.7x


Load Project
0.6x
0.6x


Project File Size
1.9x
1.5x



These benchmarks show pretty remarkable improvements in common operations, especially read ones¬†such as node or edge iteration. For instance, in average it takes 40 to 100 times less CPU to read all the edges in the graph. Although¬†this benchmark focus on low-level graph operations it will bring material improvements to user-level features such as filter or layout. The way GraphStore¬†creates views is different from what we were doing before, and doesn‚Äôt require a deep graph copy anymore ‚Äì explaining the large difference. Finally, only the set attribute is significantly slower but that can be explained by the introduction of inverted indices, which are updated when attributes are set.
And what about memory usage? Saving memory has been one of our obsession and there‚Äôs good news to report on that front as well. Below is a quick comparaison between Gephi 0.8.2 and Gephi 0.9 for the same medium graph above.



Benchmark
Gephi 0.8.2
Gephi 0.9
Improvement


Simple graph
115MB
52MB
2.2X


Graph with 5 attribute columns
186MB
55MB
3.4X



This benchmark shows a clear¬†reduction of memory usage in Gephi‚Äôs next version. How much? It‚Äôs hard to say as it really depends on the graph but the denser (i.e. more edges) and the more attributes, the more memory saved as significant improvements have been made in these¬†areas. Dynamic graphs (i.e. graphs that have their topology or attributes change over time) will also see a big boost as we‚Äôve redesigned this part from scratch.
What‚Äôs next?
All of the GraphStore project benefits are included in the upcoming 0.9 release and that‚Äôs the most important. However, the work doesn‚Äôt end and there‚Äôs many more features and performance optimization that can be added.
Then, we count on the community‚Äôs help to start collaborating with us on the GraphStore library ‚Äì calling all database and performance experts.¬†GraphStore will continue to live as an all-purpose Java graph library, released under the Apache 2.0 license and independent from Gephi (i.e. Gephi uses GraphStore but not the opposite).¬†We hope to see it used in other projects in the near future.
GraphStore API, represented as a graph
",['']
21,2015-11-02 12:07:28+01:00,Announcing Gephi 0.9 release¬†date,"

Gephi has an amazing community of passionate users and developers. In the past few years, they have been very dedicated¬†creating tutorials, developing new plugins or helping out on GitHub. They also have been patiently waiting for a new Gephi release! Today we‚Äôre happy to share with you that the wait will come to an end December 20th with the release of Gephi 0.9 for Windows, MacOS X and Linux.
We‚Äôre very excited about this upcoming release and developers are hard at work to deliver its roadmap before the end of 2015. This release will resolve a serie of compatibility issues as well as improve features and performance.
Our vision for Gephi remains focused on a few fundamentals, which were already outlined in our Manifesto back in 2009. Gephi should be a software for everyone, powerful yet easy to learn. In many ways, we still have the impression that we‚Äôve only scratched the surface and want to continue to focus on making each module¬†of Gephi better. As part of this release, we‚Äôve undertaken one of the most difficult project we‚Äôve worked on and completely rewrote the core of Gephi. Although not very visible for the end-user, this brings new capabilities, better performance and a level of code quality we can be proud of. This ensure a very solid foundation for the future of this software and paves the way for a future 1.0 version.
Below is an overview of the new features and improvements the 0.9 version will bring.
Java and MacOS compatibility
This release will restore Gephi‚Äôs compatibility with the latest Java versions on all platforms. This will resolve issues our users encounter with Java 7 and 8. Compatibility issues with Mac OS will also be resolved and full support for Retina display screens added.
New redeveloped core
This release will improve performance and reliability by a large margin. The graph structure at Gephi‚Äôs core has been redeveloped from scratch and will bring multiple new features, better performance and lower memory consumption. On benchmarks, simple operations such as reading nodes or setting attributes see performance improvements ranging from 2X to 100X. This new core will make many operations in Gephi faster and push the envelope even further in large graphs exploration. Reducing memory usage has also been an area of focus and we have measured a 2X reduction compared to Gephi 0.8.2 on a medium-size graph.
New Appearance module
We‚Äôre introducing a new user module named Appearance designed to combine and replace Ranking and Partition modules. Appearance will group in one place all controls acting on the node or edge appearance. The partition capabilities will also greatly improve as part of this new module and a new palette selector is being added. In addition of the default palettes, we‚Äôre also adding a cool palette generator designed to find the optimal colors (i.e. partitions can be differentiated from each other). Moreover, it will be possible to ‚ÄúAuto-apply‚Äù partitions as well, which is a feature that was only available for Ranking so far.









Timestamp support
This 0.9 release adds a new way to represent networks over time: timestamps. So far, users could only represent time using intervals and that was cumbersome when the underlying network data was collected at fixed time intervals (e.g. one network per day). Starting with this release, Gephi will support both intervals and timestamps to represent evolving network topology and/or evolving attribute values.
GEXF 1.3 support
The GEXF format is also evolving to its 1.3 version. This version improves the support for graphs over time and introduces the ability to represent time using timestamps rather than intervals. In addition, it‚Äôs now possible to set a timestamp or an interval for the entire graph, allowing building collections of GEXF files where each represents a ‚Äúslice‚Äù. This is a common request from the community and we hope this will greatly facilitate the exploration of longitudinal networks.
Multiple files import
With the 0.9 version users will be able to import multiple files in Gephi at the same time. Once the files have been read, two choices are offered, either to import each file into a separate workspace or merge them into the same workspace. The latter is a powerful option when used with dynamic graphs. Indeed, a collection of GEXF files representing the same network over time will be imported in Gephi in a single step.

Multi-graph support
This release will bring support for multi-graphs, where multiple edges can exist between two nodes each with a different relationship. Users will be able to import, filter and run algorithms on these graphs but the support for visualizing these graphs will come in a further release.
New workspace selection UI
We‚Äôve heard users‚Äô feedback and the workspace selection user interface will be improved. The new interface will be a ‚Äútab-style‚Äù interface where each workspace is a tab and switching from one workspace to another only requires a single click. Tabs will be¬†located at the top just under the perspective selection. The previous interface is¬†located at the bottom right corner and will be entirely removed.
Gephi Toolkit release
A new release of the Gephi Toolkit, based on the 0.9 version will be made soon after December 20th.
Bug fixes
We‚Äôve done a serious bug squash and already addressed many difficult issues, more to come until the release date.

Follow us on Twitter or join the Facebook group to get the latest news. If you want to know more about this upcoming release, or want to help out please send us a note.
",['']
22,2015-06-02 10:45:53+01:00,Improving the Gephi User¬†Experience,"
This is an effort to rethink the design of Gephi authored by Donato Ricci, co-founder of Density Design and senior designer at the Sciences Po m√©dialab in Paris, and me, creator of Gephi and an engineer at the same lab (note that I am not Mathieu Bastian, our lead developer and actual powerhouse of the project for the past 10 years).
While this text presents possible improvements and practical solutions, it does not address practical considerations of available labor. Also, be aware that this is not a formal roadmap for future releases but rather a way to open the current state of our reflections for brainstorming. So feel free to share your ideas and comments with us.
There are five main categories that structure the improvements that we currently envision:

Design strategy: Ensure that a coherent design philosophy is applied across the entirety of the project
User interface: Identify and correct user-facing errors
Network-focus: Re-focus design and architecture around the network‚Äôs position of primary importance
Filling in the Gaps: Providing expected functionality
Miscellany: Other minor issues

In addition, we have drafted a UI mockup illustrating some of our propositions.
Design strategy
Gephi was built by engineers without a comprehensive design strategy. This situation is fairly common: engineers approach design in an ad-hoc fashion learning by trial and errors and through casual user observation but without a formal user-testing protocol. Should the tool succeed, it is mostly because the utility triumphs over the pain of use. Gephi is an embodiment of this phenomenon in its current state. Some computer scientists may find it simple, partly because using terrible interfaces is a part of their job, but for many users Gephi is confusing. Geeks of a masochistic tendency may love the tool as a result of digital Stockholm Syndrome, but the bulk of users that could benefit from Gephi find it to be confusing and opaque. In¬†our defense, developing desktop applications¬†is heavily¬†constrained and the Java technology was not helping us to overcome this difficulty. What could a designer do to alleviate this situation? Apply a strategy.
A designer does more than treating the symptoms of poor usability; he or she approaches user experience from its fundamentals. Improving Gephi requires rethinking some of its longest standing features from a new standpoint. A design strategy is the solid foundation upon which we build both a satisfying user experience and underlying software architecture.
Our design strategy fits in five basic points: obtaining substantial and organized user feedback, giving Gephi a clear workflow, implementing a facet-oriented interface layout, reordering panels from the user standpoint, and removing unnecessary features. Each point is explained in further detail along with practical guidelines for implementing potential solutions in the future.
User feedback
We cannot build a sustainable user interface without a quantitative measure of user activity. These data are necessary to support and validate design choices. One approach to obtain this information is to log and collect feedback about interface usage.
An optional logger could be implemented in Gephi to allow users to opt-in to the collection of logs in order to improve the software. Data harvesting can be done as a campaign: for example, we may ask some users to activate it for one month to evaluate the usage of a new interface paradigm that we are testing.
A clear workflow
Users need a clear and visible path to start with Gephi, in particular when opening a new file. We need to remove information to allow users focusing on what is important.
Gephi involves not only the software itself, but also the installer, website and documentation. Our ultimate goal is to make the entry process as simple as possible by coordinating these different elements. We begin by focusing here on just the software itself. We propose to consider that there are only two proper ways to enter in Gephi:

Opening a file (constructing a network from a pre-generated file)
Connecting to a data source (embedded scraper or API connection)

We also need to clarify the roles of the ‚Äúopen‚Äù and ‚Äúimport‚Äù functions. We have to clarify that:

If the user has a file and needs to see it in Gephi, then ‚ÄúOpen‚Äù is the right answer
If the user has an external data source he or she wishes to connect to, there is distinct menu option for this function

Use case: we have observed that some users try to get in Gephi with a table of nodes and a table of links, and do not succeed in finding the right path. The problem there is that it is not explicit that it is necessary to create an empty document, go to the data table, and then import the tables. Since the pattern is ‚ÄúI have files and I want to see them in Gephi‚Äù, then the answer should be under the ‚ÄúOpen‚Äù menu item.
Facet-oriented interface layout
Rethinking overall design has the virtue of allowing for the reorganization of the interface from a user-centric perspective. The current interface relies on the panels system provided by the Netbeans Platform, which provides some beneficial properties for design. We were inspired by Ben Shneiderman‚Äôs motto of ‚Äúoverview first, zoom and filter, then details-on-demand‚Äù and it has been quite successful. However the different views are not articulated in a coherent way and the features sometimes struggle to find the right place in terms of visibility.
We propose three simple guidelines for a better organization of the panels:

The global hierarchy of containers should reflect the generality of the features
Some panels are not facet-dependent: they should not change with the facet
The network should occupy a single place whatever its facet, since it is always the same object


These guidelines have two consequences. First: facet-dependent panels should be contained inside facet-independent panels; which is to say that there is a single container for all facet-dependent features. Second: the facet selector (currently the three tabs on top) has to be inside this container.
We illustrate this with a comparison between a representation of the current layout and a new simplified structure.

Reordering panels from the user standpoint
A part of our design strategy is to reduce visual clutter by grouping panels that are not used simultaneously. Though it is not intuitive, we prioritize separating panels that work well together over grouping similar features. For instance the following panels should be placed in different groups in order to be used combined:

Filters + Layout
Filters + Partition or Ranking
Timeline + almost anything else

With the current panels there are at least three obvious groups: one with filters, another with layout, and the third with the timeline. Generic contextual information is a fourth possible group, but could be placed in a non-intrusive location like the footer. Some panels, like statistics, could theoretically be at home in any group or even as a separate window that could be invoked from a menu.

Panels and groups of panels create two levels, so the ‚Äúwindow‚Äù menu should have two levels too.
Removing unnecessary features
Reducing complexity can also be accomplished by removing features. We have detected at least one clear candidate for removal, but we may find more unnecessary complications to remove.
The ‚Äúpreview‚Äù panel of Gephi has been increasingly simplified over iterative updates. The goal of this feature is to provide a quick way to export cartographies. Users with competence in design tend to rely on third-party tools that provide finer-grained control over the visualization, like Illustrator and Scriptographer. Thus, the focus in Gephi is to provide a quick way to export images that can be manipulated in other tools.
We propose to further streamline preview functionality by removing some advanced label features: they infrequently used, complicated, and at times internally inconsistent with other preview settings. Furthermore, it is not necessary to facilitate changes to features like label and node size and color when such adjustments can be made much more easily using other tools.
User Interface
Donato Ricci has identified various flaws in the Gephi UI. Fixing them is a priority for the future.
User-centric features: reordering workflow
Users think in terms of results they want to obtain. They have an action in mind and they search how to do it. By displaying features according to their result, we can both improve user orientation and reduce the tool‚Äôs learning curve. A few examples of follow.
We propose to aggregate Partition and Ranking under the more accessible term ‚ÄúAppearance‚Äù, and to reverse the order of what is asked to the user. The current interface is organized in the following way: if the user has metadata that can rank the nodes then the user can visualize it using different attributes like color and size. The new interface inverts this approach: if the user wants to color nodes then he or she chooses which metadata to use. The panel may progress like a wizard to reduce cognitive load by drawing attention only to information that is necessary for a given step.

Collapsing advanced layout settings
The current design of Gephi does not respect the general principle of drawing attention to information that is commonly used while obscuring information that is infrequently used.
Tools of the Overview: many problems to fix
The small tool buttons on the left side of the overview panel have a number of problems including:

Confusing icons that do not easily communicate the use of tools
Indistinct icons that do not sufficiently distinguish between different tools
Missing tools that are commonly expected
‚Ä¶

These issues are compounded by evidence that the tools themselves do not provide sufficient utility for common use.
We propose to alleviate some of these shortcomings by putting most of these tools in a collapsed panel and to have a normal panel dedicated to the settings of each tool. We also propose to implement a default tool cursor that draws on common mouse usage paradigms to provide intuitive functionality to users:

A click-drag starting on the background (or an edge) of the view makes a rectangle selection
A click-drag starting on a node moves this node
A click on a node selects the node, the shift key is used for multiple selection
A click on the background deselects
A set of meta-keys changes the click function, for instance the spacebar to switch to the view-panning tool (i.e. the hand in Photoshop)
The secondary-click works the same

Fixing highlight colors
Highlighting works by tweaking colors so that some nodes get more contrast than others. The contrast should depend on the background color, but this is not current implementation. At the very leastthe following should be done:

White background: highlighted nodes darker and other nodes lighter
Black background: highlighted nodes lighter and other nodes darker

Network-focus
As a network analysis tool, the network itself plays an obvious central role in Gephi. We have explored different ways to incorporate the network into the software‚Äôs presentation and have developed some suggestions for modifications that would increase interface coherency.
A different layout for the panels: network as background
In this approach, the network is contained by a ‚Äúbackground sheet‚Äù and floating panels support functions. Such a philosophy has been successfully implemented in other systems like Photoshop or Google Maps. Using the root panel for the network, like grouping facet-dependent panels, fosters the feeling that we always deal with the same object, the network. This operates on the metaphor that we are always manipulating a primary canvas that consists of the network to be analyzed.

Statistics as an invoked panel or window
Statistics tend to be used on demand, and thus do not need to be displayed permanently. Rather, a discrete menu or button could invoke the statistics panel when needed. Removing this visual information leaves more room to focus on what is important, i.e. the network.
Workspaces: more visible, on top
The workspaces need more attention. We propose to show them as tabs on the top of Gephi. It is more natural to have the workspaces above the facet selector in the hierarchy of panels. This is consistent with the prevalence of the ‚Äútab‚Äù paradigm in the browser space.

Filling in the Gaps: Providing Expected Functionality
In addition to the different aspects listed above, users need some well-known common features such as an ‚Äúundo‚Äù function, even if they are complex to implement.
History and undo: feasible if limited to network structure
A visible trace of previous steps, like a proverbial breadcrumb trail, provides users with a sense of orientation and confidence when exploring and manipulating data in a speculative fashion. This also accelerates the learning process by alleviating cognitive load by not forcing users to have to remember a series of unfamiliar steps. This works in tandem with an ‚Äúundo‚Äù feature, which facilitates experimentation without fear of permanently corrupting data.
History and Undo are complex to implement and burden the development of plugins and modules as these functions tend to be deeply embedded in a piece of software‚Äôs architecture. This partly explains why they are not currently available in Gephi. However a prudent approach in Gephi would be to focus recording and reversal of changes to the structure of the network: Nodes and edges, their attributes (including color, size and coordinates), but not the state of panels such as filters, statistics‚Ä¶
An initial approach would be to cover only a minimal set of modifications of the network structure. The history would then contain information about the type of the modification, but not its exact content nor the way it was done (manually, filter, data table‚Ä¶). For instance:

Modifying attribute X for node N / n nodes / all nodes
Modifying color / size / position for node N / n nodes / all nodes
Adding / removing: node N / n nodes / all nodes
Adding / removing: node attribute X / n attributes / all attributes
‚Ä¶and the same for links

The history would not include operations such as exporting files, taking screenshots, modification of views, changes to settings, or other changes that did not directly affect the structure of the network
Protecting irreversible operations
Some operations are irreversible: removing nodes, edges and attributes (and possibly more). Because these operations are definitive and may cause the loss of a certain quantity of work, they should be protected. A classical solution is to ask confirmation for any definitive operation. This is a simple guideline but the result is quite user hostile. We propose a better solution, as implemented in Photoshop: when an irreversible operation has been done, when the user tries to save the network the ‚ÄúSave as‚Ä¶‚Äù window appears instead and proposes a different name (with a suffix number or ‚ÄúCopy of X‚Äù).
Miscellany
A few additional points deserve to be listed, and are done so in no particular order.
Manual versioning
A basic versioning feature would be appreciated: just the opportunity to save with incrementing / adding a number suffix:

‚ÄúMy Network.gexf‚Äù is saved as ‚ÄúMy Network 01.gexf‚Äù
‚ÄúMy Network 11.gexf‚Äù is saved as ‚ÄúMy Network 12.gexf‚Äù

A common shortcut for this is Ctrl+Alt+S.
Generalizing zoom options (more internal consistency)
We can currently set how the zoom impacts text labels. The same feature would be useful for edges, for instance to keep 1 pixel lines whatever the zoom, as well as for nodes, for instance to keep small points whatever the zoom.

Size nodes according to area
Our eyes perceive areas. Setting a ranking to the diameter of nodes is less intuitive than to apply it to the area of nodes. We propose to offer an option to customize ranking by either diameter or area, but set the default to area.
Removing unnecessary settings about labels
Node labels and edge labels should help the user identifying nodes. However, using the color or size of labels to visualize attributes is confusing. Gephi presently contains settings to manipulate labels in this way, these settings should be removed and replaced with a simpler interface.
UI Mockup sample (work in progress)
We present here a possible approach to integrate some of the different suggestions made in this document. Consider the following image as a way to help imagine the future of the Gephi user experience.

As we stated earlier, the purpose of this document is to open up the floor to brainstorming ideas about improving the Gephi UX. Please share your ideas in the comments!
PS: Thanks to Niranjan¬†Sivakumar for his excellent proof-reading üôÇ
","['Donato Ricci', 'Mathieu Bastian', 'Ben Shneiderman', 'Donato Ricci', 'None', 'Niranjan Sivakumar']"
23,2015-02-25 18:53:48+01:00,Gephi is asleep and up to¬†awaken,"

Gephi has been almost inactive since quite a long time: we did not release, we did not fix issues, we did not post on the blog. This lack of recent updates creates an increasing amount of difficulties, including installing Gephi on a recent Mac computer. A lot of users ask if the project is still alive. We understand why you wonder and decided to write this post to explain where we‚Äôre at and provide to the community a preview of what‚Äôs next in Gephi‚Äôs lifecycle.
In short, Gephi is still alive yet asleep, but its reawakening is in sight. However, a series of issues prevents us from doing better right now.
The ambitious yet incomplete 0.9 release
The next planned release is Gephi 0.9 and promises to be a major release with a complete rewrite of Gephi‚Äôs core module. Performance, and especially memory usage for large graphs has been a lingering issue since the first version of the software. As explained in this article written by Mathieu Bastian ‚Äì Gephi‚Äôs lead developer ‚Äì the solution resides in a more efficient graph structure implementation that we named ‚ÄúGraphStore‚Äù. This technology brings many new features and significantly reduces the memory usage but is a large development effort and requires all modules to be adapted. Indeed, the module which stores and manages the graph is pretty much used by every other module (e.g layout, filters, preview etc.).
This work on the core graph module was initiated as part of a larger vision focused towards a 1.0 release, which aims to address a much larger set of problems, missing measures and bugs. As you may know, the current version has a various set of problems. Some issues are preventing the normal use of the software, like the difficulties to install it on a recent Mac OS X (Yosemite and Maverick). Others are incomplete or missing features, such as various user interface design issues or the improper management of categories‚Äô colors. Finally, some internal problems are hidden in the code but nevertheless real. For example, the technology used to code the user interface (Swing) has been replaced by a more modern technology named JavaFX. For the most part, these problems require a deep rework of the code. The good news is that the most difficult part in this 1.0 vision is probably the rewriting of Gephi‚Äôs core graph module, which is what the 0.9 version focus on already.
The current 0.9 developments have reached around 80% completion and many modules, but not all, have already been adapted to GraphStore. A stable version can‚Äôt be released until this reaches 100% and all the modules are converted to the new core implementation. Other important issues such as installation issues on recent Macs have already been addressed in this development version. Finally, a series of bugs will be fixed along with minor features and improvements. Finishing the last modules and releasing the 0.9 version is our current priority.
Limited resources
Like many other open source projects, Gephi‚Äôs development is for the most part unpaid and remains an activity on the side for all contributors. The notable exception is the Google Summer of Code, which sponsored students multiple years in a row to work on the project. Therefore, the project‚Äôs progress depends on the contributors‚Äô professional and personal situations. Although individuals are ready and willing, time is limited and there was just not enough of it lately to make significant progress. Mathieu Bastian is Gephi‚Äôs architect and has been behind the software‚Äôs key iterations since 2007. This time again he holds the keys to its future and has been involved in the GraphStore project. This complex project requires all of his knowledge of Gephi‚Äôs code and is hardly a task someone else could do at this point. Therefore, a part of our development depends on his free time, and we accept it. This situation is temporary though. Indeed, Mathieu will eventually obtain more time to conclude the work on the 0.9 release and Gephi‚Äôs development will be less dependent on him in the future.
In addition, we are working on stabilizing some resources in the long run, but our strategy requires a readjustment. Gephi needs time and energy from good java developers, clear-minded designers, and seasoned software architects. We have to entice skilled people, support their involvement and get the best from their contributions. We aim to improve the management of our limited workforce to make the development more attractive and dynamic. This evolution is organized by our team but benefits from external support. For instance, the Sciences Po m√©dialab, the institution I belong to, provides resources for organizing the project, rethinking the user interface and some coding. These changes may not be immediately visible but we‚Äôre committed for the medium and long term.
What is next
Releasing the Gephi 0.9 version is the immediate next step. This version will include compatibility fixes and the whole new core based on GraphStore. Then, an important project to rework the overall user experience will be kicked off. It requires a technology switch (from Swing to JavaFX) and the overhaul of a majority of the modules but aims to make Gephi simpler and more intuitive to use. We already have a good diagnostic of the user experience issues in Gephi but need to explore different designs. In an upcoming blog post, I will explain our thought process on this topic with the help of Professore Donato Ricci, senior interaction designer. Eventually, the 1.0 version will be worked on and released.
Gephi is almost 10 years old. It is usable but still plagued with many well-known issues. Though sometimes frustrating, it allows users to do¬†incredible things. We think Gephi is still relevant to research, journalism, civil society and more. We are going to give it the renewal it deserves.
Mathieu Jacomy
","['Mathieu Bastian', 'Mathieu Bastian', 'Donato Ricci', 'Mathieu Jacomy']"
24,2013-04-15 18:55:27+01:00,Google Summer of Code¬†2013,"

It‚Äôs a great news, Gephi has been accepted again for the¬†Google Summer of Code for the 5th year! The program is the best way for students around the world to start contributing to an open-source project. Since 2009, each edition is a great success and dramatically boosted Gephi‚Äôs project development.
What is Gephi?
Networks are everywhere: email systems, financial transaction systems and gene-protein interaction networks are just a few examples. Gephi began as a university student project four years ago and has quickly become an open source software leader in the visualization and analysis of large networks. It is an important contribution to the ecosystem of tools used by researchers and big data analysts to explore and extract value from the deluge of relational data and disseminate a better understanding for people to think about a ‚Äúconnected‚Äù world.
Gephi is a ‚ÄúPhotoshop‚Äù for graphs: designed to make data navigation and manipulation easy, it covers the entire process from data importing to aesthetics refinements and communication. Users interact with the visualization and manipulate structures, shapes and colors to reveal the properties of complex and messy data. The goal is to help data analysts make hypotheses and intuitively discover patterns or errors in large data collections.
Gephi‚Äôs project aims at providing the perfect tool to visualize and analyze networks. We focus on usability, performance and modularity:

Usability: Easy to install, an UI without scripts and real-time manipulation.
Performance: Visualization engine and data structures are built scalable. Supporting always-larger graphs is an endless challenge!
Modularity: Extensible software architecture, built on top of Netbeans Platform. Add plug-ins with ease.

Learn more about Gephi, watch Introducing Gephi 0.7, download and try it by following Quick Start Tutorial.
Gephi‚Äôs project is young, the growing community is composed of engineers and scientists involved in network science, datavis and complex networks.
List of ideas
List of ideas are availabe on our wiki. They cover various skills and level of difficulties:
* Completing Legend module ‚Äì Complete the Legend module, which was started in last year GSoC.
* GraphStore benchmark and tuning ‚Äì Optimize and tune GraphStore based on a serie of new well-defined benchmarks.
Please also propose your ideas on the forum. They will be considered and discussed by the community. Have a look at our long-term Roadmap.
Students, join the network
Students, apply now for Gephi proposals. Join us on the forum and fill in the questionnaire. Be careful, deadline for submitting proposals is May 3 (timeline)!
H√©lder Suzuki, student for Gephi in 2009 and now software engineer at Google, wrote:
At Gephi students will have the opportunity to produce high impact work on a rapidly growing area and be noted for it.
View our previous Google Summer of Code projects here and read former students interviews.
Follow Gephi on Twitter

",['H√©lder Suzuki']
25,2013-03-05 18:38:36+01:00,Rebuilding Gephi‚Äôs core for the 0.9¬†version,"

This is the first article about the future Gephi 0.9 version. Our objective is to prepare the ground for a future 1.0 release and focus on solving some of the most difficult problems. It all starts with the core of Gephi and we‚Äôre giving today a preview of the upcoming changes in that area. In fact, we‚Äôre rewriting the core modules from scratch to improve performance, stability and add new features. The core modules represent and store the graph and attributes in memory so it‚Äôs available to the rest of the application. Rewriting Gephi‚Äôs core is like replacing the engine of a truck and involves adapting a lot of interconnected pieces. Gephi‚Äôs current graph structure engine was designed in 2009 and didn‚Äôt change much in multiple releases.¬†Although it‚Äôs working, it doesn‚Äôt have the level of quality we want for Gephi 1.0 and needs to be overhauled.¬†The aim is to complete the new implementation and integrate it in the 0.9 version.
In November 2012, we started to develop a completely new in-memory graph structure implementation for Gephi based on what we‚Äôve learnt over the years and our desire to design a solution that will last. The project code-name is GraphStore and we focus on four main things:

Performance: The graph structure is so important to the rest of the application that is has to be fast and memory efficient.
Stability: The new code will be the most heavily unit-tested in the history of Gephi.
Simplicity: The Graph API should be documented and easy to use for developers.
Openness: If possible, we want GraphStore to be used in other projects and keep the code free of Gephi-specific concepts.

Gephi is known to use a large amount of memory, especially for very large networks. We want to challenge ourselves and tackle this issue by redesigning the way graphs are encoded and stored. Besides memory usage, we carefully analyzed possible solutions to improve read/write performance and optimize the throughput. Stability and simplicity are like food and shelter, and¬†whatever¬†we try to do at Gephi should be simple to use and stable. As we‚Äôre going towards a 1.0 version, we‚Äôre putting more and more efforts to testing and code quality.
Since November 2012, we have been working on GraphStore separately from Gephi‚Äôs codebase and will start the integration fairly soon. The Graph API is very similar to the existing API. However, it isn‚Äôt entirely compatible and several core things changed like attributes, views or dynamic networks and will require a lot of work in some modules. On the other hand, because the GraphStore code is decoupled, it could be leveraged in other projects. For instance, it could serve as a Blueprints implementation as an alternative to¬†TinkerGraph.
Graph structure
A graph (also called network) is a pair of a set of nodes and a set of edges. Edges can be undirected, or directed if the direction of the relation matters. Edges may also have weights to represent a value attached to the edges, like the strength of a connection or the flow capacity. Edges may also point to the same node (i.e. self-loops). Gephi currently supports these features, but they are not sufficient to describe the variety of problems graphs can be helpful with. Multigraphs permit several relationships between nodes and is for instance commonly used to represent RDF graphs. Multigraphs with properties (i.e. ability to attach any property to nodes and edges) have recently become the standard representation for graph databases.

The next version of Gephi will support multigraphs and therefore allow multiple edges between nodes to be imported. The rollout will be done in two phases. The first phase is to allow this new type of graph to be imported, filtered and exported. We will update the importers and add new options to support these graphs. The second phase is to update the visualization and the way multiple edges between nodes look like.
Hierarchical graphs
Since the 0.7 version released in 2009, Gephi has supported hierarchical graphs. Hierarchical graphs let the user group or ungroup nodes so it forms a tree. Nodes which contain other nodes are named meta-nodes and edges are collapsed into meta-edges. Groups obtained from clustering algorithm (e.g. modularity) could also easily be collapsed into meta-nodes in order to study the network at a higher level. We initially recognized the potential of this idea for network analysis and developed a hierarchy-enabled data structure. However, we realized we didn‚Äôt completely fulfill the vision by not providing all the tools to fully explore and manage hierarchical networks. Although the data structure allows it, the software still lacks many features to really make hierarchical networks explorable.
Recently, we are more focused on networks over time and plan to continue to do so. In the past years, users have shown steady and continuous interest in dynamic networks and we haven‚Äôt really seen a strong interest in hierarchical networks. Therefore, we propose to remove this feature from next releases. On the developer side, cutting this feature will greatly simplify the code and improve performance.
Dynamic networks
Networks that change over time are some of the most interesting to visualize and analyze. We have heavily invested in supporting this type of network, for instance by developing the Timeline component. However, dynamic graph support was added after the current graph structure implementation was conceived and therefore remains suboptimal and difficult to scale. Now that we have enough hindsight, we can rethink how this should be done and make it simpler.
One pain point is the way we decided to represent the time. Essentially, there are two ways to represent time for a particular node in a graph: timestamps or intervals. Timestamps are a list of points where the particular nodes exist and intervals have a beginning and an end. For multiple reasons, we thought intervals would be easier to manipulate and more efficient than a (possibly very large) set of timestamps. By talking to our users, we found that intervals are rarely used in real-world data. On the code side, we also found that it makes things much more complex and not that efficient at the end.
In future versions, we‚Äôll remove support for intervals and add timestamps instead. We considered supporting both intervals and timestamps but decided that it would add too much complexity and confusion.
Graph structure internals
Graph structures design is an interesting problem to solve. The objective is quite simple, yet challenging: how to best represent an interconnected graph so it‚Äôs fast to query and compact in space? Also, how to keep it simple and serve a large number of features at the same time?
Graph storage
Our goal is to develop a thread-safe, in-memory graph structure implementation in Java suitable for real-time analysis. You may ask how this differs from a graph database or a distributed graph analysis package. In a few words, one can say the requirements are quite different.
Graph databases like Neo4j, OrientDB or Titan store the graph on local disk or in a cluster and are optimized for large graphs and large number of concurrent users. Typically, the networks are much larger than what can fit in memory and these databases mostly focus on answering traversal queries. In the environment where graph databases operate most of the needs can be converted in some sort of traversal query (e.g. friends of X, tweets of Y). Traversal queries are also the reason why graph databases scale to billions of nodes. Indeed, for each traversal, only a subset of the graph is accessed. This is quite different from Gephi, which by its nature of being an analysis software needs to access the complete graph. For instance, when a layout is running Gephi needs to read the X,Y position of each node as quickly as possible. Although reading from the disk can be very quick as well (e.g. GraphChi), it‚Äôs limited to sequential access and things become more complex that way.
Because of the real-time requirements, we want to keep our graph data in memory accessible at all time. However, we want to make it easy to connect to external data sources, and graph databases in particular.
Reducing overhead
In computer science, overhead is any combination of excess or indirect computation time, memory, bandwidth, or other resources that are required to attain a particular goal.
GraphStore heavily relies on Java primitives, arrays and efficient collections library like fastutil. We are reducing overhead by simply avoiding using too many Java objects, which are very costly. Instead of using maps, trees or lists, Nodes and Edges are stored in large arrays which can be dynamically resized in blocks. For instance, iterating over the graph should be extremely fast because the CPU caches array blocks. This may sounds obvious but performance optimizations are tricky in Java because of the JVM and the uncertainty of what makes a difference and what doesn‚Äôt. In his ‚ÄúEffective Java‚Äù book, Joshua Bloch writes ‚ÄúDon‚Äôt guess, measure‚Äù and that‚Äôs still true today. For our project, we rely on well-defined micro-benchmarks to see where the bottlenecks are and how to make our data-structure more cache-friendly and more compact in memory. When the graph contains millions of edges, every byte saved per edge can make a large difference at the end.
In terms of speed, we focused on optimizing the most common operations, which are iterating over all the elements and consult nodes‚Äô neighbors. Typically, a layout algorithm needs to read the neighbors of every node at each iteration. Neighbors can‚Äôt simply be an unsorted list because of the removal complexity: to remove a node, you need to know where it is. The current Gephi graph structure uses a binary tree to store the node‚Äôs neighbors. Although the complexity is logarithmic, every node in the tree takes extra memory and logarithmic complexity is still suboptimal. After isolating the problem in a benchmark, we found that using a double linked-list is the best solution for our requirements and achieves a O(1) complexity, as it fulfills both a quick iteration and quick update. Here is a snapshot of the solution:

Every edge has 4 integer pointers to the next in/out predecessor and successors and a separate dictionary would help to find the right edge based on the source and destination pointers. Each node has a pointer to the first edge in the linked list (i.e the head). Node ids are integers (32 bits) so one can easily create a long->Edge dictionary by encoding the source and destination node into a single long number (64 bits). The diagram intentionally leaves out the multigraph support for simplicity. In reality, nodes can have multiple head pointers, one for each edge type. Each edge type is represented by a integer index.
Views
Views are one of the most useful aspects of Gephi‚Äôs graph structure and are mainly used behind the scenes in the Filter module. A view is a graph subset (i.e. a subgraph) which remains connected to the main structure, so if a node is removed from the graph, it‚Äôs removed from the views as well. For instance, when users create a ‚ÄòDegree Filter‚Äô, Gephi creates a view and removes all the nodes which don‚Äôt fulfill the degree threshold. Multiple views can co-exist at any time in the graph structure. In the current graph structure, a node tree complete copy is done for every view and we found that this can be very inefficient.
In the new version, the way views are implemented is very different and should yield to better performance. Instead of doing a copy of the nodes, we maintain bit-vectors for nodes and edges. Because these elements are stored in large arrays with a unique identifier, it‚Äôs easy to create and maintain a bit-vector. When developers obtain the ‚ÄòGraph‚Äô object for a particular view, the bit-vectors are used behind the scenes to adapt iterators and accessors. This solution should make filtering for large graphs much quicker. One drawback is that whereas the current implementation copies and then trims the view, GraphStore work with bit-vectors but continues to access the complete graph. In other words, if the view represents only 1% of the original graph, it still needs to iterate over the 100% to find which elements are the 1%. Even though this sounds bad, our benchmarks show it‚Äôs a very fast operation and we win overall because of the reduced overhead of duplicating the graph. Moreover, we can introduce some caching later to optimize this further.
Inverted Index
When you‚Äôre using the Partition module in Gephi, you‚Äôre manipulating some sort of inverted index. Nodes and edges have properties like ‚Äògender‚Äô, ‚Äòage‚Äô or ‚Äòcountry‚Äô, and these properties are contained within the nodes and edges objects. An index is a simple data structure which allows to retrieve the list of elements for a particular value. For instance, the partition module needs to know what is the number of ‚Äòmale‚Äô or ‚Äòfemale‚Äô nodes for the ‚Äògender‚Äô column. When the column is a number like ‚Äòage‚Äô, it also needs to know what is the maximum and minimum value. Unlike the Ranking module and its auto-apply feature, the Partition module is not refreshed in real-time and therefore difficult to use when the graph is changing a lot. We have decided to invest in this feature for the future release and are building a real column inverted index in the graph structure. The index will simply keep track of which values exist for each column and which elements are holding this value. The index will be updated in real-time as elements are added, removed or updated.
The ability to quickly retrieve elements and counts based on specific values will be very useful in many different modules like Filters, Partition or Data Laboratory. New APIs will be added for developers to use the newly created index interface. As we‚Äôre working on attributes storage and manipulation, we‚Äôll also merge the Attributes and Graph API because they are so interconnected that it doesn‚Äôt really make sense to have them separate. The interfaces that developers are familiar with like Table or Columns will remain the same.
Events
In software programming, events are a common way to inform other modules that something changed. In Gephi, we also use events to convey graph updates events to inform other modules about updated nodes or edges. In the new GraphStore, we‚Äôll stop using events to transport graph modifications because of the large overhead due to the creation of event objects. Indeed, when 10K nodes are added to the graph, the existing¬†structure¬†literally creates 10K event objects and puts them in a queue.¬†Although the event queue is compressing objects of the same type, the overhead to create, queue, send and destroy large amount of small Java objects is too large.
Instead of a push model (i.e. the emitter is pushing updates), we want to rather promote a pull model (i.e. the listener pull updates from time to time) for future releases. A similar system is already in place to link the graph and the visualization module and it has been working without a glitch. We‚Äôll develop the tools to easily calculate graph differences between a listener module and the graph structure. By removing the bottleneck, write performance should greatly improve.
Timestamps
As said earlier, we‚Äôll add timestamps support to represent dynamic networks. Instead of using a time interval, a timestamp array will be associated with nodes and edges. For element (node/edge) visibility, each timestamp represents the presence of the element at that time. For example if a network snapshot is collected every month for a year, each node will have up to 12 different timestamps. The timestamp itself is a real number and can therefore represents an epoch time but also any other value in a different context. For a dynamic attribute, the time+value is simply represented as a list of (time, value) pairs.
To support the timeline and dynamic networks algorithm, we‚Äôre developing an inverted index for timestamps so we can make time filtering very quick. One good thing about intervals is that it‚Äôs very easy to know if two intervals overlaps with each other. With a flat list of timestamps, one can‚Äôt avoid to go through the entire list. The index will essentially map timestamps to the nodes and edges elements in the graph and therefore solves this issue. The Interval tree implementation which we are currently using to store intervals is based on a binary tree and is very costly in memory because of all the Java objects overhead. Using simple arrays should reduce overhead and improve performance for large dynamic networks. When computing a dynamic network algorithm (ex: Clustering coefficient over time), we‚Äôre using a sliding window over the graph so the ability to quickly filter is critical as it impacts how fast the graph refreshes.
Saving/Loading
Saving and loading the graph structure into into/from a file (or a stream) is another critical feature. When a user saves a project in Gephi, the graph data structure is serialized in XML and compressed into a .gephi file. If you worked with project files in Gephi, you may have experienced corrupted files issues or errors when loading a file. We‚Äôve done our best to fix these problems but some still remain. We‚Äôre rethinking how this should be done in GraphStore and are making a call to rewrite the code from scratch. Our approach will rely on a lot of unit tests to make sure the code is stable so we don‚Äôt repeat the same issues in future versions. Please note that this concerns the .gephi files only and existing importers (e.g. GEXF, GraphML) will remain the same.
Concerning the GraphStore serialization, we‚Äôre abandoning XML in favor of pure byte arrays. That should yield to better performance and reduced project file size. We‚Äôll create a custom reader for previous Gephi versions so you can still open your existing projects. Other modules like Filters or Preview will continue to use XML as it‚Äôs working just fine.
Next steps
This is the first post about the Gephi 0.9 version and more will come soon. We‚Äôre excited about the current developments and hope to hear from you. Please join the gephi-dev mailing list to learn more about ongoing projects and contribute. We need your ideas!
Follow us on Twitter!
","['Neo4j', 'OrientDB', 'Titan', 'Joshua Bloch']"
26,2013-02-20 13:29:35+01:00,A month of Gephi¬†Marketplace,"
¬†
Computer Science & Engineering Graduate from the Compi√®gne University of Technology, Guillaume Ceccarelli has been Gephi‚Äôs SysAdmin since 2008 and Web Developer since 2012. When he‚Äôs not by day working in the financial world, he freelances and stays close to ongoing entrepreneurship ventures.
Four weeks ago, we launched the Gephi Marketplace.
Haven‚Äôt taken a look yet? Didn‚Äôt know it existed? Take a few minutes to check it out now! It‚Äôs right here, waiting for you.
Why the Gephi marketplace?
For a long time, we felt like we lacked a central point of access when it came to what everyone was doing to improve or build upon Gephi. On one hand, our forums allowed for discussions to happen but they didn‚Äôt really enable anyone to share their work easily or to find out about one another. On the other hand, the wiki as well as our main site, served more as official portals to spread the word or to explore knowledge around Gephi, but they didn‚Äôt seem like a good fit to showcase the work our community was doing.
A little while ago, we decided to fix that.
The spirit behind the marketplace is simple. When we started, our idea was:

To provide Gephi users with easy means to find and learn more about what the community was building for and around Gephi
To give creators and people working with Gephi a way to publish their work and make them known to the entire community, without the overhead of a complex and lengthy process

This meant creating the central point for Gephi Plugins and what we call Gephi Services, which eventually became the Gephi Marketplace.
Before the marketplace existed, plugins were submitted and downloaded through the old plugin center, which required authors and the Gephi staff to go through a tedious process, creating a lot of work and unnecessary frustration for everyone. In addition, the system didn‚Äôt allow authors to update their own plugin pages, or to submit a different plugin for different versions of the Gephi application, a feature which was long requested before we finally became in a position to deliver it to you.
A new world of plugins
Now, every plugin download, even from the Gephi Application itself go through the marketplace! It means that as soon as a plugin goes live on our new platform, it‚Äôs directly available to every Gephi user around the world. Even if you haven‚Äôt made a plugin yourself, chances are you‚Äôve already used the marketplace without realizing it!
Speaking of around the world, here‚Äôs a geographic breakdown of Gephi plugin downloads within the past 30 days:

Isn‚Äôt it impressive? 1169 plugin downloads and every continent is represented! (ok, not every single one. Props to the first Gephi user who‚Äôll download a plugin from Antartica!)
It¬†makes us extremely proud to help and foster such a vibrant community of Gephi users around the world. Remember that this map is for the last 30 days alone!
Today, we have 38 plugins listed on the marketplace, and we‚Äôve made sure you can post your creations as easily as possible. It takes no more than 5 minutes to first fill in the plugin upload form, and we usually get back to you within 24 hours, so you can make your work available to thousands in record time!
A world of services
As briefly mentioned before, we‚Äôre also listing Gephi Services on the marketplace.
Over the years, we‚Äôve noticed that a community of professionals and enthusiasts started providing services to the community. We‚Äôve seen people doing trainings on Gephi, others integrating Gephi into data analysis workflows, or even create studies using Gephi as their tool of choice. We thought it was about time these fine folks got easier to find!
Every service provided by the community, for free or with a fee, is welcome to be listed. We already have a few, and to be honest we would love to see more of them!
Listing the services you provide on the Gephi marketplace is easy, and like with listing plugins it‚Äôs completely free, regardless of what you choose to charge for your work. We‚Äôre not here to collect fees. We just want to help other people know about your work, and to help you easily be found and easily be reached.
Following the same simple form submission process you can use for plugins, you give us all the info on what you‚Äôve got for the community, you click ‚Äòupload‚Äô, we get back to you, and then you have yourself a listing!‚Ä¶ Which you can then customize to your liking, and for which you can include every single bit of information you want, and even a great copy! So not only can you let everyone know about what it is that you do, but also how truly wonderful it is to work with you and your expertise. So?
And now back to you.
Any question? Feel free to comment below! We‚Äôll be glad to help you get started. And if you‚Äôd like to be kept in the know of what‚Äôs newly getting posted on the Marketplace, the RSS feed is this way.
In the meantime, thank you for your continued trust and your use of Gephi as your Graph Exploration and Manipulation tool of choice! It is our humble pleasure to serve you all.
See you soon on the marketplace! üôÇ
",['Guillaume Ceccarelli']
27,2013-02-12 07:20:59+01:00,rgexf: An R library to work with GEXF graph¬†files,"
¬†
George Vega is an economist working at the Chilean Pension Supervisor and cofounder of nodoschile.org. His research interests are Statistical Computing, HPC, Complex Systems and Public Policy.
The first R library to work with GEXF files, rgexf allows both writing (exporting) and reading (importing) .gexf files.
Features:

Writing and reading GEXF files
Writing dynamic graphs
Writing graphs with attributes (boolean, numeric, char)
Writing graphs with VIZ attributes (color, size, shape)
Building GEXF graphs from scratch (node/edge by node/edge)

rgexf is written in such a way that it is not necessary to have knowledge about XML.
Some examples:
# Installing from CRAN and loading
install.packages(""rgexf"", dependencies=TRUE)
library(rgexf)
# Reading lesmiserables graph (and summarizing)
lesmiserables <- read.gexf(""http://gephi.org/datasets/LesMiserables.gexf"")
summary(lesmiserables)
# Building a GEXF class object (includes data frames of nodes/edges +
# XML representation of it) from two two-column data.frames
mygraph <- write.gexf(nodes=people, edges=relations)
# Exporting to some place
print(mygraph, output=""mygraph.gexf"", replace=TRUE)
# Creating a GEXF object from scratch (and adding a node)
mynewgraph <- new.gexf.graph()
mynewgraph <- add.gexf.nodes(mynewgraph, id=1, label=""George"")
The source code plus more examples can be found on the project website.
For suggestions, bug reports or support (any) ask me through Twitter @gvegayon or just write me an email to george [dot] vega [at] nodoschile [dot] org
George Vega Yon
","['George Vega', 'George Vega Yon']"
28,2013-01-09 09:11:47+01:00,Graph visualization meet-up in¬†Paris,"
Meetup on graph visualization: join us the 24/01 in Paris
Neo4j, the leading graph database software, will be organizing a meetup on the visualization of graphs. It‚Äôs free, if you want to come you just have to register here.
Graph databases are a new way to store and access data by representing it as nodes and connections. It is particularly useful for dealing with highly connected data as social networks, recommendation engines, music discovery or anti-fraud systems do. Graph databases give data scientists exciting opportunities.
You will learn how to combine Neo4j and Gephi using the Neo4j plugin of Gephi. You will also discover Linkurious, a novel web-based application to explore graph data easily, which has been co-founded by S√©bastien Heymann.
The workshop will be held in English and French.
Register on meetup.com
Date: 24th of January, from 7:30 PM to 10:15 PM
Place: Zenika office, 10 rue de Milan, Paris
",['S√©bastien Heymann']
29,2013-01-03 21:57:14+01:00,0.8.2 beta released,"
The latest version of Gephi has been released, download it for Windows, Mac OS and Linux platforms. This release captitalizes the bugfixes and stability improvements we have done over the last few months. It also greatly improves the Mac OS X compatibility with the Gatekeeper and Retina Display support. Gephi should now starts right away when double-clicking on the App with a Gatekeeper-enabled computer. However if you have an older version of Gephi on your computer, you should uninstall it and remove the user directory, see the installation instructions.

This release is the first one based on our new Continuous Integration environment. This new system makes it easy for developers to create a new release and for beta-testers to test an early version. Users eventually get a software which has been tested much more heavily and by a larger population compared to previous releases.
Plugins need to be checked for compatibility. They will reappear on the Plugin Center in the coming days, as they are verified. Thanks for your patience.
Consult the release notes and the new Javadoc for more information.
New and Noteworthy
* Data Laboratory‚Äôs time interval merge strategy now supports custom date format
* Improved parser for dynamic types. Literal strings are now supported.
* Add Retina Display support to the Mac OS X version
Bug fixes
* Filters ‚ÄòDuplicate‚Äô does not work (Issue 176)
* Exporting SVG File throws DomException due to invalid stroke-widths (Issue 697)
* File name entered is lost when changing folder (Issue 463)
* Datalab: can‚Äôt export all columns (Issue 628)
* NullPointerException when importing from database (Issue 691)
* Filter on column created with regex causes crash (Issue 663)
* ‚ÄúLong cannot be cast to a String‚Äù when either exporting a graph or saving a gephi file (Issue 679)
* Mapping of Escape Keyboard Shortcut for ‚ÄúSave changes before closing?‚Äù dialog box (Issue 686)
* DataLab: filling edge weight column doesn‚Äôt work when dynamic (Issue 619)
* Spreadsheet import of dynamic data: support of ‚Äúinfinity‚Äù (Issue 631)
* Missing license headers (Issue 664)
* Spreadsheet import and self-loops (Issue 683)
* Timelime interval set in infinite loop (Issue 712)
* OutDegreeRange broken (Issue 651)
* Shortest path on filtered graphs fails (Issue 650)
* Weighted degree computation fails (all values 0) when a filter is applied (Issue 636)
* Dot parser fixes (Issue 621)
* Filtering leads to Null Pointer exception when saving (Issue 617)
* Partition percentages incorrectly composed across filters (Issue 637)
* Start/end attributes are always imported using DATETIME format (Issue 649)
* HeatMap / Shortest Path on undirected Graph wrongly paints / calculates (Issue 630)
* Typo fix connetion to connection (Issue 642)
* Timeline sparkline bug (Issue 615)
* Fixes calculation of clustering coefficient on graph (Issue 625)
* Unix timestamp support (Issue 612)
* GML loading cannot accept scientific notation for float-type edge property (Issue 300)
* GML export does not respect specs (Issue 604)
* GEXF export outputs incorrect files (Issue 570)
* Problems with export of PNG files (Issue 601)
* Edge pencil: unable to set edge directedness (Issue 549)
* Presets of ‚ÄúPreview settings‚Äù are incorrectly / not saved (Issue 575)
* Option ‚ÄúTime intervals as dates‚Äù in Timeline (Issue 613)
* 8.1 and 8.0 both freeze at start-up when on network (Issue 592)
* Data laboratory max columns unintuitive (Issue 590)
* Modularity with Edge Weight Causes Array Out-of-Bounds (Issue 577)
Do Gephi technologies matter for your research or business? You can support us by donating to the Gephi Consortium, or becoming a member to have an impact on our roadmap.
The next version will be a new serie (0.9) and will bring a strengthen core and new features. Stay tuned for that.
Feel free to reach to us if you are willing to organize events (meetups, workshops, hackathon, etc.), we will support them.
",['None']
30,2012-11-21 18:26:07+01:00,Talk on community management at Inria fOSSa¬†2012,"
The Gephi Consoritium will participate to the fourth edition of the fOSSa Conference taking place from December 4 to 6, 2012 in Lille (France).
The aim of the fOSSa (Free Open Source Academia Conference) is to reaffirm the underlying values of Open Source software: innovation & research in software development.
While the first edition aimed at providing valuable information on the Open Source model at large, the second edition focused specific key-aspects of FOSS such as tech innovation,upcoming issues & challenges in the open development context and how open activities, collaboration and knowledge sharing is beneficial to academia, education & industry. The third edition look at the future of Open Source (Eco system, Trends, new territories, etc).
The fourth edition will address in an open-minded style about:
‚Äì Digital Geographic Strategies & the Native Generation,
‚Äì FLOSS History with the movie: ‚ÄúRevolution OS‚Äù followed by a debate,
‚Äì Open Art, collaboration between art & science,
‚Äì Licenses in the real life: no lawyers speeches, only facts & return experience,
‚Äì Workshops to learn how to develop code for debian, gnome, apache, robotics ROS ‚Ä¶
And, of course the usual fOSSa topics (Education & Community management).
At this occasion, S√©bastien Heymann will make a presentation about Motivations in Free Software communities, 6th Dec at 2pm in the Community Management track.
‚ÄúWhat marks the difference between fOSSa and other events is the air that you breath there. An event organized by passionate people, with passionate attendees as well ‚Ä¶ and great speakers. Every year you can get some presentations of greater international events in advance (I remember the year of Arduino, to give you an example).‚Äù ‚Äî Gabriele Ruffatti ‚Äî SpagoWorld Blog 2012.
fOSSa days are open to everyone and registration is free!
more information @ http://fossa.inria.fr
EDIT: slides of the presentation
http://fr.slideshare.net/slideshow/embed_code/15531802
 Motivation in FLOSS communities  from S√©bastien 
","['S√©bastien Heymann', 'Gabriele Ruffatti']"
31,2012-10-22 21:40:41+01:00,Continuous Integration at¬†Gephi,"
We recently finished to deploy a continuous integration environment at Gephi and I‚Äôm excited to share some of the highlights.
The Gephi developer team has been hard at work to change the way we iterate and create releases at Gephi. Developer productivity has been an important theme for this year‚Äôs focus and we already made several improvements. At the end of last year we migrated our code to GitHub and improved the documentation. We then focused on plugin developers and made it really easy to create new plugins with the Plugin Bootcamp and the new gephi-plugins repository. Finally, we‚Äôre now introducing a completely automated build and release production system.
Our objective was to automate the way releases are created and tested. Previously, creating a release was a manual process and included error prone tasks like updating configuration files, unzipping translations in the right folder or creating installers. Open-source tools like Maven, Jenkins and Nexus can help to make this process seamless and always have the latest deliverables available.
Maven migration
We migrated our code base from Ant to Maven. Gephi is based on the¬†Netbeans Platform and has more than 80 different modules with dependencies and third-party librairies. Maven makes it easy to manage a large number of dependencies and put all configuration parameters in one place. Maven has also a large number of plugins and is very well integrated in Netbeans and Eclipse IDE.
Highlights:

A full application package, all Javadocs and sources are now produced and uploaded online with a single command.
Dependencies are all defined in one place. It is also much easier to update to the latest version of the Netbeans Platform.
All library JARs are dependencies to Maven Central or 3rd party repositories. No library JARs are directly included in the sources anymore.
The Gephi project is now a standard multi-module Maven project. It can therefore be opened and built in Eclipse or IntelliJ, as well as Netbeans out of the box
It facilitates module reuse in other projects like the Gephi Toolkit. Any other project can easily depend on any (or all) Gephi modules.

Jenkins server
Jenkins is the continuous integration server we chose to automate building and testing Gephi. It is configured to build and test Gephi every night based on the latest version of the code on GitHub. If the build fails, developers are informed something needs to be fixed.
Highlights:

Fully automated build in a stable environment. If something is wrong, it must be the code.
In addition of Gephi itself, we‚Äôre also building the Gephi Toolkit every night. Eventually, we‚Äôll be able to build and test plugins as well.
Artifacts produced are uploaded to Nexus.

Nexus
Nexus is a repository for artifacts, which could either be librairies Gephi is using or release binaires like the latest release. At any time, beta testers can download the nightly build and test new features. We just announced a new beta testing program, which couldn‚Äôt be possible without the availability of the nightly build.
Highlights:

All 3rd party librairies have been uploaded to Nexus. Maven is using Nexus as a source for librairies.
The nightly build packages are available for download.
It also hosts the latest set of NBMs and Javadocs.


We learnt a lot during this project and will continue to strengthen the developer and beta-tester environment to scale up Gephi development. So far, we‚Äôve done the Maven migration on a separate GitHub repository but we‚Äôll soon convert the main repository and soon after release a 0.8.2 Gephi version. We‚Äôve created a new Continuous Integration section on the Dev Portal and documented this project.
Plugin development remains the same for now and all plugins should be compatible with the new code base. In the next few months we would like to bring continuous integration to plugin developers as well. Testing at scale a large number of plugins at each new Gephi version remains a challenge and we would like to improve that. Also, we‚Äôve seen issues where different plugins use different version of the same library and eventually¬†cause crashes. Stay tuned for some news on that.
In the next few weeks we‚Äôll update the documentation at various places how to build Gephi and work with the code. Developers interested to try this new system out should follow the instructions on GitHub or reach to us on the developer mailing-list.
Last but not least, we would like to say kudos to Maven, Jenkins and Nexus contributors for their huge and excellent work!
","['Gephi', 'Netbeans', 'Maven', 'Jenkins']"
32,2012-10-16 16:10:56+01:00,Beta Tester program¬†starts,"
Hi all, today we are announcing a new program and it‚Äôs all about testing the latest¬†versions¬†of Gephi. Anyone can join the program and test the development version, send feedback and discuss features. We want to build a team of beta-testers who the developers can work with to detect issues before the software reaches the standard users.
So far, testing has been done by a small group of developers and users but we would like to extend it to a larger¬†audience. There are many different versions of Windows, Mac OS X and Linux Gephi supports. Testers will help to detect compatibility issues specific on a single platform and overall participate in testing new features.
To make this effort successful, we‚Äôre making it super easy to test the latest development version without requiring to know about programming or how Gephi is built. We‚Äôre introducing a nightly build package which gets updated automatically every night with the latest version of the code. Once downloaded and installed, this version of Gephi will ask you to update itself every time a new version is available so you don‚Äôt have to download and install Gephi over and over again. If you‚Äôre already familiar with Gephi‚Äôs auto update capability, this is using the same system.

How to get started?






Join the gephi-tests@lists.gephi.org mailing list


Developers and testers will discuss on this list.


Fill this questionnaire online.


Cuple of questions on your hardware and software configurations.



Questions? Feel free to stop by on this forum thread.
",[]
33,2012-10-04 09:51:22+01:00,GSoC: interconnect Gephi Graph Streaming API and¬†GraphStream,"
My name is Min WU and during this Google Summer of Code I have worked on the project to interconnect Gephi Graph Streaming API and the GraphStream library. My mentors are Yoann Pign√© and Andr√© Panisson.
This project aims at interconnecting the GraphStream‚Äôs dynamic graph event model with Gephi in order to have Gephi to visualize an ongoing graph evolution and measurement. Based on this project, users can model and simulate complex systems with GraphStream while observing the output with the visual tools offered by Gephi.

GraphStream is written in Java. In order to use streams of graph events in other languages, GraphStream provides the NetStream framework, i.e. a network interface, such that other projects written in other language can use GraphStream. The NetStream framework consists of three parts, receiver, sender and the NetStream Protocol. The receiver is responsible for receiving graph events from the network and dispatching them to pipes. It works within only one thread, listening at a given address and port while receiving graph events from several streams, actually several threads or clients. The sender encodes graph events into messages according to the NetStream protocol and send them to a defined receiver with given port, host and stream ID. Every message contains sourceId, timeId and event context, among which the combination of sourceId and timeId is dedicated to distinguish between several streams and solve the synchronization issue. Finally the NetStream protocol specifies the message format at byte level.
Gephi also supports the idea of ‚Äústreams of graph events‚Äù. It has a framework for graph streaming in Gephi plugin built by Andr√© Panisson during the 2010 GSoC, through a multi-threaded socket server. Other applications can push graph data to the Gephi server through the network, and have it visualized. In this graph streaming project, operations (a concept similar to event) are invoked through HTTP requests made by the client to the server, based on a JSON format.
Work done
In my project, I interconnected Gephi and GraphStream based on Andr√©‚Äôs Graph Streaming plugin. Since NetStream on GraphStream side works on NetStream protocol while Graph Streaming API on Gephi side works on JSON protocol, we have to make them compatible with each other. Considering the flexible interoperability and language agnostic properties, I have chosen the JSON protocol to do the interconnection and implement a sender part and a receiver part.
The sender part (JSONSender) is responsible for sending events from GraphStream to Gephi. GrpahStream works as a client and Gephi works as a server. Every time the graph in GraphStream changes, a corresponding event is sent to Gephi. Gephi handles the event and changes its own graph. In this way, the sender part works as a sink of the GraphStream graph, so it must implement the sink interface which contains methods to deal with graph element events and attribute events. In each method, we first encode the event message into a JSON string, and then send it to Gephi. We connect to Gephi and use ‚ÄúupdateGraph‚Äù operation to send events. The corresponding URL is ‚Äúhttp://host:port/workspace?operation=updateGraph‚Äù. The host and port must match with the Gephi sever and the workspace is a destination workspace of Gephi, for example an URL can be ‚Äúhttp://127.0.0.1:8080/workspace0?operation=updateGraph‚Äù. The Gephi server and client are built with the ‚ÄúGraph Streaming API ‚Äù in the Gephi-plugin.
The receiver part (JSONReceiver) is responsible for receiving events from Gephi. It listens to Gephi and waits for events. Every time the graph in the Gephi changes, a corresponding event will be send to GraphStream. Then the GraphStream handles the event and changes its graph object. In this way, the receiver part works as a source of the GraphStream graph. In order to listen to Gephi events, we use a URL within ‚ÄúgetGraph‚Äù operation to connect to Gephi. The corresponding URL is ‚Äúhttp://host:port/workspace0?operation=getGraph&#8221;.
With these two classes, we can interconnect GraphStream and Gephi in real-time. Two tutorials are given to show how to do real-time connection between GraphStream and Gephi, see the video below. If you are interested in the detail implementation, please refer to the manual  page.

The first class is GraphSender, which aims at loading a graph in GraphStream and dynamically displays it on a Gephi workspace. We need to create a graph instance and a JSONSender instance, and plug the JSONSender instance as a sink of the graph instance. Since then, when we generate the graph, or load the graph from a file, Gephi will display it in real-time.
The other class is LinLogLayoutReceiver. The Lin-Log layout in GraphStream is dedicated to find communities in graphs. This tutorial shows the execution of a Lin-Log layout in GraphStream and the sending of the layout information to Gephi in real time. We first load a graph in Gephi, display it and apply some algorithms. Then we send the graph to GraphStream and apply the Lin-Log layout on the graph on the GraphStream side. Meanwhile we visualize the layout process on the Gephi side in real time. To achieve it, we create a graph instance and a JSONReceiver instance, and then get the ThreadProxyPipe instance and plug the graph instance as an ElementSink of the pipe instance. Then we apply the Lin-Log layout, and create a new thread in which to create a JSONSender instance and plugin it as a sink of the graph layout.
Distribution
This project is distributed under MIT license. You can refer to the code on Github. By the way, I feel very appreciative for my mentors‚Äô supervision. Thank you very much!
","['Min WU', 'Yoann Pign√©', 'Andr√© Panisson', 'Gephi', 'MIT']"
34,2012-09-24 19:25:28+01:00,GSoC: Legend module,"
My Name is Eduardo Gonzalo Espinoza Carreon and during this summer I developed the new Legend Module for Gephi, with the mentoring of Eduardo Ramos and S√©bastien Heymann. This article will give you an overview of the work done.
Problem statement
Currently Gephi offers the possibility of visualizing graphs, but what about legends? Legends provide basic and extra information related to the graph and they are useful when interpreting any kind of network map. If a person is not familiar with the content of a graph, missing or wrong legends could lead to misleading interpretations and sometimes wrong decisions. When a visualization is used by multiple people for discussing, analyzing or communicating data, legends are of great importance.
For instance, the following graph represents the coappearance of characters in the novel Les Miserables. After performing a visual analysis we could only conclude that the graph has 9 groups. This is probably a little of the information the creator wanted to transmit. The graph has no information related to the number of nodes explored, or what the groups represent and how many elements each group has, etc.

A current workaround to solve this problem is to export the graph as an image, and then manually add the legends using Inkscape, Adobe Illustrator or another graphics editor. However this task is time-consuming and can be automated. The new Legend Module proposes a solution to this problem.
Solution
We propose an extension to the Preview module for generating legend items. The following legend items are available: Table, Text, Image, Groups and Description. They can be added using the Legend Manager, which is shown in a new tab under the Preview Settings:

After selecting a type of legend, the user chooses a sub-type builder, e.g. ‚ÄúTable‚Äù > ‚ÄúPartition interaction table‚Äù, or ‚ÄúTop 10 nodes with greatest degree‚Äù, as shown in the following figure:

When a new Legend item is added, it is displayed in the list of active legend items, where the user can edit its properties. The user can also edit its label and assign a user-friendly name to remember the content of the legend easily.

Every item has a set of common properties: label, position, width, height, background color and border, title, description; and also each type of item has its own properties and data. The values of those properties are editable through a Property Editor like the one used in the preview settings.

Some properties like scale and translation can be modified using the mouse like most of the graphic design applications. All legend items are designed with a smart way of autoresize. It‚Äôs not the common scale feature, e.g. if the text included in the Text Item is bigger than the size assigned, then the Text Renderer overrides the text font defined by the user and decreases the font size until the text is able to fit in the specified dimensions. The results of this feature are shown in the next figure:

Workflow
The legend builder retrieves the graph data (partitions, node labels, edge labels, etc) and creates a new Legend item for each of them. Then a legend renderer makes use of these information, plus the properties set by the user, to render the Legend item to the specified target: PNG, PDF or SVG.
For developers
The renderers can be extended. For instance, the default Group Renderer is:

Using external libraries like JFreeChart, we can extend it to create a Pie Chart Renderer like as follows:

Other types of items can be created by combining other available Legend Items or by extending Legend Item, Legend Item Builder and Legend Item Renderer.
The Legend Module also provides a save/load feature. So you can save your legends for future editing.

Limitations
Currently there are some limitations like selecting a specific renderer for each type of item, and also exporting legends to SVG format is not done automatically like PNG and PDF, e.g. Exporting an Image (they will be embedded in the SVG file).
Conclusions
I would like to thank Eduardo Ramos and S√©bastien Heymann for their support and feedback, which was critical during the development of this new module. The Legend module will be available as core feature in next Gephi release.
This GSoC was a great opportunity to learn and it also represents my first important contribution to the open-source community.
","['Eduardo Gonzalo Espinoza Carreon', 'Eduardo Ramos', 'S√©bastien Heymann', 'Eduardo Ramos', 'S√©bastien Heymann']"
35,2012-09-21 09:55:09+01:00,GSoC: Force Directed Edge¬†Bundling,"
My name is Taras Klaskovsky and during this Summer Of Code I have implemented the Force Directed Edge Bundling algorithm.
Force Directed Edge Bundling (FDEB) is an edge layout algorithm. Gephi already has node layouts, which are placing the nodes (usually using force-directed algorithms). FDEB helps to further improve graph visualization by changing shapes and colors of the edges to merge them in bundles, analogous to the way electrical wires and network cables are merged into bundles along their joint paths and fanned out again at the end. This reduces visual clutter, inevitable in large graphs, allowing to find high-level edge patterns and get an overview of the graph just by looking at it. As example, US flights graph below, with nodes as airports and edges as flights.
The algorithm
Edges are modeled as flexible springs that can attract each other while node positions remain fixed. A force-directed technique is used to calculate the bundling and it is relatively slow. On small graphs it works pretty fast due to optimizations, but consumes large amount of memory to store precomputed similar pairs of edges; for average and large graphs a special slow low-memory mode implemented. After every iteration preview is being refreshed, so it‚Äôs possible to observe formation of bundles in real-time.
Full algorithm description can be found on this research paper.





Renderer Modes
FDEB has 3 renderer modes:

Simple renderer: Draws all edges with the same color and transparency (color, transparency and thickness are set in the preview settings in the bottom-left panel), bundles are emphasized by combined transparency.
Gradient renderer: Draws all edges with color from gradient slider. Edges that are similar to higher number of other edges get higher color.
Gradient slow renderer: Uses more precise method to determine intensity of edge (needs precalculate points checkbox and to be re-runned) to set personal color for every segment.

FDEB can be customized with lots of options and they all have descriptions, some of the most influential on result are:

Use inverse-qudratic model: Makes more localized bundling
Compatibility threshold: Ignore pairs of edges that are not similar enough, which makes FDEB faster (ignored in low-memory mode) and bundling become more localized.

To make FDEB faster it‚Äôs also possible to decrease number of cycles/subdivision points increase rate.

The Edge Layout API
An edge layout API has been created to simplify the integration of other edge layouts into Gephi. This API is very similar to the existing node layout API, with the following additions. Since edge layouts do not only change shapes of edges, but are also responsible for their visualization, a modifyAlgo() is called each time when the Preview is refreshed, to control the modification of parameters. The edge layout data, which is accessible for each edge, provides polyline points and it‚Äôs colors for all renderer modes.
How to get the FDEB algorithm
It will be available in the next release of Gephi. The current source code is available on Github.
",['Taras Klaskovsky']
36,2012-09-20 11:14:20+01:00,Summer news,"
No rest for the community this summer! This is a digest of our activity.
New plugins:

DAG Layout
Export To Google Earth (KMZ file format)

New Web articles:

By @gnovelli: Divud is a GPL tool, born for social researchers and web marketers.
By @MartPasquier: The Singaporean Leisure blogosphere revealed.
By @seinecle: Eonydis: read a csv file and turns it into a dynamic graph in Gephi.
By @RiederB: New netvizz feature: bipartite like networks from Facebook.
By @fabien_gandon: Cities bigger than 500000 habitants linked according to their language.
By @blogsir: Monitoramento do #12M utilizando o Gephi: projeto Cartografar as controv√©rsias na Internet.
By @patrick_mj: Very simple PHP class for building GEXF files.
By @arstechnica: Novel text analysis uses PageRank to identify influential Victorian authors.
By @eekim: What does ‚ÄúCollaboration‚Äù look like? Network analysis of LinkedIn skills.
By @meinstream: Social Graphs of Movies with the help of some Gephi and Sigmajs.
By @erich_owens: @newsle‚Äôs related people system. (400k nodes!).
By @jbmoreno: Conseguir enlaces de la red de la competencia con Gephi.
Visualizando la evasi√≥n fiscal del 1%.
By @_aileenrose: Stunning Olympics Graph Visualizations.
By @f_ficarola:  A new version of gexf4j has been released: 0.3.2-ALPHA.
By @NewArabella: One 18thc tavern in London, 40 kinds of fish.
By @bkeegan:  Analysis of Wikipedia collaboration in response to Aurora shooting.
By @Cloudera: Adverse Drug Event Analysis using Hadoop, R, and Gephi.
By @RegardsCitoyens: All tweets from OLDP mapped with Gephi reveal geog clusters of participants.
By @brendangriffen: The Graph Of Beer
By @ateliercarto:  French Civil Code map with sigma.js by Jacques Verrier
By @UmbertoGriffo: Graphs generated by Mobility Models Gephi Plugin.
By @brendangriffen: Graphing Every* Idea In History.
By @psychemedia: Mapping Related Musical Genres on Wikipedia/DBPedia.
By @psychemedia: Generalising the mapping of topic areas in wikipedia using Gephi.

New research papers:

D R. Farine, C J. Garroway, B C. Sheldon: Social network analysis of mixed-species flocks: exploring the structure and evolution of interspecific social behaviour, in Animal Behaviour
R. Nagarajana, A. T. Kalinkab, W. R. Hogan: Evidence of community structure in Biomedical Research Grant Collaborations, in Journal of Biomedical Informatics
R. Laue, M. Becker: Evaluating Social Tagging for Business Process Models
A. Maireder, J. Ausserhofer, A. Kittenberger: Mapping the Austrian Political Twittersphere, CEDEM 2012
I. Olaizola et al.: Trace transform based method for color image domain identiÔ¨Åcation
J. E. Joseph et al.:  The changing landscape of functional brain networks for face processing in typical development, in NeuroImage
B. Chen, M. Scardamalia, M. Resendes: Promisingness Judgments by Grade 3 and 4
C. P√©rez-Penichet, A. Conde, A. Moreira: Human mobility analysis by collaborative radio landscape observation, in Proceedings of the AGILE‚Äô2012 International Conference on Geographic Information Science
M. Imbeault, K. Gigu√®re, M. Ouellet, M. J. Tremblay:  Exon Level Transcriptomic Profiling of HIV-1-Infected CD4+ T Cells Reveals Virus-Induced Genes and Host Environment Favorable for Viral Replication, in PLoS Pathogens 8(8): e1002861. doi:10.1371/journal.ppat.1002861
F.G. Laxe, M.J. Freire Seoane, C.P. Montes: Maritime degree, centrality and vulnerability: port hierarchies and emerging areas in containerized transport (2008‚Äì2010), in Journal of Transport Geography, Volume 24, September 2012, Pages 33‚Äì44
P. Cerveroa, M. Himmela, M. Kr√ºgerb, S. Lindera: Proteomic analysis of podosome fractions from macrophages reveals similarities to spreading initiation centres, in European Journal of Cell Biology
R. Kasprzyk: DiÔ¨Äusion in Networks
D. Zinoviev, D. Stefanescu, L. Swenson, G. Fireman: Semantic Networks of Interests in Online NSSI Communities, WebSci 2012

","['gnovelli', 'MartPasquier', 'seinecle', 'RiederB', 'fabien_gandon', 'blogsir', 'patrick_mj', 'arstechnica', 'eekim', 'meinstream', 'erich_owens', 'jbmoreno', 'aileenrose', 'f_ficarola', 'NewArabella', 'bkeegan', 'Cloudera', 'RegardsCitoyens', 'brendangriffen', 'ateliercarto', 'UmbertoGriffo', 'psychemedia', 'D R. Farine', 'C J. Garroway', 'B C. Sheldon', 'R. Nagarajana', 'A. T. Kalinkab', 'W. R. Hogan', 'R. Laue', 'M. Becker', 'A. Maireder', 'J. Ausserhofer', 'A. Kittenberger', 'M. Imbeault', 'K. Gigu√®re', 'M. Ouellet', 'M. J. Tremblay', 'F.G. Laxe', 'M.J. Freire Seoane', 'C.P. Montes', 'P. Cerveroa', 'M. Himmela', 'M. Kr√ºger', 'S. Lindera', 'R. Kasprzyk', 'D. Zinoviev', 'D. Stefanescu', 'L. Swenson', 'G. Fireman']"
37,2012-06-25 18:45:31+01:00,Supporting the NodeLink.io project: intuitive tools enable investigative reporters to visualize¬†networks,"
It‚Äôs been a long time that the Gephi team is looking to the web as a platform for network visualization:

The Gephi Toolkit enables the use of Gephi on servers.
The Seadragon Export plugin facilitates interactive publishing (quickly followed by great plugins from the community).
The GraphGL experiment has advanced our understanding of WebGL, a promising technology.
A Web gallery with easy publishing system from Gephi is under development.

But so far we focused on the Gephi software itself. Part of our team is now willing to create a novel online platform which will benefit from our experience in making Gephi. With a focus on network sketching, easy data gathering and publishing facilities across various devices, we aim at democratizing the investigation and reporting of real-world networks: organisations, lobbying, government spending, crime networks, financial and human migration flows, social media, and more.
We believe that network thinking is of tremendous importance in investigative journalism: the media industry is facing big challenges, yet citizens need comprehensive stories on the complex situations that shakes our societies at a high pace (e.g. the Euro debt crisis, the Arab Spring, etc.). Investigating these events takes time and journalists struggle with scientific tools like Gephi to explore data and produce clear visuals. We lack of a new tool, open to everyone, to investigate networks and reveal evidences easily.
Hence we propose to develop NodeLink.io, an online platform for investigative reporters which makes node-link data actionable by easily sketching and publishing network visuals on various media. Journalists will gain a powerful tool to explain complex stories, and citizens will gain a better understanding of the mechanics that rule our societies.
 We are applying for the Knight News Challenge to support this project. The Knight Foundation aims at accelerating media innovation by funding breakthrough ideas in news and information. Watch the introduction below or go directly to read our short proposal (500 words), and leave us a comment here to claim your support. Proposals are evaluated on the light of these discussions as well, so please give us early feedback!

",['Michael']
38,2012-06-24 11:21:59+01:00,Monthly news,"
The monthly news give the important news to the people who don‚Äôt have a Twitter account or who don‚Äôt connect to it each regularly.
New plugins:

Export graphs to Latex in TikZ format
Java class dependencies
Image Preview

New Web articles:

By @toddstavish: InfiniteGraph REST Server posting Gephi Streaming API JSON
By @lgarulli: OrientDB 1.1.0 supports Gephi
By @orbis_stanford: Discover ORBIS, the Stanford Geospatial Network Model of the Roman World
‚ÄúLinks, Web & Influence by Duncan Watts‚Äù : Finding influencers on Twitter networks doesn‚Äôt work well for marketing
By @justinrbriggs: How to Visualize Open Site Explorer Data in Gephi
By @eDiasporasAtlas: Mapping diasporas on the Web
By @p_barbera: Visualizing the Twitter mention network of the US Congress w/Gephi + JavaScript
Videos and material of the Gephi workshop at #compsocsci12 now available
Using #Drupal as a graph datasource
Scott Weingart demystifies networks for Digital Humanities
Elijah Meeks warns against over interpretation of network visuals
By @gvegayon: rgexf is now on CRAN

New research papers:

B.S. Penmana, S. Guptaa, C.O. Buckeeb: The emergence and maintenance of sickle cell hotspots in the Mediterranean, in Infection, Genetics and Evolution, Available online 12 June 2012
N. Dokoohaki, M. Matskin: Mining Divergent Opinion Trust Networks through Latent Dirichlet Allocation
J. Huhtam√§ki, M.G. Russell, K. Still, N. Rubens: A Network-Centric Snapshot of Value Co-Creation in Finnish Innovation Financing, Technology Innovation Management Review
V.M. Smith: Social Networks Matter, Master Thesis in Urban Planning, Columbia University
L.M. Aiello, M. Deplano, R. Schifanella, G. Ruffo: People Are Strange When You‚Äôre a Stranger: Impact and InÔ¨Çuence of Bots on Social Networks, Proceedings of the Sixth International AAAI Conference on Weblogs and Social Media (ICWSM)
S.P. Imberman, M.E. Kress, D.P. McCloskey: Using Frequent Pattern Mining to Identify Behaviors in a Naked Mole Rat Colony, Proceedings of the Twenty-Fifth International Florida Artificial Intelligence Research Society Conference
R. R. Salvatierra: Option analysis for the evolution of the Clean Development Mechanism to engage developing countries in a post 2012 Kyoto commitment, Master thesis, Utrecht University
Z. Huang, B. Yuan, X. Hu: Understanding the Top Grass Roots in Sina-Weibo
A. Markham, S. Lindgren: From Object to Flow: Network analysis, symbolic interactionism, and social media, Studies in Symbolic Interaction, volume 39
J. Devezas and A. Figueira: Finding Language-Independent Contextual Supernodes on Coreference Networks, IAENG International Journal of Computer Science
K. Slaninov√°, T. Kocyan, J. Martinovic, P. Dr√°zdilov√°, V. Snasel: Dynamic Time Warping in Analysis of Student Behavioral Patterns

","['toddstavish', 'lgarulli', 'orbis_stanford', 'Duncan Watts', 'justinrbriggs', 'eDiasporasAtlas', 'p_barbera', 'Scott Weingart', 'Elijah Meeks', 'gvegayon', 'B.S. Penmana', 'S. Guptaa', 'C.O. Buckeeb', 'N. Dokoohaki', 'M. Matskin', 'J. Huhtam√§ki', 'M.G. Russell', 'K. Still', 'N. Rubens', 'V.M. Smith', 'L.M. Aiello', 'M. Deplano', 'R. Schifanella', 'G. Ruffo', 'S.P. Imberman', 'M.E. Kress', 'D.P. McCloskey', 'R. R. Salvatierra', 'Z. Huang', 'B. Yuan', 'X. Hu', 'A. Markham', 'S. Lindgren', 'J. Devezas', 'A. Figueira', 'K. Slaninov√°', 'T. Kocyan', 'J. Martinovic', 'P. Dr√°zdilov√°', 'V. Snasel']"
39,2012-05-21 14:02:22+01:00,"Gexf4j, a new Java library to create GEXF¬†files","
 
Francesco Ficarola is a Computer Engineer and a Ph.D. student at the Sapienza University of Rome. In addition he is been working for an Italian company as R&D Engineer for one year. His main research interests are Wireless Sensor Networks, Social Networking and whatever concerns ‚ÄúInternet of Things‚Äù.
Gephi supports the 1.2draft of GEXF file format since version 0.8. Until now, if you are a Java developer, you couldn‚Äôt use any up-to-date Java library to manage this version of the format. The only available library for building GEXF graphs was gexf4j-core v.0.2.0-ALPHA by J. Campanini. Unfortunately that library implemented GEXF 1.1draft only, and is no longer maintained. So I have decided to update that library in order to work and build GEXF 1.2draft compliant graphs. This version introduced many improvements, see the changelog.
The latest version of gexf4j (currently 0.3.1) supports new XML attributes and data types to encode dynamic networks:

timeformat or spell
open intervals (startopen/endopen)
double
date
xsd:dateTime

In addition, the javadoc has been added and all methods have now meaningful names for their parameters.
Creating a GEXF file with gexf4j is very simple and requires very few lines of code:  read the two examples in the project README file, or find them in the ‚Äúit.uniroma1.dis.wiserver.gexf4j.examples‚Äù project package.
<!‚ÄìIf you have been a gexfj-core v.0.2.0-ALPHA user, you will be able to easily program with the new version. You only need to change the code a little for the dynamic features, in particular:

‚ÄúTimeType‚Äù class has been renamed ‚ÄúTimeFormat‚Äù.
‚ÄúSlice‚Äù components are renamed ‚ÄúSpell‚Äù, according to 1.2draft.
The methods ‚ÄúsetStartDate(Date d)‚Äù and ‚ÄúsetEndDate(d)‚Äù are changed in ‚ÄúsetStartValue(Object o)‚Äù and ‚ÄúsetEndValue(Object o)‚Äù, respectly, in order to support multiple timeformat type: double (default), date and xsd:dateTime.
The Methods ‚ÄúDate getStartDate()‚Äù and ‚ÄúDate getEndDate()‚Äù are changed in ‚ÄúObject getStartValue()‚Äù and ‚ÄúObject getEndValue()‚Äù, respectly.
The methods ‚ÄúsetStartIntervalType(IntervalType startIntervalType)‚Äù and ‚ÄúsetEndIntervalType(IntervalType endIntervalType)‚Äù have been added in order to allow the user to choose the interval type (open or close) of the ‚Äústart/end‚Äù attribute.

Finally, if you would like to support this project, please let me know, you are welcome‚Ä¶ and if you want to stay informed about the latest news on gexf4j, just follow me on Twitter: @f_ficarola
Checkout code
Run
git clone git://github.com/francesco-ficarola/gexf4j.git
Report issues
Simply go to the Issues tab.
Have a nice ‚ÄúGEXF graph‚Äù!
Francesco Ficarola
","['Francesco Ficarola', 'J. Campanini']"
40,2012-05-14 16:48:32+01:00,Python Scripting Console for¬†Gephi,"
The first release of the Gephi‚Äôs Python Console plugin is finally available for download. Through this plugin, you can execute queries and manipulate the graph structure by typing commands on a scripting console, making it a very powerful and concise tool to work with.
This console started as a joint proposal with the GUESS project which aimed at porting the Gython language as a console plugin for Gephi during the Google Summer of Code 2011 program. This project was mentored by Eytan Adar, from the GUESS project, and co-mentored by Mathieu Bastian, from Gephi.
After installation, the plugin can be accessed through the left slide on Gephi‚Äôs UI or through the Window > Console.

Among the features available through the console scripting language are:

Inspired by the Gython language from the GUESS project (i.e. additional operators for manipulating graphs).
Based on Jython 2.5.2, which implements the Python 2.5 specification.
Graph structure and attributes manipulation.
Filtering support.
Support for running layouts.
Export API support (i.e. generate PDF/GEXF/PNG exports from within the console).
Batch scripts support for automating tasks.
Loads third-party Python libraries.

For example, if you would like to filter the male persons from your social graph and make the result visible, you could simply type the following command:
visible = g.filter(gender == ""male"")
If you want set this subgraph nodes‚Äô color to blue, you could just type:
g.filter(gender == ""male"").nodes.color = blue
Or, even better, if you want to color both the nodes and edges of this same subgraph, just type:
(gender == ""male"").color = blue
Implementing batch scripts for automating tasks is very easy. Just save the script as a file with the py extension and load it with the execfile function. For instance, a batch script for creating a random graph with 50 nodes would look like this:

And to run the script, you would call the following command on the console:
>>> execfile(""C:\Users\user\Documents\script.py"")
Installation
The Scripting Plugin can be installed through the Gephi‚Äôs Tools/Plug-ins menu:

Go to the Tools > Plug-ins menu on Gephi‚Äôs user interface.
Open the Available Plugins tab.
Click the ‚ÄúReload Catalog‚Äù button, to make sure you have an up-to-date catalog.
Select the ‚ÄúScripting Plugin‚Äù on the list and click the Install button.

After installation, the plugin can be accessed through the left slide on Gephi‚Äôs UI (as shown in the image below) or through the Window > Console menu.

Documentation
The console‚Äôs documentation at the wiki has instructions for downloading and installing the plugin.
Feedback and Contributing
This plugin has been developed by Luiz Ribeiro since the Google Summer of Code 2011 program and we‚Äôre really looking forward to see what you‚Äôll be able to do with this new tool.
The plugin‚Äôs source code is hosted on GitHub and is open to your contributions. If you find any bugs or have requests or feature ideas make sure to open a new ticket on the Issues Tracker.
","['Eytan Adar', 'Mathieu Bastian', 'Luiz Ribeiro']"
41,2012-05-04 15:30:24+01:00,Monthly news,"
We started the weekly news in March, however this experiment was discontinuous. We come back with monthly news, to give the important news to the people who don‚Äôt have a Twitter account or who don‚Äôt connect to it each regularly.
Job offering:

(March 22) Seek Developer for rewarding Net analysis project

New plugin:

Multimode Networks Transformations

Next community events:

Workshop on Gephi at Harvard, May 31
‚Äé‚ÄùIntroduction to Literary Network analysis using R and Gephi‚Äù(Jockers, Matthew; Meeks, Elijah) Tuesday, July 17, Digital Humanities Conference
Lada Adamic course on Social Network Analysis (uses R and Gephi)

New Web articles:

By @gvegayon: Twitterpolitik: Netzwerke und Themen der politischen Twittersph√§re in √ñsterreich
By Dejan Petrovic: Search Quality: The Link Graph Theory
By @sigmajs: sigma.js v0.1 is a fast network visualization for the Web, can load Gephi GEXF files
By @totetmatt: Collaborative Crawl & Input Stream Fork : Let‚Äôs play with Gephi Streaming API
By @ooof: ÊãÖ‰ªªËÆ≤Â∏àÁöÑÊï∞ÊçÆÂèØËßÜÂåñÊïôÁ®ãÔºåÂ∑≤ÁªèÂêåÊ≠•Âà∞Á¨¨‰∫åËØæÔºöGephi‰∏≠ÊñáÊïôÁ®ãÔºà2ÔºâÁî®Êà∑ÁïåÈù¢ÂíåÂü∫Êú¨Êìç‰ΩúÊµÅÁ®ã
By @psychemedia: Visualising Networks in Gephi via a Scraperwiki Exported GEXF File
By @Telegraph: Syria: Asma and Bashar al-Assad‚Äôs email network
By @sharpshoot: See what we‚Äôre building at @quidlabs. Watching Big Data: An Augmented Intelligence For Strategic Decision Making
By @socialflow: KONY2012: See How Invisible Networks Helped a Campaign Capture the World‚Äôs Attention
By @weavrs: Some purdy Data Visualisation of Weavrs using Gephi.
By @JCPlantin: Graph of Post Fukushima Radiation Debate

New research papers:

F. Celli, L. Rossi: The Role of Emotional Stability in Twitter Conversations, Proceedings of the Workshop on Semantic Analysis in Social Media, part of the 13th Conference of the European Chapter of the Association for Computational Linguistics (EACL 2012)
P. Oldham, S. Hall, G. Burton: Synthetic Biology: Mapping the Scientific Landscape, PLoS ONE 7(4): e34368
J. Lee et al.: Social Network Based Reputation Computation and Document Classification, Journal of Universal Computer Science, vol. 18, no. 4 (2012), 532-553
C. Horsethief: Re-differentiation as collective intelligence: The Ktunaxa language online community, CI2012
J. Jerkins: MINA: an algorithm for detecting the presence of extrinsic network nodes using a message induced graph, Proceedings of the 50th Annual Southeast Regional Conference (ACM-SE‚Äô12)
B. Latour, P. Jensen, T. Venturini, S. Grauwin, D. Boullier: The Whole is Always Smaller Than Its Parts, British Journal of Sociology
M. Fatemi, L. Tokarchuk: An Empirical Study on IMDb and its Communities Based on the Network of Co-Reviewers, Proceedings of MPM‚Äô12
Z. Batist: Feasting in Bronze Age Greece: A Network Analysis Approach, Bachelor of Arts, Carleton University
M. Turalska, E. Geneston, B.J. West, P. Allegrini, and P. Grigolini: Cooperation-Induced Topological Complexity: A Promising Road to Fault Tolerance and Hebbian Learning, Front Physiol. 2012; 3: 52
J. Kelly, V. Barash, K. Alexanyan, B. Etling, R. Faris, U. Gasser, J. Palfrey: Mapping Russian Twitter, Berkman Center Research Publication No. 2012-3
T. Vinodrai et al.: Taking regional action? Understanding networks in the local food, green energy & creative sectors in Waterloo region, Economic Developers Council of Ontario (EDCO)
J. Devezas, H. Alves, A. Figueir: Creating News Context From a Folksonomy of Web Clipping, ICDMA2012
L. Gilarranz, J. Bascompte: Spatial network structure and metapopulation persistence, Journal of Theoretical Biology, 297: 11-16

","['Matthew Jockers', 'Elijah Meeks', 'Lada Adamic', 'Dejan Petrovic', '@gvegayon', '@sigmajs', '@totetmatt', '@ooof', '@psychemedia', '@Telegraph', '@sharpshoot', '@socialflow', '@weavrs', '@JCPlantin', 'F. Celli', 'L. Rossi', 'P. Oldham', 'S. Hall', 'G. Burton', 'J. Lee', 'C. Horsethief', 'J. Jerkins', 'B. Latour', 'P. Jensen', 'T. Venturini', 'S. Grauwin', 'D. Boullier', 'M. Fatemi', 'L. Tokarchuk', 'Z. Batist', 'M. Turalska', 'E. Geneston', 'B.J. West', 'P. Allegrini', 'P. Grigolini', 'J. Kelly', 'V. Barash', 'K. Alexanyan', 'B. Etlin', 'R. Faris', 'U. Gasser', 'J. Palfrey', 'T. Vinodrai', 'J. Devezas', 'H. Alves', 'A. Figueir', 'L. Gilarranz', 'J. Bascompte']"
42,2012-04-24 17:28:23+01:00,The GSoC rocket¬†launched,"
The Google Summer of Code 2012 has officially started! The results have been announced by Google. Congratulations to the students who join the Gephi project:

Eduardo Espinoza ‚Äì Legend Module in Preview
Romain Yon ‚Äì Cloud Gephi
Taras Klaskovsky  ‚Äì Force Directed Edge Bundling algorithm
Vikash Anand ‚Äì Statistics Reports and HTML5 Charts
Min WU ‚Äì Interconnect Graph Streaming API and GraphStream

You put a lot of attention on doing the bests applications and demonstrate great motivation in addition to strong technical skills. We are very excited to work with you guys!
This year we are also honored to count on world-class researchers as mentors: Yoann Pign√© is an Assistant Professor at the university of Le Havre, France, and is a leader of the GraphStream project. We will co-mentor the Graph Streaming project with Andr√© Panisson, our former Google Summer of Code student. Andr√© got his Ph.D. recently, and authored the video of the Egyptian Revolution on Twitter. Finally, Christian Tominski, who mentored the Preview refactoring last year, will mentor the Force Directed Edge Bundling project. He is a Lecturer and Researcher at the Institute for Computer Science at the University of Rostock. He has authored several articles in the field of information visualization.
Former Google Summer of Code students will also mentor and advise students, like Luiz Ribeiro.
The Summer Timeline:
* Until May 21: Students get to know mentors, read documentation, get up to speed to begin working on their projects.
* May 21: Students starts to code
* July 13: Mid-term evaluation
* August 24: Final evaluation
","['Eduardo Espinoza', 'Romain Yon', 'Taras Klaskovsky', 'Vikash Anand', 'Min WU', 'Yoann Pign√©', 'Andr√© Panisson', 'Christian Tominski', 'Luiz Ribeiro']"
43,2012-03-29 08:51:01+01:00,0.8.1 beta released,"
The latest version of Gephi has been released, download it for Windows, Mac OS and Linux platforms. This release delivers a complete new timeline component with many awaited features. The timeline is at the heart of our dynamic network analysis (longitudinal networks) effort at Gephi and this feature is the result of last year‚Äôs¬†Google Summer of Code. It gives the ability to explore a network over time in a very powerful way.

New Timeline with embedded sparkline. Example with a Twitter user network.
The timeline new features include animation (play button), custom bounds and embedded sparkline. In the previous Gephi version we added the ability to run metrics over time. For instance, one can calculate the average degree over time or simply the number of nodes (like in the example above). With the new timeline it‚Äôs possible to display a dynamic attribute directly in the component. For example if you‚Äôre looking at a Twitter network you can plot the total number of tweets as a sparkline.
This release also ships with three new languages: Czech, Chinese and Russian. Special Thanks to our awesome¬†localization¬†team.

We just started the Google Summer of Code with exciting projects!¬†We‚Äôre looking for talented students this summer (apply¬†here). The team will also work on the next major release of Gephi (0.9). If you have ideas or suggestions, please don‚Äôt hesitate to express then on our forum or through GitHub issues. Our roadmap is open and most ideas comes from users‚Äô experience.
Because it‚Äôs a major release, changes are not deployed through the AutoUpdate, you need to download and install the new version. Plug-ins also need to be checked for compatibility. They will reappear on the Plugin Center in the coming days, as they are verified. Thanks for your patience.
Consult the release notes and the new Javadoc for more information.
New features




New Timeline
Exciting new timeline with animation, custom bounds settings and embedded spakline. The timeline interval and bounds can now be set manually by the user. By hitting the play button the interval moves automatically. All parameters can be configured. The timeline date support has been completely rewritten, now showing dates and periods in a readable way.



Local/Global Ranking
Compare networks over time or with different filters is now easier as Ranking lets you decide whether the scale should be local or global. In local scale, sizes and colors depend on the visible sub-graph. In global scale (set by default) they depend on the whole graph, thus allowing comparisons over time.



Weighted community-detection
Louvain Modularity (Community detection) adds edge weight support and resolution setting.



New and Noteworthy
* Better Preview performance when hidden edges (good for large graphs)
* Self-loop filter. Remove self loops in the graph.
New localization (Go to Tools > Languages)
* Russian
* Chinese (China)
* Czech
Bug fixes
* Exception when deserializing a preview preset (Issue 554)
* ClassCastException when saving a gephi file after PDF export (Issue 552)
* Cannot Preserve Z-Coordinate in GEXF exporter (Issue 547)
* Gephi won‚Äôt start on Mac OS X Lion because of a missing JAWT library (Issue 542)
* Add a local/global scale button to Ranking (Issue 541)
* Spreadsheet import: edge weight not imported (Issue 540)
* NOT operator wrong with topology filters (Issue 539)
* Multiple partition filters not named: cannot tell them apart (Issue 537)
* AttributeContollerImpl should be renamed to AttributeControllerImpl (Issue 530)
* Timeline ‚Äì Set Custom Bounds does not support DATETIME (Issue 529)
* Data Laboratory ‚Äì Dynamic Attributes Edit function resets values (Issue 528)
* DL exporter fix (Issue 525)
* Validator of MySQL‚Äôs ‚Äúhost‚Äù field (Issue 521)
* Edge/Node attributes don‚Äôt support datetime format (Issue 518)
* Directed Graph cluster coefficient provides incorrect values in certain situations (Issue 517)
* NullPointer in GUI when defining range Filters (Issue 516)
* datalab: empty column fails edge csv import (Issue 515)
* updateDimensions in PreviewController does not take into account node size (Issue 514)
* Overview‚Äôs graph area does not redraw edges automatically (Issue 513)
* c+p correction: HITS hub chart was repeated twice in output. (Issue 510)
* database import from Postgres does not handle node color attribute (Issue 506)
* Incorrect Teradata JDBC url (Issue 505)
* [Datalab] Duplicated nodes on import spreadsheet (Issue 498)
* [Datalab] Failing silently to load attribute values on import spreadsheet (Issue 497)
* Attribute Columns Property editors don‚Äôt support dynamic numbers (Issue 494)
* Arrows not hidden when edges hidden on Preview (Issue 493)
* Some text appears garbled when loaded from a project file (Issue 488)
* Exception when adding a new Perspective plugin development (Issue 486)
* NullPointer Exception with Edge Labels (Issue 478)
* Filter range does not filter if min == max (Issue 477)
* Heatmap Tool Sometimes Doesn‚Äôt Work (Issue 472)
* deleting a field in data lab yields an error (Issue 468)
* Email imports can‚Äôt be cancelled (Issue 466)
* Invalid XML character error when loading a gephi file (Issue 465)
* Range Slider writes N/A if the min and max values are the same (Issue 464)
* datalab: exception on hiding a column used to sort the table (Issue 454)
* Can‚Äôt build without Netbeans installed (Issue 452)
* Auto-refresh not updated after changing the spline (Issue 448)
* AttributeRangeFilter returns main graph when nothing matches filter (Issue 435)
* Timeline need more precision when dealing with dates (Issue 202)
* Degree Filter Not Filtering as Subfilter in Tookit (Issue 69)
* UnsatisfiedLinkError on startup on Mac OS X (Issue 44)
Plugins development
Last november we migrated our source code from Launchpad to GitHub and have seen an increase of activity in plugin development. We also simplified the environment and wrote more documentation how to get started. We created a dedicated repository on GitHub and compiled a list of more than 20 different code examples on the Gephi Plugins Bootcamp.
Do Gephi technologies matter for your research or business? You can support us by donating to the Gephi Consortium, or becoming a member to have an impact on our roadmap.
Feel free to reach to us if you are willing to organize events (meetups, workshops, hackathon, etc.), we will support them.
",['our awesome localization team']
44,2012-03-19 04:34:48+01:00,Google Summer of Code¬†2012,"
It‚Äôs a great news, Gephi has been accepted again for the¬†Google Summer of Code. The program is the best way for students around the world to start contributing to an open-source project. Since 2009, each edition is a great success and dramatically boosted Gephi‚Äôs project development.
What is Gephi?
Networks are everywhere: email systems, financial transaction systems and gene-protein interaction networks are just a few examples. Gephi began as a university student project four years ago and has quickly become an open source software leader in the visualization and analysis of large networks. It is an important contribution to the ecosystem of tools used by researchers and big data analysts to explore and extract value from the deluge of relational data and disseminate a better understanding for people to think about a ‚Äúconnected‚Äù world.
Gephi is a ‚ÄúPhotoshop‚Äù for graphs: designed to make data navigation and manipulation easy, it covers the entire process from data importing to aesthetics refinements and communication. Users interact with the visualization and manipulate structures, shapes and colors to reveal the properties of complex and messy data. The goal is to help data analysts make hypotheses and intuitively discover patterns or errors in large data collections.
Gephi‚Äôs project aims at providing the perfect tool to visualize and analyze networks. We focus on usability, performance and modularity:

Usability: Easy to install, an UI without scripts and real-time manipulation.
Performance: Visualization engine and data structures are built scalable. Supporting always-larger graphs is an endless challenge!
Modularity: Extensible software architecture, built on top of Netbeans Platform. Add plug-ins with ease.

Learn more about Gephi, watch Introducing Gephi 0.7, download and try it by following Quick Start Tutorial.
Gephi‚Äôs project is young, the growing community is composed of engineers and scientists involved in network science, datavis and complex networks.
List of ideas
List of ideas are availabe on our wiki. They cover various skills and level of difficulties:
* Legend module ‚Äì Integrate a legend in the Preview module
* Flexible Table Importer ‚Äì Create a generic network creation wizard from data tables
* Cloud Gephi ‚Äì Build an online gallery and bring some of Gephi‚Äôs features to the cloud
* Force Directed Edge Bundling ‚Äì Implement Force Directed Edge Bundling algorithm
* Statistics Reports and HTML5 Charts ‚Äì Improve  statistic report and port existing charts to HTML5+Javascript
* Statistics Unit Tests ‚Äì Add unit tests to the statistical algorithms
* Graph Streaming ‚Äì Improve Graph Streaming API and interconnect GraphStream‚Äôs dynamic graph event model with Gephi
Please also propose your ideas on the forum. They will be considered and discussed by the community. Have a look at our long-term Roadmap.
Students, join the network
Students, apply now for Gephi proposals. Join us on the forum and fill in the questionnaire. Be careful, deadline for submitting proposals is April 6 (timeline)!
H√©lder Suzuki, student for Gephi in 2009 and now software engineer at Google, wrote:
At Gephi students will have the opportunity to produce high impact work on a rapidly growing area and be noted for it.
View our previous Google Summer of Code projects here and read former students interviews.
Follow Gephi on Twitter

","['Gephi', 'H√©lder Suzuki']"
45,2012-03-14 19:21:23+01:00,How 3 years of Google Summer of Code made us¬†great,"
 
This post was originally posted on the Google Open Source blog by S√©bastien Heymann, co-founder of the Gephi project and Google Summer of Code administrator.
Networks are everywhere: email systems, financial transaction systems and gene-protein interaction networks are just a few examples. Gephi began as a university student project four years ago and has quickly become an open source software leader in the visualization and analysis of large networks. It is an important contribution to the ecosystem of tools used by researchers and big data analysts to explore and extract value from the deluge of relational data and disseminate a better understanding for people to think about a ‚Äúconnected‚Äù world.
Gephi is a ‚ÄúPhotoshop‚Äù for such data: designed to make data navigation and manipulation easy, it covers the entire process from data importing to aesthetics refinements and communication. Users interact with the visualization and manipulate structures, shapes and colors to reveal the properties of complex and messy data. The goal is to help data analysts make hypotheses and intuitively discover patterns or errors in large data collections.

Our success was made much faster thanks to the Google Summer of Code. The timing of our acceptance into our first Google Summer of Code in 2009 was perfect: we were at the point where we could make the project really open in the way our infrastructure could scale code, and our human organization was ready to welcome contributors. Participating in the program gave us a boost of fame helping us promote the project and created an international community for Gephi.
We met many people and learned a lot, but this is the most important lesson to share: though students are paid stipends for their work during the program, money should not be the first incentive. To encourage students to stick with the project, we talk with each of them to find their deeper motivations in working on Gephi and try and develop a win-win situation. And it works! Many of the students continue to contribute to the project for at least a few months after the end of the Google Summer of Code program, and others have gone on to become members of our team.
We recognize this long-term investment by promoting their work, like Andr√© Panisson who released a plug-in in 2010, which connects Gephi to a graph stream and visualizes it in real-time. Andr√© made this amazing video of the Egyptian Revolution on Twitter, when he monitored the hashtag #jan25. More recently, Martin ≈†kurla presented his work at FOSDEM 2012 and talked about his plug-in which connects Gephi to the graph database Neo4j. He started his project during the Google Summer of Code 2010 and continued his work until the release. We really appreciated the effort, so the Gephi Consortium and Neo Technologies Inc. paid his expenses to attend the conference. Finally, I must talk about Eduardo Ramos, who we rejected as a student two years ago for Google Summer of Code but who was so motivated that he decided to contribute to Gephi anyway, becoming one of the project leaders, a Google Summer of Code mentor‚Ä¶ and a friend!
To learn more about Gephi, watch our madness screencast and view our previous Google Summer of Code projects here. Want to apply for Gephi? Join us on the forum.
","['S√©bastien Heymann', 'Andr√© Panisson', 'Martin ≈†kurla', 'Eduardo Ramos']"
46,2012-03-06 10:44:52+01:00,Weekly news,"
In this short post we summarize the community‚Äôs activity of last week. It aims at giving the last news to the people who don‚Äôt have a Twitter account or who don‚Äôt connect to it each day.
New plugin:

Recast Column in the Data Laboratory

New Web articles:

By @gvegayon: rgexf, an R library to build GEXF graph files
RT @ooof: ‰ø°ÊÅØÂ§ßÁàÜÁÇ∏ÂêéÔºåÊï∞ÊçÆÂèØËßÜÂåñ„ÄÅGephi„ÄÅMOOC‚Ä¶ 

New research paper:

A. Helmond and E. Weltevrede: Where do bloggers blog? Platform transitions within the historical Dutch blogosphere, First Monday, vol 17, number 2

","['A. Helmond', 'E. Weltevrede', 'gvegayon', 'ooof']"
47,2012-02-27 10:39:13+01:00,Weekly news,"
In this short post we summarize the community‚Äôs activity of last week. It aims at giving the last news to the people who don‚Äôt have a Twitter account or who don‚Äôt connect to it each day.
New Web articles:

By Totetmatt: Arrow V ‚Äì Command Line Crawler in Python using Gephi graph streaming
RT @pcbje: Visualizing k-nearest neighbors with Gephi
By @seinecle: Overlyde ‚Äì create dynamic maps of scientific publications from the Web of Science
By @sharismlab: ‰ªãÁªç Gephi ÁöÑÂêÑÈ°π‰∏ªË¶ÅÊìç‰ΩúÊñπÊ≥ï Gephi course in Chinese on the way
RT @mdomenjoud: Introduction aux graphes avec #Neo4j et Gephi #OCTOTechnology , un sujet R&D passionnant!

New research papers:

M. Gencer: The Evolution of IETF Standards and their Production, International Journal of IT Standards and Standardization Research (IJITSR)
A. Herdagdelen et al.: An Exploration of Social Identity: The Geography and Politics of News-Sharing Communities in Twitter
I. Vlachos, A. Aertsen, A. Kumar: Beyond Statistical Significance: Implications of Network Structure on Neuronal Activity, PLoS Comput Biol 8(1): e1002311.
V. Labatut and J-M. Balasque: Detection and Interpretation of Communities in Complex Networks: Practical Methods and Application

Notice that all research papers using Gephi are listed on the wiki.
","['Totetmatt', 'pcbje', 'seinecle', 'sharismlab', 'mdomenjoud', 'Gencer', 'Herdagdelen', 'Vlachos', 'Aertsen', 'Kumar', 'Labatut', 'Balasque']"
48,2012-02-25 12:50:07+01:00,Annual report 2011,"
The previous year has seen the consecration of Gephi in various research fields and the software development is now fully mature, leading the way to neat plugins and usages by companies. Looking back to one year ago, we are proud to note that we reached all of our goals, excepting the user manual. Following is the result of the Gephi Consortium for 2011.
Get the annual report in PDF here 
For any question, please contact us at consortium@gephi.org.


",[]
49,2012-02-20 22:03:36+01:00,Gephi-Neo4j presentation at¬†FOSDEM,"
Martin ≈†kurla, developer of the Neo4j connector in Gephi and former Google Summer of Code student in 2010, gave a complete talk about his plug-in at the last FOSDEM conference in the workshop on Graph Processing. His talk covers the installation and showcase of visualization capabilities of Neo4j graph database in Gephi, as long as the exploration of general useful features of Gephi applying them on imported Neo4j database. Watch the video below, and comment it to ask additional questions!

The Neo4j plugin of Gephi is now officially supported by Neo Technology, Inc. If you have a software project involving Gephi, contact us at consortium@gephi.org to see how we can help you.
",['Martin ≈†kurla']
50,2012-02-02 11:30:44+01:00,Gephi meet-up #4 in¬†Berlin,"
Information Epidemics with Gephi by Dmitry Paranyushkin / Nodus Labs
Large groups of people can drastically change their opinion, adopt a completely unexpected trend, come out to protest on a square, adopt a certain ideology, have an amazing time at a party, or start using a certain product on mass scale. While all these social phenomena are diverse, one thing in common is that they involve information dissemination that happens in a synchronized way, evoking a certain response from the population at once.
In this workshop I will demonstrate how epidemic theories from network science can be used to study information contagion and trend/rumor propagation (so-called information cascades). We will use real examples from Facebook and Twitter, as well as Gephi software to visualise the sample data.
You will learn what groups to target when planning effective marketing campaigns, how promote your news to the top of the feed on Facebook, generate and seed trends in social networks. You will also find out how information becomes viral and what one can do in order to increase the message‚Äôs contagious potential.
The workshop will be held in English and German.
To sign up: workshopinformationepidemics-eorg.eventbrite.com
Date: 16th of February, from 6:00 PM to 8:00 PM
Place: betahaus, 19-20 Prinzessinnenstr (U8: Moritzplatz), 4th floor Arena hall

",['Dmitry Paranyushkin']
51,2012-01-12 08:44:51+01:00,Introducing the Gephi Plugins¬†Bootcamp,"
We‚Äôre happy to announce a new tool for the community today: the Gephi Plugins Bootcamp. The bootcamp is a large set of plug-in examples to guide developers create Gephi plugins easily.
Gephi‚Äôs vision focuses on the platform and we want developers to be creative and¬†successful. Gephi is built in a way it can be easily extended with plug-ins (layout, filters, io, preview, ‚Ä¶) but it‚Äôs not always easy to know where to start. The bootcamp addresses this need and provide the¬†environment and the examples to get started.
Want to create a new layout? The Grid Layout example shows how to read the graph and to change coordinates. A new filter? A new exporter? Check out the JPGExporter or the SQLite exporter examples. Below is the complete list of examples and we‚Äôll add more soon upon requests.
Checkout the code on GitHub. 
The README file contains the instructions to get the code and to run the examples.
Layout




Grid Layout
Place all nodes in a simple grid. Users can configure the size of the area and the speed.




Sorted Grid Layout
Same example as Grid Layout but users can sort nodes using an attribute column.




Filter




Transform to Undirected
Edge filter to remove mutual edges in a directed graph.




Top nodes
Keep the top K nodes using an attribute column.




Remove Edge Crossing
Example of a complex filter implementation which removes edges until no crossing occurs.




Tool




Find with autocomplete
Tool with a autocomplete text field to find any node based on labels and zoom by it.




Add Nodes
Listen to mouse clicks and adds nodes. Also adds edges if selecting other nodes.




Export




JPG Export
Vectorial export to the JPG image format. Contains a settings panel to set the width and height.




SQLite Database Export
Current graph export to a SQLite Database file. A new sub-menu is added in the Export menu and an example of a custom exporter is shown.




Preview




Highlight Mutual Edges
Colors differently mutual edges. Overwrites and extends the default edge renderer.




Glow Renderer
Adds a new renderer for node items which draws a glow effect around nodes.




Node Z-ordering
Extends the default node builder by reordering the node items by size or any number columns. Also shows how to create complex Preview UI.




Importer




Matrix Market File Importer
File importer for the Matrix Market format. Large set of matrix file examples on Yifan Hu‚Äôs gallery.




Statistics




Count Self-Loop
Example of a statistics result at the global level. Simply counts the number of self-loop edges in the graph.




Average Euclidean Distance
Example of a per-node calculation. For a given node it calculates the average distance to others.




Plugins sub-menu




Test action
Simple action which displays a message and a dialog.




Remove self loops
Action which accesses the graph and removes self-loops, if any.




Using Progress and Cancel
Action which creates a long task and executes it with progress and cancel support.




Execute at startup




When UI is ready
Do something when the UI finished loading.




Workspace select events
Do something when a workspace is selected.




Processor




Initial Position
Set up the nodes‚Äô initial position always the same. It calculates a hash with all nodes so the X/Y position is randomized always in the same way.




Panels




New panel
Example of a new panel plugin set up at the layout position.




If you have any questions please send an email to the gephi-plugins [at] lists.gephi.org mailing list or stop by on the forum.
",['Yifan Hu']
52,2011-12-06 13:54:55+01:00,Gephi meet-up #3 in¬†Berlin,"
Text Network Analysis with Gephi by Dmitry Paranyushkin / Nodus Labs
In this workshop we will demonstrate a novel method for text network analysis using Gephi graph visualization software. Unlike other topic modelling methods (latent semantic network analysis, LDA) our approach takes into account the structural properties of text network in order to identify the clusters for meaning circulation and the most influential concepts within the text. You will learn how to create graph network representations of texts and perform their comparative quantitive and qualitative analysis. The method can be especially useful for quick text summarization and group sentiment profiling.
What It Can Be Used For:
‚Äì Identifying the most influential concepts and topics within a text.
‚Äì Comparing different texts together, especially what strategy a text uses to ‚Äúpush‚Äù a certain agenda.
‚Äì Group sentiment analysis: find the terms that unite any group together
‚Äì Quick text summary and overview (can be especially useful for studying or law text)
If you‚Äôd like to participate you can send us a short text (200 to 300 words) to info at noduslabs dot com describing your interests and current occupations. We will create text graphs both for participants and the whole group and see how they relate to one another (see the image attached). This may also be useful for you to meet other like-minded individuals at betahaus or find the people who could complement your cognitive map with their knowledge.
To sign up: workshopnoduslabs1.eventbrite.com
Date: 7th of December, Wednesday, 18.00 to 20.00
Place: betahaus, 19-20 Prinzessinnenstr (U8: Moritzplatz), 4th floor Arena hall
We highly recommend you to bring your laptop with you and pre-install Gephi graph visualization software on your computer (works on Mac, PC, Linux).
",['Dmitry Paranyushkin']
53,2011-11-15 17:59:23+01:00,"Gephi adds Neo4j graph database support,¬†screencast","
Neo4j is a powerful, award-wining graph database written in Java. It can store billions of nodes and relationships and allows very fast query/traversal. We release today a new version of the Neo4j Plugin supporting the latest 1.5 version of Neo4j. In Gephi, go to Tools > Plugins to install the plug-in.
The plugin let you visualize a graph stored in a Neo4j database and play with it. Features include full import, traversal, filter, export and lazy loading.
¬†

Neo4j Integration into Gephi from gephi on Vimeo.
The plug-in is officially supported by the Neo4j team and is open to contribution! The code is hosted on GitHub.
If you have suggestions please send them our way, we would love to hear your feedback! The forum is the best place for that.
",['Neo4j']
54,2011-11-12 19:49:24+01:00,Gephi migrates to¬†GitHub,"
We are happy to announce we finished the migration of our code from Launchpad to GitHub. All the code and bugs have been successfully transfered with the complete history. We can now profit from the best platform out-there and use Git, the fastest revision control system.
We hope you‚Äôll find GitHub faster and easier to use than Launchpad. The team is already appreciating how easy it is to report issues and work together on the code. GitHub has more than a million users and will make the project more visible and ease external contributions.
Technically, we migrated our branches from Bazaar to Git (thanks to git-bzr) so the history is entirely kept. We also moved all our bugs with a simple script. We are still working on the details. If you see something wrong or missing on GitHub, please contact us or create an issue on GitHub. If you had some branches on Launchpad, you can find them on the GitHub repository. Let us know if you have questions. Contributors simply fork the repository and get started. We updated the documentation on the wiki. Consult the Developer Handbook.
Checkout code
Run
git clone git://github.com/gephi/gephi.git
Report issues
Simply go to the Issues tab.
Build in one step
Simply run ant at the root of the repository to build Gephi. The executable are located in the dist folder.
We made some improvements on the building process. Previously, Netbeans was required to build Gephi. We now integrates the platform directly in the source code so it‚Äôs not necessary anymore. It‚Äôs literally a one step process.
Please let us know your feedbacks and questions as usual on the forum.
",[]
55,2011-10-29 04:04:36+01:00,Next Gephi Workshop at¬†Stanford,"
Elijah Meeks, digital humanities specialist and Gephi expert (see the video below), will be holding an Intro to Gephi workshop at Stanford University in Meyer Library 220 (also known as the Flex Classroom) at 11AM on Friday, November 11th. The entrance is free.

",['Elijah Meeks']
56,2011-10-17 09:59:22+01:00,"New Gephi Toolkit release, based on 0.8¬†beta","
A new release of the Gephi Toolkit arrived, based on the 0.8 beta version. Download the latest package, including Javadoc and demos by clicking on the link below.

It includes all features and bugfixes the 0.8 beta version has. Check out the Release Notes
Demos available on the Toolkit Portal have been adapted when necessary and tested. If you are interested in using plug-ins from the Toolkit, checkout How to use plug-ins with the Toolkit.
One of the exciting new feature released in the 0.8 beta is the new Preview. Because it has been completely rewritten with a much simpler and powerful API it‚Äôs now possible to reuse the Processing-based applet in other applications. You can now reproduce the zoom-and-pan experience in Gephi‚Äôs Preview tab in other Java applications easily. Checkout this demo to learn more.

Links you may be interested:

Gephi Toolkit Tutorial (updated with new Ranking and Preview)
Tips to use the Gephi Toolkit with other JVM languages

",[]
57,2011-10-12 21:52:46+01:00,"""Everything looks like a graph, but almost nothing should ever be drawn as¬†one.""","
 
I get scratched with this statement made by Ben Fry in the book ‚ÄòVisualizing Data‚Äò (2008). Although I have a great respect for Ben Fry‚Äôs work and his position may have evolve since then, I want to moderate this statement so that data explorers like danbri can make their own opinion.
Ben Fry in ‚ÄòVisualizing Data‚Äò:
Graphs can be a powerful way to represent relationships between data, but they are also a very abstract concept, which means that they run the danger of meaning something only to the creator of the graph. Often, simply showing the structure of the data says very little about what it actually means, even though it‚Äôs a perfectly accurate means of representing the data. Everything looks like a graph, but almost nothing should ever be drawn as one.
There is a tendency when using graphs to become smitten with one‚Äôs own data. Even though a graph of a few hundred nodes quickly becomes unreadable, it is often satisfying for the creator because the resulting figure is elegant and complex and may be subjectively beautiful, and the notion that the creator‚Äôs data is ‚Äúcomplex‚Äù fits just fine with the creator‚Äôs own interpretation of it. Graphs have a tendency of making a data set look sophisticated and important, without having solved the problem of enlightening the viewer.

I totally disagree. Look at this simple plot:

Can anyone tell me how, simply showing this plot, one is enlightened if I don‚Äôt tell how it was done, and what is interesting to look at? It however appears very simple: only one curve, something that you are used to see since the time you discovered this kind of drawing in primary school. And even if I give some insights on how I made it and the context of the work, I‚Äôm still, as the creator, the only one able to deeply understand the information that can be extracted because I know the process that built the underlying data. To criticize my conclusions, you will need to learn as much as I did and you will need to get the same data and apply the same manipulations. Depending on the curation, reformatting, filtering or whatever the algorithms you used to capture, extract and use some data, each action has an impact on the meaning carried on by the data. Graph visualization is no exception, and is like any plot except that you can‚Äôt hide the structural complexity without explicit filtering.
Let‚Äôs enumerate all the dimensions used in a graph visualization: x+y coordinates, size of nodes, color of nodes, thickness of edges. Well, it is not easy to read on 5 dimensions. But is the ‚Äúsimple‚Äù plot a better deal? You have x+y coordinates, so 2 dimensions only (we might also have used colors and dot sizes as well, and get 4 dimensions). So you might think that you and your readers can interpret it easily and reliably. You are all wrong because of the hidden dimension: scaling.
Here you see a plot in a log-lin scale, that mean the y-axis is in a logarithm scale, while the x-axis is in a normal scale. I found this visual pattern interesting on these data because of my research question, because I understand the meaning on the process that made them, and because I found it in this particular scale. Plotted in lin-lin scale, I can find less information. Or maybe should I use a cumulative function to plot my data? Maybe an inverse cumulative? Etc. An exploration of both data and projection techniques is required.
By doing one projection, I focus on something very particular on the data, and I still need other plots and statistical tests a) to decide whether it supports an hypothesis I have in mind, or b) if I can find something new, something unexpected. The distortion of vision is therefore at the same time an issue and a tool to better dig inside the data. I could also make very wrong conclusions, even on analyzing this simple drawing, so why external readers should be more protected this way? There is a balance to find between a drawing that looks simple to read so conclusions appear obvious (even if they are not and you might be wrong), and the opposite one that looks too complex to read so little conclusions will be made, if any. Hence this is a fallacy to argue that graphs are meaningful only for their creator, because it is the case for any plot taken solely, and it is a hard job to enter into the work of somebody else anyway.
So graph visualization is not naturally worse compared to any data drawing: we just don‚Äôt teach how to read them in primary school. Do you remember the first time you saw a plot? I guess you find it really abstract. Most of the people don‚Äôt really know what to look at on a graph, and produce visualizations that don‚Äôt show something in particular. I personally think that it is a good thing, because put in context graph visualization is very young compared to other data drawings, and a language of networks that combine layout algorithms and visual variables is still in the making. Moreover, after meeting and discussing with people publishing such visuals, it seems that they already use it in a pragmatic way: by showing their complexity, graphs communicate to the reader that a) data might contain interesting information (‚Äúso please, read until the end!‚Äù), b) they made things and propose some findings but it was hard and many other things could be done (‚Äúhey, let‚Äôs try by yourself!‚Äù). It is useless to discover the secrets of the universe if nobody listen to you. Before enlightening the viewer, one should attract the viewer enough so that he/she will take the time to read, and graphs are useful for that need.
But drawing graphs as graphs is not only useful to communicate. Their primary use for researchers is exploratory analysis when the study is not focused on the sole structure of the data, but when elements in context matter because you have a prior knowledge on them, and your questions are related to another perspectives (say, sociology). I take the example of our work at Sciences-Po, where we teach the mapping of controversies to students that will become the future decision makers of companies or public policies. Part of the controversies in the public space are expressed on the Web. The dynamics of the discussions and the hyperlink structure of the Web makes this field particularly hard to investigate. We successfully use graph visualization of websites to help the students to orientate in this space, to assist and justify the classification of websites, and to assert the position of the actors of a controversy. This is just one case among others where there is currently no viable alternative to graph drawing and it‚Äôs synoptical property (see the whole without reduction of data).
Finally, the different usages of graph drawing are growing as it becomes mainstream and more people are acculturated. I trust on the people to innovate and progressively learn how to read and extract information. Just practice.
","['Ben Fry', 'danbri']"
58,2011-10-04 18:08:16+01:00,Gephi 0.8 beta¬†released,"
The latest beta version of Gephi has been released, download it for Windows, Mac OS and Linux platforms. This release focus on new features for both users and developers, and the new license unlocks opportunities for business. The Ranking and Preview modules have been completely rewritten in a modular way and can be now extended with plug-ins! Preview can now be extended in many ways, for instance group shapes or edge bundling. Moreover, continuous progress have been made on the dynamic network support and we release today the last big part: statistics over time, available from the Statistics module when the network is dynamic. Thanks to users who reported bugs, it‚Äôs the only way to fix them.
The team will now start developing the 0.9 version of Gephi (please consider joining us!) and integrate the latest Google Summer of Code projects, including a new timeline.¬†We are also willing to help as much as possible plug-ins developers to get things done and improve documentation. We want to leverage the new Preview and will help newcomers to get started.
Because it‚Äôs a major release, changes are not deployed through the AutoUpdate, you need to download and install the new version. Plug-ins also need to be checked for compatibility. They will reappear on the Plugin Center in the coming days, as they are verified. Thanks for your patience.
Consult the release notes and the new Javadoc for more information.
Features highlight




Dynamic Ranking
Ranking now works with dynamic networks and it‚Äôs easy! When manipulating a dynamic network with the Timeline simply enable the ‚ÄòAuto Apply‚Äô and the color/size is updated in real-time. To import a dynamic node size simply import a regular dynamic column in your GEXF and select it in Ranking like before.



PNG Export
A new powerful PNG export has been added to the existing PDF and SVG export. One can create high-resolution network images with all the customization available in Preview. You can even create transparent background images!



New Preview
Major effort to completely rewrite the Preview module in a modular way. One can now create plug-ins for Preview! The new Preview includes new opacity options, a text outline, radius (customize edge start/end points) and a simplified list of properties.



Dynamic Metrics
New dynamic metrics in the Statistics module: Dynamic Degree, Dynamic Node Count, Dynamic Edge Count and Dynamic Clustering Coefficient. Dynamic metrics are executed on a dynamic network and allow to analyze how network properties evolve over time.



New And Noteworthy
* Data Lab node merging
* ForceAtlas2 layout algorithm, with multi-thread option
* Node and Edge transparency in Preview
* Edge labels on curved edges in Preview
* Text outline now in Preview
* Database importer now supports time columns (start & end)
* DL Export (Thanks to Taras Klaskovsky)
* GML Export (Thanks to Taras Klaskovsky)
* NET Export (Thanks to Daniel Bernardes)
* K-core filter
* Inter and Intra partition filter
* Now supports SQLite databases
* Display the number of layout iterations in status bar when ended
* Recent Palette in Ranking
* Weighted degree now also for directed graphs
New localization (Go to Tools > Languages)
* Portuguese (Brazilian) (Thanks to C√©lio Faria Jr)
* Japanese (Thanks to Siro Kida and Koji Chono)
Performance
* Memory starvation manager, warns the user before running out of memory
* Less memory usage with attributes
Bug fixes
* Timeline need more precision when dealing with dates (bug 521937)
* Exception on range slider (bug 541808)
* Inconsistent label data from Overview to Preview (bug 660204)
* Statistics: sub-optimal modularity (bug 727701)
* Timeline cann‚Äôt drag if the two sliders moved to the left (bug 745476)
* Missing Polish characters when exporting to pdf (bug 746740)
* Edge selection color is not correct on OSX (bug 752300)
* Workspace name truncated, hard to read (bug 758578)
* Average degree cannot be switched to directed / undirected (bug 760454)
* Window->Favorites appears in 0.8 alpha (bug 764494)
* Disable ‚Äòdirected‚Äô on metric settings if the graph is undirected (bug 771318)
* Timeline does not work (exception) (bug 774455)
* Layout properties can‚Äôt be saved in a language and loaded in another language (bug 783637)
* Preview: edge label not shown (bug 783868)
* Possible memory leak on Dynamic Range Filter (bug 784606)
* Edge attributes not saved in .gephi project file (bug 785268)
* Data Lab: Exception when selecting only one column for merging (bug 785269)
* Data Lab Import Spreadsheet should not ignore parallel edges (bug 785635)
* Data Laboratory: wrong edge type created (mutual instead of directed) (bug 787401)
* Data Lab: impossible to edit time intervals in a date format (bug 793163)
* Spelling of Proportionnal (bug 794358)
* Graphics errors when JOGL installed as a JRE/JDK extension (bug 799545)
* NPE if source/target is empty in GEXF import (bug 799574)
* Toolkit can‚Äôt open .gephi files (bug 802101)
* Resizing edge sizes changes edge weight values (bug 803763)
* Preview does not use node label settings from overview tab (bug 805763)
* Data Lab ‚ÄòImport Spreadsheet‚Äô dialogue should accept other file types than .csv (bug 806798)
* Edge weights not imported from CSV matrix (bug 808078)
* Preview tab: no option to switch off node borders? (bug 808606)
* Gephi runs out of memory without warning the user (bug 811373)
* Counter-intuitive filename in Data export dialog (bug 814178)
* NullPointerException when creating newProjects too quickly (bug 817170)
* Nodes and edges Id attribute dictionary is not properly created when loading a .gephi file (bug 818181)
* Database driver doesn‚Äôt persist in Edge List Database import UI (bug 822316)
* NodeEqualNumberFilter does not work (bug 823038)
* Gephi does not build on JDK 7 (bug 823543)
* SVG node, edge export should include relevant node IDs as classes (bug 827706)
* Import Spreadsheet: need to trim column names (bug 829956)
* Layout list not sorted by name (bug 830149)
* In/Out degree metric is computed on the main graph instead of the visible graph (bug 830752)
* Layout is not giving the algorithm‚Äôs number of iterations (bug 831782)
* Banner height issues, need a fixed height (bug 834400)
* NPE when running ClusteringCoefficient on a filtered graph (bug 852799)
* Missing node properties from dot file (bug 855410)
* ‚ÄòThe value column doesn‚Äôt exist‚Äô error when opening a gephi file (bug 857595)
* Import fails for NET (Pajek) file with position/color data (bug 860825)
* GEXF export referes to v1.1 schema, should be v1.2 schema (bug 864484)
New Plug-ins documentation
Checkout the documentation for the newly created Preview module: HowTo write a Preview Renderer. Learn also how to extend the Data Laboratory features in a new tutorial.
New license
Gephi is now released in the dual license CDDL + GNU GPLv3. We abandon the GNU AGPL to offer new opportunities to reuse and integrate parts of Gephi in a full Open Source way. The dual license system means the possibility to choose to apply either the CDDL or the GNU GPLv3 when Gephi source code is integrated to a derivative work. When modified, original files of Gephi should always be published publicly so that the community benefit from the improvements. However, the CDDL license does not require to publish the whole work, so you can build commercial applications for free using Gephi source code!
The CDDL is a license created by Sun and approved by the Open Source Initiative. It is business-friendly. Read the Legal FAQs to learn more, and ask questions on the forum.
Contribute
It‚Äôs fun to contribute to an open-source project!¬†Contribute whatever the time you can give: few minutes to¬† report a bug, some hours to fix one or to translate the user interface or more to create a plug-in. If you‚Äôre a student and looking for cool and challenging semester projects check out the Gephi Student Program or contact us.
Do Gephi technologies matter for your research or business? You can support us by donating to the Gephi Consortium, or becoming a member to have an impact on our roadmap.
Feel free to reach to us if you are willing to organize events (meetups, workshops, hackathon, etc.), we will support them.
","['Taras Klaskovsky', 'Daniel Bernardes', 'C√©lio Faria Jr', 'Siro Kida', 'Koji Chono', 'Sun']"
59,2011-09-26 16:09:43+01:00,"First Gephi Plugin Developers Workshop on October,¬†6","

This is an announcement for the first Gephi Plugins Developers Workshop October 6, 2011 in Mountain View, California. Come and learn how to write your first Gephi plugin and ask questions. The workshop is organized by Mathieu Bastian, Gephi Architect and will be gratefully hosted by IMVU.
Gephi is a modular software and can be extended with plug-ins. Plug-ins can add new features like layout, filters, metrics, data sources, etc. or modify existing features. Gephi is written in Java so anything that can be used in Java can be packaged as a Gephi plug-in! Visit the Plugins Portal on the wiki and follow the tutorials to get started.
The workshop will start with a presentation of Gephi‚Äôs architecture and the different types of plugins that can be written with examples. Details about Gephi‚Äôs APIs, code examples and best practices will be presented in an interactive ‚Äúlive coding‚Äù way. The Gephi Toolkit will also be covered in details. The second part of the workshop will be dedicated to help individuals with their projects and answer questions.
Some of the best projects using or extending Gephi are developed in the Silicon Valley and we are looking forward helping the developer community. Please don‚Äôt hesitate to send us your ideas to maximize efficiency.
RSVP here
",['Mathieu Bastian']
60,2011-09-26 08:20:21+01:00,Gephi meet-up #2 in¬†Berlin,"
People in Beta is a festival about startup culture, diy and co-working hosted on the 1st of October at betahaus in Berlin.
As a part of this festival Nodus Labs will do a workshop on social network analysis starting at 13.30, finishing at 14.30 (reserve your space on people in beta festival website).
Also, betahaus cafe will be a space where everyone can host their own session, so right after the workshop, at 14.30, we‚Äôll host the second Gephi meetup in Berlin downstairs at one of the open tables. Together with the other guests we‚Äôll talk about the different ways we use Gephi and Dmitry from Nodus Labs will show some practical applications of Gephi for text network analysis and social network analysis.
You are welcome to come and join in!
You can read a report on the previous meet-up on the blog of Nodus Labs.

¬†
 
Dmitry Paranyushkin is a professional amateur who‚Äôs had numerous affairs in the fields of arts, music, intersubjective relations, network research and internet business. He‚Äôs the founder of ThisIsLike.Com ‚Äì an online mnenomic network and Nodus Labs ‚Äì an exploratorium of ideas in the fields of network analysis. Having fled Russia for undefined reasons in 1976 he‚Äôs found a temporary refuge in Berlin where he lives in a castle on Spree river and occasionally visits betahaus to steal rocket-fast broadband frequencies.
","['Dmitry', 'Dmitry Paranyushkin']"
61,2011-09-21 14:27:45+01:00,First Gephi drink in¬†Paris,"
This is an announcement for the first Gephi User Group drink in Paris! The area has many active Gephi users and supporters and we are looking forward making regular meetups, to create connections and discuss features and projects. The group is also open to students interested in open-source or data visualization.
 The first event is planned for Wednesday September 28, 20.00 to 22.00 (free access) in Aux 2 Academies, 15 Rue Bonaparte, Paris Au P√®re Tranquille, 16 rue Pierre Lescot, Paris (map).
Gephi can be used in many domains and with different types of data. Whether you are a scientist, a student, an artist, a developer or a simple enthusiast, you are welcome to join the community and show up at our meetup. It‚Äôs a great opportunity to ask questions, discuss data, plugins, code, metrics or visualization.
 
The meetup will be organized by S√©bastien Heymann, Gephi co-founder. To register, sign-in on meetup.com and RSVP for the event.
",['S√©bastien Heymann']
62,2011-09-20 22:19:28+01:00,GSoC mid-term: Attributes Disk¬†Store,"
 
My name is Ernesto Aneiros and during this Google Summer of Code I am working on the Attributes Disk Store.
The problem
In Gephi, Attributes are the data that is associated with nodes and edges. As graphs grow larger and larger, attributes occupy more memory even though many times they are not essential to the end-user when he is only applying transformations or algorithms to the graphs. These attributes can be of different types, from simple Java primitives (byte, char, int, String, etc) to Gephi‚Äôs internal data types (lists of primitives or versioned data). The idea for the project was to have a combined memory/disk cache system to partially off-load these attributes to disk. The system should have a well-designed cache system to handle heavy read access on the most-accessed elements.
The Solution (1st iteration)
Lucene is one of the most popular text searching engines and a flagship Java open source project. Lucene is capable of handling and indexing millions of records while remaining performant, and when the idea for the Attributes API cache was born, Lucene was first considered for the role of the data store, and as added bonus Gephi will get full-text search capabilities with almost no extra effort. When analyzing the problem, the following criteria were developed to judge a possible data store:

Reliable (resistant to corrupted disk data, failed transactions, unexpected errors)
Fast
Transparent (minimum complexity exposed to the end-user)

While Lucene complies with items 2 and 3, the approach when dealing with corrupted indices in Lucene is to rebuild from scratch therefore failing item 1. This doesn‚Äôt pose a problem to Lucene because in the context where it is supposed to be used (indexing of external information), input data is always available separately from the index and can be accessed if needed. In Gephi, however, this is not the case. Once Attributes are loaded from disk they remain in memory until saved back to file. If an error occurs during a disk store transaction the end-user can end up losing a day‚Äôs work, certainly not acceptable.
The Solution (2nd iteration)
After Lucene was ruled out as a contender for a data store, several options were considered, including using embedded SQL databases and using a combination of Ehcache plus BerkeleyDb. Both options bring a lot to the table and embedded databases in Java have achieved impressive results in performance when compared to other mainstream database systems (see projects H2 and HSQL for example). Ehcache + BerkeleyDb however win when complexity is considered since they introduce almost no translation layers between Gephi and the cache. Both solutions are good fits for the problem but in the end the balance tilted in favor of Ehcache + BDB because the complexity consideration.
Optimizing Ehcache and BerkeleyDB
Even though Ehcache provides a great deal of functionality and features, it was relatively easy getting up to speed with it. The documentation provided online was very complete with code samples available and detailed explanations. In almost no time an in-memory cache was up,  running and being tested. Traditionally cache sizes have been specified as the amount of max elements that they can hold. In the 2.5 BETA of Ehcache a new feature was introduced that allowed sizing the caches by memory consumed instead of elements held. For our project this is a killer feature since we can now expose a single option to the user, letting him specify how much memory the cache should consume. Even though using the new feature proved a little more complicated than expected we obtained great feedback from the Ehcache community, specially from alexsnaps and Mike Allen, which helped us to solve the issues we were having.
BerkeleyDB on the other hand, is a very complex piece of software. With years of development under the belt, BDB has evolved to be a very robust and flexible database. In fact, it is so flexible that can be used as full blown database supporting queries, a simple key/value datastore or with a front-end that exposes a Java collections map that greatly simplifies its use. All of this flexibility does not come free though, configuring and optimizing BerkeleyDB requires delving into details about transactions, buffers, log file sizes and BDB internals. However the tools are there and the information provided is quite good, especially the FAQ and the optimization section.
Integration with Gephi
Since ease of use and transparency are important considerations for the end-user of Gephi, only the minimal configuration options are exposed in the preference panel of the disk cache, but an Advanced tab provides more control for those who want it.

The General settings tab, where cache can be enabled or disabled and the memory usage configured.

The advanced settings tab allows a more advanced user to configure several of BerkeleyDB‚Äôs options.
The Disk Store in Action

Memory consumption without the disk store. It reaches 400MB.

Memory consumption with the store, after load it drops below 400 MB. Note how load time increased due to disk operations, a trade-off to consider when using the store.
Known issues
The project is still in development. Being memory saving the main goal of the disk store project, results are not good enough yet because of several reasons.
While BerkeleyDB provides a very convenient way of storing bytes in disk, it is still a database oriented software and therefore it is not the most suitable solution for out project because of large memory usage to caching data, building and maintaining its index (features desirable for databases but not for this project).
Trying to reduce BerkeleyDB memory usage with its settings will produce quite different results in different systems or even in the same system. The benchmark above shows not bad results but it is not always the case. A better control of maximum heap growth can be observed but still with memory usage peaks that prevent better saving.
The conclusion is that it is a priority to replace BerkeleyDB with other disk persistence system or create one specifically designed for Gephi disk store.
It is also known that graphs with more complex data like strings or lists will always benefit more from a disk storage system than graphs with simple data like integers or booleans. An idea is to always store simple data in memory because indexing in in the disk is going to need as much memory anyway, or even more.
On the other hand, Gephi works and was designed with in-memory data structures in mind. Adding a cache/disk store to the system is bound to create integration issues with other parts of the codebase. For example the GEXF file importer tends to load large portions of the graph file to memory while parsing it, which is not so good in memory constrained environments and using the cache here will not make a difference. One of these issues is regarding the handling of data in files with .gephi format. Due to the way that .gephi files are imported, some integration problems still need to be debugged in the disk store to work properly.
Looking to the future
This GSOC project is only scratching the surface of what a memory + disk cache system can achieve. In the future BerkeleyDB could be replaced with other persistence provider, and it doesn‚Äôt necessarily has to persist locally to the disk. For example replacing BerkeleyDB with a datastore like Cassandra, or maybe some RDBMS.
Conclusion
While the Data Store API introduced by this project is still taking its first steps and can be significantly evolved, it has helped ironing out many issues and has paved the way for bigger and better improvements. Working during this summer has been a great experience and I have been able to share with great mentors like Eduardo Ramos, who knows the Gephi codebase in and out. I hope the work of all of Gephi‚Äôs GSOC‚Äôers becomes the starting point for many new features and enhancements that the community will surely appreciate. Happy coding and see you next summer!
","['Ernesto Aneiros', 'alexsnaps', 'Mike Allen', 'Eduardo Ramos']"
63,2011-08-31 18:50:53+01:00,First Gephi meet-up in¬†Berlin,"
This is an announcement for the first Gephi User Group meet-up in Berlin! The area has many active Gephi users and supporters and we are looking forward making regular meetups, to create connections and discuss features and projects. The group is also open to students interested in open-source or data visualization.
 The first event is planned for Thursday September 8, 17.30 to 19.30 (free access) in betahaus, 4th floor (Arena), Prinzessinnenstr 19-20, 10999, Berlin (map).
In this workshop conducted by Dmitry Paranyushkin from Nodus Labs hosted at Berlin‚Äôs most important co-working hub betahaus, we will demonstrate how one can visualize and analyze a social network or a community (using an example from Facebook selected by the participants). We will find out how to identify the most influential nodes within a network, various subgroups within a community, and the most efficient communication strategies to spread information within a group.
We will also discuss what behavior within the network fosters stronger ties between the members and a more sustainable community.
This event will also be first event of the Gephi Meetup Group in Berlin and we can move to betahaus cafe after to discuss further questions after the workshop.
¬†
 
Dmitry Paranyushkin is a professional amateur who‚Äôs had numerous affairs in the fields of arts, music, intersubjective relations, network research and internet business. He‚Äôs the founder of ThisIsLike.Com ‚Äì an online mnenomic network and Nodus Labs ‚Äì an exploratorium of ideas in the fields of network analysis. Having fled Russia for undefined reasons in 1976 he‚Äôs found a temporary refuge in Berlin where he lives in a castle on Spree river and occasionally visits betahaus to steal rocket-fast broadband frequencies.
",['Dmitry Paranyushkin']
64,2011-08-25 18:50:25+01:00,GSoC mid-term: a new Timeline to explore time-varying¬†networks,"
 
My name is Daniel Bernardes and during this Google Summer of Code I am working on the new Timeline interface.
Dynamic graphs have been the subject of increasing interest, given their potential as a theoretical model and their promising applications. Following this trend, Gephi has incorporated tools to study dynamic networks. From a visualization perspective, a critical tool is the Timeline component, which allows users to select pertinent time intervals and display and explore the corresponding graph. The challenge concerning the timeline was twofold: redesign the component to improve user experience and add extra features and introduce an animation scheme with the possibility to export the resulting video.
Together with my mentors Cezary Bartosiak and S√©bastien Heymann, we have proposed a new design for the timeline component featuring a sparkline chart in the background of the interval selection drawer (which is semi transparent): this feature will help the user to focus on particular moments of the evolution of the dynamic graph, like bursts of connections or changes in graph density or other simple graph metrics. Current metrics are the evolution of the number of nodes, the number of edges and the graph density. The sparkline chart was preferred to other chart solutions because it does not add too much visual pollution to the component and adds to the qualitative analysis. The interaction with the drawer remains globally the same of the old timeline, to guarantee a smooth transition for the user.

To implement this feature we have used the chart library JFreeChart (a library already incorporated to Gephi), customizing their XYPlot into a Sparkline chart by modifying their visual attributes. To display the Sparkine, one needs to measure the properties of the graph in several time instants of the global time frame where the dynamic graph exists. This represented a major challenge, since the original architecture did not allow the timeline component to access (and measure) the graph in particular instants of time; the solution was to introduce a slight modification to the DynamicGraph API to provide an object which gave us snapshots of the graph at given instants. Other challenges we dealt with included the automatic selection/switching of real number/time units in the timeline (depending on the nature of the graph in question) and sampling granularity of the timeline.
Another breakthrough of this project was the introduction of the timeline animation. Once the user has selected a time frame with the drawer it can make it slide as the corresponding graph is being displayed on the screen. Besides the technical aspects of interaction between the timeline and the animation controller, there were also an effort to calibrate the animation (ie, in terms of speed and frames) so it would be comfortable and meaningful for the user.
As far as the UI is concerned, the component has gained a new ‚ÄúReset‚Äù button next to the play button which activates the timeline drawer and displays the chart. It also serves to reset the drawer selection to the full interval when the timeline is active. The play button gained its original function, that is, to control the animation of the timeline ‚Äî instead of activating the selection.

Finally, the animation export to a video format revealed to be more tricky than expected and couldn‚Äôt be finished as planned. There were several setbacks to this feature, beginning with the selection of a convenient library to write de movie container: it turns out that the de facto options available are not fully Java-based and need an encoder working in the background. The best alternative I found was Xuggler, which is based on ffmpeg. Also, obtaining screen captures of the graph to were a little bit tricky so I have exported SVG images from the graph corresponding to each frame, converted them to jpeg and than encoded them though Xuggler to a video format. As one might expect, this solution is not very efficient in terms of time, so Mathieu Bastien and my mentors suggested me to wait for the new features from the new Visualization API that would make this process simpler.
In addition to current bugfixes and minor improvements concerning the timeline and the animation, the movie export remains the the next big step to close this project. If you have questions or suggestion, please do not hesitate! The new timeline will be available in the next release of Gephi.
DB
","['Daniel Bernardes', 'Cezary Bartosiak', 'S√©bastien Heymann', 'Mathieu Bastien', 'DB']"
65,2011-08-19 08:34:38+01:00,"GSoC mid-term: GraphGL, network visualization with¬†WebGL","
 
My name is Urban ≈†kudnik and during this Google Summer of Code I develop GraphGL, an open source network visualization library for the Web.
Introduction
GraphGL is a network visualization library designed for rendering (massive) graphs in web browsers and puts dynamic graph exploration on the web another step forward. In short, it calculates the layout of the graph in real time and is therefore suitable for static files (exported GraphML/GEXF files) and for dynamic files (LinkedIn InMaps would be one such example).
As such, it is both a replacement for Gephi and a complimentary tool, similar to Seadragon, providing another method for displaying graphs in a Web browser.

 Static demo on the Java dataset.
 Static demo on a random graph with 100 nodes and 500 edges.
 Static demo on a random graph with 10,000 nodes and 50,000 edges.
 Static demo on a random graph with 100,000 nodes and 200,000 edges.
 Dynamic demo on Java dependencies dataset.
Commands: mouse left-button to pan, mouse wheel to zoom.
Alternatives
While having Gephi (renderer, at least) in the browser would be nice, such alternatives are not really realistic ‚Äì for one, Java in Web browser is not welcomed by many users as it alone is a large resource hog. Another issue that can be raised is it‚Äôs integration with the rest of the web environment and issues that a developer can face with integration into his web application. It‚Äôs benefit however would be almost native-application performance.
Flash can also be considered for our problem as it supports 3D hardware accelerated graphics but being a proprietary technology it is not particularly attractive, especially for a library that wants to be based on open and standard technologies.
An alternative is aforementioned Seadragon plugin that builds image tiles of the rendered graph and provides interactivity components similar to those found at Google Maps or any other mapping site. As calculating graph layout and rendering itself can be very resource intensive this method can still be encouraged at graphs where unreasonably large amounts of RAM and CPU are required. It‚Äôs issue is interactivity and dynamics ‚Äì after graph is rendered and exported, it can not be easily changed, especially not in real time.
WebGL and Web Workers
However, WebGL and WebWorkers present a solution, that can circumvent the issues of interactivity and dynamics and at the same time offer good performance.
3D graphics on the Web was always a bit tricky and was only possible if you had Java or Flash plugin. WebGL origins can be traced to Canvas 3D experiments at Mozilla in 2006, but it was in 2009 that Mozilla and Khronos, consortium that is focused (among other) on creating and maintaining open standard for graphics, started WebGL Working Group. It‚Äôs first stable specification was released in March 2011.
Since then, it has been touted both as a solution to 3D graphics problem on the web as well as a huge security vulnerability that provides a completely new vector of attack ‚Äì access to kernel-mode graphics drivers and hardware.
The WebGL API is based on OpenGL ES 2.0 (with slight changes) and is exposed through HTML Canvas element. OpenGL ES 2.0, in turn, is a subset of OpenGL, primarily target at embedded devices and enables fully programmable 3D graphics with a vertex and fragment shader exposed to the developer.
Web Workers are a lot less controversial technology. Basically, they are an API for starting, running and terminating Javascript scripts in the background (separate thread) and thus allow web application to perform long-running calculations that could otherwise be interrupted either by user actions or by browsers timeout limits for Javascript.
WebGL and Web Workers are supported by Firefox (enabled by default since 4), Safari (disabled by default in 5.1), Chrome (enabled by default since 9) and Opera (though for Windows at the moment there is only a development build).
Microsoft has already indicated that they do not plan to support WebGL in its current form due to security issues, but there is a plugin, IEWebGL, that adds support for it.
Basically, all of this boils down to this: if your users are relatively tech savvy and therefor have relatively modern web browser and that browser is not Internet Explorer, you can give GraphGL a serious consideration. If your target audience will include a large proportion of IE users that will not or can not install a plugin, this might not be your optimal solution.
GraphGL
GraphGL‚Äôs objective is to be an open source network exploration tool for the Web. Built with open technologies, easily extensible (e.g. with other layout algorithms), easy to integrate with existing web applications, it enables easy adoption in your application and rapid development of any missing features also for developers that are not familiar with OpenGL and GLSL (shader language of OpenGL).
To achieve all of these objectives, GraphGL is built with the help of three.js, an awesome library for WebGL that abstracts-away low-level graphic calls. This means that Javascript developers should not have too much trouble giving a helping hand to the project.
Currently, data is imported with JSON (JavaScript Object Notation) converted to internal representation and displayed. Basic interactivity, such as panning, zooming and selecting node and its connections are already implemented, with further additions for selection possible.
Use cases
Another factor to consider is what you are trying to achieve. As mentioned, if you have a multi-million node graph, calculating its layout in real time might be a bit too heavy-weight for your average computer. It‚Äôs current best use case would be when you do not have a too large graph so that layout can be calculated on a client side.
One such example could be graphs that change frequently or are dependent on the per-rendering settings: interconnections between particular Twitter users‚Äô followers, where, if Twitter would provide such a tool, calculating all layouts would be extremely expensive for Twitter, while for most average users this wouldn‚Äôt present any problem if layout would be calculated on client side when user would visit this tool.
LinkedIn is doing something similar with it‚Äôs InMaps service.
What to expect in term of performance
Performance varies greatly, as could be expected from such a library. On a modern computer one should not have problem calculating layout and rendering thousands, if not tens of thousands of nodes, while on older hardware (lower) thousands of nodes should still be rendered, but performance may not be super-smooth. In the future, further optimizations should give us even a higher FPS (Frames Per Second).
If, however, you are dealing with static graph (meaning, exported GraphML file, converted to JSON), we can easily render tens of thousands of nodes and edges and actual file size gets the biggest limitation.
To put things a bit into perspective: On my notebook (Summer 2007 Macbook Pro  ‚Äì 2.2GHz Core2Duo, 4GB RAM, GF8600M) I can render the Java dependency dataset that comes with Gephi (1.5k nodes, 8k edges) with about 40FPS, 10k nodes with 50k edges with around 10 to 15FPS and 100k nodes with 200k edges with around 3-5FPS. However, 100k nodes and 200k edges file comes at almost 22MB. At one time I tested with 2k nodes and 900k edges, file came at almost 37MB and sent Chrome belly up (though I haven‚Äôt tested that dataset with latest branch that supports static layouts).
I hope we (my hopes are that more developers join in the effort) still have some space to optimize and render even larger graphs.
Limitations
As said, support for WebGL is not universal and this can present a show stopper for you. Further limitation for the time being can be layout calculations and the strain it can put on resources of your users. Along with that, one should also keep in mind a very real issue of file size ‚Äì large datasets are large not just by number of nodes but also by megabytes.
Technicals
What follows is a more technical discussion of implementation and issues for those that are interested in development of GraphGL.
Theory
Web is always a bit of a tricky environment due to a rather restrictive environment in which you must operate. Not only you have to share resources with other applications, but you also share resources with other web applications which on times have memory leaks or just burn through CPU cycles like there is no tomorrow (though GraphGL will fall into later category ‚Äì but with layout processing and heavy rendering that is somewhat expected).
Along with these usual restrictions there is also a browser limit on the duration of execution of Javascript code, performance of Javascript itself (no call-by-value), practical file size limitations, recursion limits, etc.
As said, WebGL and Web Workers were utilized to try to circumvent these limitations. Using three.js to abstract low-level graphic calls has its advantages and potential problems, but in general advantages out-weight problems.
Advantages of faster development and wider developer base have already been pointed out, so I‚Äôll just point out the biggest possible problem (and advantages at the same time). With three.js, the abstraction removes low-level control over details of implementation and optimization for our use case.
At the beginning of Summer of Code I also looked at other libraries but at the end three.js won over the rest primarily due to a lot more active developer community around it. Most of other libraries in general provide tools to help with things like loading shaders and how to send attributes and uniforms to the shader and leave majority of graphic calls to programmer. None of them also provided any particular advantage over each other so at the end the deciding factor was really a number of semi-active developers as my hope is that GraphGL becomes de facto the open source network visualization library for the Web for the foreseeable future and for that it needs a foundation that will not be unmaintained.
Implementation
Library imports JSON (GEXF and GraphML were considered, but are unfeasible ‚Äì as they are XML, they can only be properly parsed (i.e. not with Regex) in the main window, which would lock the browser at graph of any meaningful size).
At this very time, there are two implementations ‚Äì one which relies on meshes for rendering of nodes and one that relies on three.js‚Äòs particle system. Later is not yet quite as stable and therefore still in separate branch.
For the ‚Äústable‚Äù relase: nodes are rendered as Meshes ‚Äì each one a plane ‚Äì with a shader drawing a circle by determining whether pixel should be colored or not, i.e., whether it satisfies the equation x^2 + y^2 ‚Äì r^2 < 0.
As for ""particlesystem"" branch: Every node is a particle, rendered as a gl.POINT, determining its size with gl.PointSize. Coloring and shape are yet to be implemented, but will follow the same rule.
Edges are rendered as a single Line object ‚Äì three.js translates this to WebGLs gl.LINES ‚Äì to efficiently render large number of lines. Arches (disabled at the moment) ‚Äì are, as nodes, rendered as planes with each one being colored by shader ‚Äì if pixel lies in a certain range of values and therefore satisfies an implicit equation.
Currently only one color of edges is supported.
As for layout ‚Äì it is calculated in a Web Worker that (at the moment) uses a not-quite-finished-yet version of Force Atlas 1 algorithm. Me and Julian Bilcke (my mentor) are in the process of re-writing Force Atlas 2 into Javascript but for all practical purposes my library should be easily understandable to anyone to write any desired algorithm into Javascript ‚Äì if not, do not hesitate to contact me for help/explanation/suggestions.
Future
For what remains of Summer of Code I plan to fix bugs, write documentation, maybe finish Force Atlas 2.
Currently labels are also missing but should be implemented in the near future. I just have to decide if I should implement them with HTML or as text in WebGL. First option gives us easy copy-and-paste and greater flexibility for (custom) styling, second gives performance. One take would be to do it with HTML and only show labels when you are close enough and remove those that are not in the view or only show labels of a node and it‚Äôs neighbors when you select it.
My long term (and at the moment still uncertain) goal is to also try to move layout calculations to GPU, though this presents serious challenges. I tried to implement this in the middle of GSoC but stumbled upon a couple of technical issues that prevented practical implementation. Since then I came upon several demos that overcame those specific issues, making me hopeful that it shouldn‚Äôt be impossible.
While implementing it with WebGL will be hard, it should be a lot easier to achieve with WebCL. Hopefully, WebCL adoption will head the same way as WebGL (meaning, generally about a year or two).
Summary
I hope this text provided good introduction into GraphGL, what technologies it uses, how it is built, what are it‚Äôs objective and for what kind of problems it is best suitable for. If you have a use case already but don‚Äôt see a particular feature do not hesitate to request it ‚Äì it just might bump it up the priority list.
And remember, the point of GraphGL is customization and easy changes that can be done by everyone.
Feature requests? Comments? Suggestions? Opinions?
Comments or urban.skudnik@gmail.com or github ‚Äì just fork it! üòâ
Follow @GraphGL
","['Urban ≈†kudnik', 'Microsoft', 'Twitter', 'Your Name', 'Julian Bilcke', 'urban.skudnik']"
66,2011-08-17 10:57:32+01:00,GSoC mid-term: new Preview¬†API,"
 
My name is Yudi Xue and during this Google Summer of Code am glad to work on the Core evolution of Gephi. 
Current API in the Preview module provides too many granular methods and classes. Developers are clueless about how they may extend the component. In this project, we do not seek to expand what the Preview module already have to offer. Rather, we focus on making the Preview module easy to learn, easy to use and easy to extend to the Gephi developers. The new API will allow developers to focus on particular parts of the module. They may specify a new visual algorithms just by implementing a new type of Renderer, such as edge bundling and convex hull. They may also extend the RenderTarget to allow display or export visualization to different platform.
The user story
We took the infovis reference model into consideration when we started designing the new infrastructure. The infrastructure aims to provide support to a visualization-preview workflow:
raw data -> the data builder -> renderers -> render targets.
In particular, the raw data is the graph associated with the current gephi workspace. The data builder (DataBuilder) will interpret information associated with the nodes and edges and generate Item objects for Preview use. The Item objects are immutable objects that are either node item (NodeItem), edge item (EdgeItem) or item group (GroupItem) specified from the graph workspace or data lab. We append ‚ÄúItem‚Äù to refer that they are data rather than display objects. After the data has been imported, the preview controller (PreviewController) will associate each type of entity items with Renderer objects. Renderer objects are functional procedures that describe how an item should be drew. While we give information to an Renderer object what it is going to draw, we also tell it what RenderTarget it will use. By default, we provide ProcessingRenderTarget, PDFRenderTarget and SVGRenderTarget. All RenderTarget objects contribute to the RenderTarget API, which provide granular drawing functions that can be used by developers to form advanced visual algorithm. In addition to the workflow, we will provide a flexible properties structure to the Preview module so it may be used to provide listener to user interface commands. The property will allow dynamic dependency where grouped properties can listen for a single parent property. 
The code below demonstrates how a Renderer to a particular Item type could be updated at runtime. 
Code sample:
PreviewController prc = (PreviewController)Lookup.getDefault().lookupItem(
                                                       PreviewController.DEFAULT_IMPL).getInstance();
prc.loadGraph();
// Load graph from workspace
prc.updateRenderer(NodeItem.class, new Renderer() {
    // How I want to draw a node, edge, or item types.
    // Specify your procedural visualization algorithm here
    @Override
    public void render(Item item, RenderTarget rt) {
        NodeItem ni = (NodeItem) item;
        rt.drawImage(..);
        rt.drawline(..);
    }
    // The RenderTarget will pick up the properties and draw the rest..
});

The big picture
Speaking of API flexibility, the Preview API goes from constrained to flexible in the direction from DataBuilder to RenderTarget. Here is the big picture:

Current progress

done:

a working copy based on the new architecture
added ProcessingRengerTarget
added GroupRenderer (Convex hull)
added ImageRenderer
basic unit testing 
basic functional testing against updating Renderer in Preview API at runtime


in progress:

Property support
Selfloop, curved edge drawing
PDF and SVG RenderTarget implementation



Here is a screenshot of the new system with convex-hull enabled:

Code practice
The code base is under active development at https://code.launchpad.net/~yudi-xue/gephi/gephi-preview. The code base includes the PreviewAPI module and the PreviewImpl module. 
Lookup API
We make use of Netbeans Lookup API to instantiate singleton and use Lookup. Template to ensure the correct implementation been called. 
For example, to call the default PreviewController constructor, we call: 
/*
* DEFAULT_IMPL is defined in the interface.
* It refers to default implementation class
* ""org.gephi.preview.PreviewControllerImpl""
*/
(PreviewController)Lookup.getDefault().lookupItem(PreviewController.DEFAULT_IMPL).getInstance();

Accordingly, you may choose to use the API with your implementation by creating a Template that points your implementation class.
Functional Tests
During the development, we are creating functional tests against our own API for the purpose of both flexibility and stability. the ‚ÄúPreviewAPIFunctionalTest‚Äù 
Conclusions
Our goal is to bring modularity and extensibility to the Preview module. We aim to deliver the freedom in defining your own visual algorithms (Renderer) and user interaction (Property) and make use of API without thinking about the detailed mechanism. I would like to give my thanks to Dr. Christian Tominski, Mathieu Bastian and S√©bastien Heymann for their support and feedback, which is critical during the development for the new architecture. 
","['Yudi Xue', 'yudi-xue', 'Christian Tominski', 'Mathieu Bastian', 'S√©bastien Heymann']"
67,2011-08-15 21:30:22+01:00,GSoC mid-term: Automated build &¬†Maven,"
 
My name is Keheliya Gallaba and during this Google Summer of Code I am working on the Automated build system for Gephi. The goal of this project is to add Maven build support to Gephi and set up a continuous integration system to fasten the release process. The Netbeans Platform, which Gephi is built upon, natively uses Apache Ant to compile, build and package the application. But now there is also a variant of NetBeans which uses Apache Maven as the build system. There are several reasons that make moving into a Maven based system worthwhile.
Maven vs Ant
The existing Ant build system for building NetBeans Platform-based applications which is called Ant Build Harness is very intuitive, and needs almost no initial setup. The set of standard Ant scripts and tasks can be easily triggered by the IDE or by the command line. But there are reasons that Ant might not suite a rapidly growing, multi-module project like Gephi. The Gephi project consists of a team of developers who work on dependent modules and plugins. These modules have to be composed to the application regularly. With a large number of modules, with many small packages, and with multiple projects with many inter-dependencies and external dependencies, its essential to manage different versions and branches with their dependencies. And reusing modules with the Ant build harness is not that intuitive.

But Apache Maven is introduced as a standard, well defined build system that can be customized. It uses a construct known as a Project Object Model (POM) to describe the software project being built, its dependencies on other external modules and components, and the build order. It comes with pre-defined targets for performing certain well-defined tasks such as compilation of code and its packaging. It makes dependency management very easy and efficient with the concept of repositories. Most importantly in maven unique coordinates: groupId, artifactId, version, packaging, classifier identifies an artifact which can be uploaded or retrieved from a repository. This helps to easily build modules which depend on other modules.
Work completed so far
This project involves digging deeper in to the Gephi‚Äôs architecture and understanding dependencies, building and packaging. Gephi includes 100+ submodules categorized into Core, UI, Libraries and Plugins sections. NBM, which stands for ‚ÄúNetBeans module‚Äù, is the deployment format of modules in NetBeans. It is a ZIP archive, with the extension .nbm, containing the JARs in the module, and their configuration files. NBM files can be manually installed using the Update Center and choosing the option for installing manually downloaded modules, or they can be downloaded and installed directly from netbeans.org or another update server.
I‚Äôm happy to say that I was able to successfully mavenize 75 modules and continuing to complete the rest. I primarily used the NetBeans Module Maven Plugin for this, which now comes built in with NetBeans 6.9 and 7.0 IDEs. Currently NBM handles the tasks like defining the ‚Äònbm‚Äô packaging by registering a new packaging type ‚Äúnbm‚Äù so that any project with this packaging will be automatically turned into a netbeans module project, creating nbm artifacts and managing branding. It is also capable of populating the local maven repository with module jars and NBM files from a given NetBeans installation.

Some third party libraries used in Gephi are not maintained in any public Maven Repositories. So I had set up a local Sonatype Nexus Repository to store and serve these dependencies. Basic functionalities of a repository manager like Sonatype are:

managing project dependencies, 
artifacts & metadata, 
proxying external repositories 
and deployment of packaged binaries and JARs to share those artifacts with other developers and end-users.

We are in the process of setting up a Sonatype Nexus Repository in official Gephi server as well, so not only these third party jars, but the Gephi releases such as the Gephi Toolkit can be served as a maven dependency to maven-based projects all over the world.

Challenges faced during the process

Researching on existing large scale applications using NetBeans RCP and Maven
Finding documentation on handling Netbeans specific ant tasks, now in Maven
Managing transitive dependencies and versioning (specially with slight defferences of Maven and NetBeans difinitions)
Compilation and Test Failures.

Continuous Integration

While Maven migration is going on, I also looked in to the other aspect of the project, setting up of a continuous integration server. Main benefits of such a system are:

checking out source from source control,
running clean build, 
deploying the artifacts in a repository 
and running unit tests. 

Furthermore it can notify developers via Email, IM or IRC on Success, Failure, Error and Warning in a build or simply a Source Code Management Failure. What this means is that when a project gets updated during development, the continuous integration system will try to build the project and will notify the developers if it ran into any issues. This is very useful when working on a multi-module project with many developers, like Gephi since a developer may unintentionally, by accident break the build since they are working concurrently on code and they may have unique configurations to their development environment that isn‚Äôt shared by other developers. I looked at the options of Apache Continuum, Hudson and Jenkins (A fork of Hudson) considering the criteria, being open source, supporting Ant & Maven and better integration with Java based projects.
Hudson is an extensible Continuous Integration Server built by Sun Microsystem‚Äôs Kohsuke Kawaguchi. Since the design of Hudson includes well thought-out extension points, developers have written plugins to support all of the major version control systems and many different notifiers, and many other options to customize the build process for example the Amazon EC2 plugin to use the Amazon ‚Äúcloud‚Äù as the build cluster.
Continuum is described as a fast, lightweight, and undemanding continuous integration system built by Apache Maven team. It is built on the Plexus component framework, and comes bundled with its own Jetty application server. Like Maven, it is built on the Plexus component framework, and comes bundled with its own Jetty application server. It uses Apache Derby, a 100% Java, fully embedded database for its persistence needs.  All these reasons make Continuum self-reliant, and also particularly easy to install in almost any environment.
After considering all of these reasons I settled on Apache Continuum because of the ease of setting it up, configuration and out-of-the-box support for Bazaar. Bazaar is the distributed version control system used in Launchpad for managing the source code, when lot of developers work together on software projects like Gephi. I have set up a local instance of Apache Continuum to check out and build the ant-based Gephi hourly. In the future we can host this in the Gephi server to notify the developers and administrators.
Future Work
Since the initial foundation has been laid out, it will be quite convenient to complete the rest of the planned work. These will include completion of mavenizing rest of the modules, creating .zip distribution, properly running the final project being developed and setting up the infrastructure at the Gephi server.
I would like to thank my mentors Julian Bilcke, Mathieu Bastian and S√©bastien Heymann for providing all the guidelines and support for making this project a success. You can find my ongoing work at this repository: https://code.launchpad.net/~keheliya-gallaba/Gephi/maven-build
References

NetBeans Module plugin
List of Gephi Dependencies
List of Gephi Netbeans Modules
NetBeans Platform Quick Start Using Maven
Maven NBM comments
Efficient development of large NetBeans Platform applications with Maven by Fabrizio Giudici
Continuous_integration
Repository Management with Nexus

","['Keheliya Gallaba', 'Kohsuke Kawaguchi', 'Julian Bilcke', 'Mathieu Bastian', 'S√©bastien Heymann']"
68,2011-08-15 10:55:39+01:00,GSoC mid-term: Scripting¬†Plugin,"
 
My name is Luiz Ribeiro and during this summer I am working on creating a Scripting Plugin for Gephi, mentored by Eytan Adar from the GUESS project and co-mentored by Mathieu Bastian. This article will give you an overview of the current status of the project and also what you can expect from future work.
Background
The Scripting Plugin originated as a joint proposal with the GUESS project which aimed at porting the Gython language as a console plugin for Gephi during the Google Summer of Code. For those who are not familiar with it, GUESS is a software that was originally created to support the interactive manipulation of graph structures. This feature is achieved through a mix of a visualization framework and a domain-specific embedded language called Gython.

As you have probably already guessed, Gython is an extension of the Python programming language or, more specifically, Jython, which is a Java implementation of Python. Thus, Gython is backwards-compatible with Python itself and can be used with many different Python 2.5 libraries without much pain.
By adding new operators for handling graph structures to the Python‚Äôs grammar and exposing nodes and edges as first class objects to the scripting language, Gython turns out to be a very powerful and concise language to work with graphs.
Since the GUESS‚Äô implementation of Gython is based on Jython 2.1.0, we opted for a complete rewrite of its source code. Gephi‚Äôs implementation of Gython works over Jython‚Äôs latest stable release, version 2.5.2. Besides, our implementation does not support all the original features that were present on GUESS and focuses on a better integration with the Gephi Toolkit. At the moment, our plugin supports most operations of the Graph API, Attributes API and Filters API. This means you can create and remove nodes/edges from the graph, manipulate nodes/edges attributes and also build filters and run queries on the graph.
Over the next section, I will guide you through a small tour of some of the current features of the Gephi‚Äôs Scripting Plugin.
Current Status
The scripting console can be accessed through the Window menu from Gephi‚Äôs UI. After opening up, the console looks like this:

Thanks to jythonconsole, the console supports code completion. On the screenshot above you can see that the console suggests many different attributes for a given node in the graph.
Add/remove nodes and edges
Like on GUESS, there is a reserved variable name ‚Äúg‚Äù, which corresponds to the main graph from the current workspace. This object has many methods for manipulating the graph like addNode, addUndirectedEdge, addDirectedEdge, among others. So, for example, for adding two new nodes to the graph and an undirected edge connecting them:
>>> g.addNode()
v1
>>> g.addNode()
v2
>>> g.addUndirectedEdge(v1, v2)
e1

As you can see, each node of the graph can be accessed by prefixing the node id with ‚Äúv‚Äù and each edge can be accessed by prefixing the edge id with ‚Äúe‚Äù.
Operators
One of the most interesting features of Gython is that it has four new operators for selecting edges, ->, <->, <- and ?. These operators work as follows:

v1 <-> v2: selects the undirected edge connecting nodes v1 and v2;
v1 -> v2 and v2 <- v1: selects the directed edge from node v1 to node v2;
v1 ? v2 selects any edges connecting nodes v1 and v2.

Handling attributes
Consistently with Python, all the nodes and edges‚Äô attributes from the Data Laboratory can be accessed directly as objects‚Äô attributes from the console. Topological attributes like a node‚Äôs degree also can be accessed directly by calling v5.degree, for instance.
If you have a node attribute column called ‚Äúgender‚Äù you can access it directly, for example:
>>> v42.gender = ""female""
>>> v42.gender
""female""

Filtering
In my opinion, filtering is where the console really stands out. Building complex filters is as simple as typing a single command. Let‚Äôs start with an elementary example: say that you have a graph with your Facebook social network and you want to view only the subgraph of women in your network, you would call something like this:
>>> visible = g.filter(gender == ""female"")

This means that you are filtering the main graph ‚Äúg‚Äù for nodes that have the attribute gender equals to ‚Äúfemale‚Äù and afterwards you set this resulting subgraph as the visible graph. Further, you can also filter the visible graph.  For example, if you want to filter the visible graph to show only the nodes that have degree greater than 5 on it:
>>> visible = visible.filter(degree > 5)

The intersection and union operators available on the Gephi‚Äôs Filters Window can be used with the & and | operators from the language. For example, the following commands will build a filter that filters nodes that are in the human resources department and are more than 45 years old:
>>> someFilter = (dept == ""HR"") & (age > 45)

Note that this time the resulting filter has been assigned to a new variable (even though you could have applied the filter directly). If you want to filter the main graph with the newly created filter and set the resulting subgraph to the visible view, just run the following command:

>>> visible = g.filter(someFilter)

You can also add a filter created from the console to the Filters Window by executing the following command:
>>> addFilter(someFilter)

Finally, if you want to set the visible view to the main graph again, just type:
>>> visible = g

Conclusion and Future Work
Obviously, this is just a quick overview of the scripting console functionality. Over the next few weeks I expect to release an alpha version of the plugin to the community and also an user guide with some more detailed examples. Also, a documentation of the plugin‚Äôs inner-workings should be coming soon too (i.e. a more up-to-date specification than the one available on the wiki), in case you‚Äôre interested in contributing to the development.
If you are interested in trying the plugin right now and testing the code, you can download it from my Bazaar branch on Launchpad:
bzr branch lp:~luizribeiro/gephi/scripting

There are many features that we still want to implement, including:

Allow users to import and export graphs from the console;
Support for running layouts with console commands;
Integration with the Partition and Ranking APIs.

If you have any ideas or suggestions, feel free to leave a comment. Feedback is always more than welcome!
","['Luiz Ribeiro', 'Eytan Adar', 'Mathieu Bastian', 'v1', 'v2', 'v5', 'v42', 'luizribeiro']"
69,2011-08-12 16:05:58+01:00,GSoC mid-term: new Visualization¬†API,"
 
My name is Vojtech Bardiovsky and I am working on the new Visualization API. This is done together with the new visualization engine based on shaders.
API design
The aim of the project was to design a clean and usable API for the new engine. It exposes only as much as necessary, but enough to make customization of visualization possible. The following four API classes are all services and can be retrieved through ‚ÄòLookup‚Äô.
Visualization controller
This is the most important class in the API and can be used to retrieve the ‚ÄòCamera‚Äô, ‚ÄòCanvas‚Äô used for visualization display, and very importantly the instance of active ‚ÄòVizModel‚Äô and ‚ÄòVizConfig‚Äô classes that both contain many settings that help controlling the visualization. It will also allow making direct changes to visualization like setting the frame rate or centering camera according to different parameters. The ‚ÄòCamera‚Äô class can be used to get data about its position or to make actions such as translation or zooming.
Event and Selection managers
The Event manager can be used to register listeners to user events exactly as in the old engine. This is very important for the tools. The selection manager provides methods to retrieve all currently selected nodes or edges, to select nodes or edges and to control the selection state of the UI (dragging, rectangle selection, etc).
Motion manager
Apart from listening to all user induced events and their most basic handling (selection, translation, zoom), this class provides information about current mouse position in both screen and world coordinates.
New features
There are many changes the new engine will bring and although it is not finished yet, there already are some new user-side features.
Complex selection
In the old visualization engine, only rectangular and direct (one node) selection were possible. New API will allow to implement any reasonable shape. At the moment it supports rectangles, ellipses and polygons.

Thanks to the selection shape variability and changes in the mouse event system, it is possible to make incremental/decremental selections using Shift and Ctrl keys. Opposed to only one node at the time, the whole selection can be dragged and moved now.
Background image
It is now possible to change and configure the background image. Settings are similar to the CSS properties such as ‚Äòbackground position‚Äô or ‚Äòbackground repeat‚Äô.

Node shapes
It is possible to have different shapes for every node in graph. Basic shapes include ‚Äòcircle‚Äô, ‚Äòtriangle‚Äô, ‚Äòsquare‚Äô, etc., but also up to 8 custom images that can be imported by user. Nodes can have their shapes defined in the import file or set them directly through the context menu.

Better 3D
Work has been done on a better way to control the scene in the 3D. Graphs are not naturally suited for 3D, for example adding new nodes or moving them will never be perfectly intuitive. But for displaying the graph, some enhancements can be done.
Current status
The engine is still under development, but the API is slowly closing to its final state. Next step for the API will be to include as many configuration possibilities as the engine will allow. The underlying data structures will be optimized for performance.
As the project consists of two parts, API and engine, Antonio Patriarca, the mentor for this GSoC project and implementor of the engine will write an article about rendering details in the near future.
(The rendering pipeline for edges is not fully finished, so the images shown are not the actual new look of gephi.)
","['Vojtech Bardiovsky', 'Antonio Patriarca']"
70,2011-08-08 09:43:35+01:00,Translate Gephi in your¬†language,"
If you want to contribute to the Gephi project, you can greatly help us on translating the Gephi user interface. Lots of people are not ease with English. The goal of our localization program is to distribute Gephi also in French, Spanish (available since Gephi 0.8alpha) and other languages the community will ask for. In Gephi, simply go to Tools -> Languages to switch.
Getting started is very simple! Follow these steps:

Create an account on Transifex.
Ask to be part of a Translation Team.
If no team is set for your language, please ask to create one here.
When accepted, start translating it! 

We launched the system this weekend, and people already started to translate in Portuguese, Arabic and Russian!
Note: when you start to translate a resource, Transifex grants you a ‚Äúwrite lock‚Äù on it for 48h. It means that you will be the only one able to edit this resource in your language during this period, thus avoiding conflicts.
 Read the forum thread to get involved.
",['John']
71,2011-07-28 08:09:29+01:00,Nodus Labs joins the Gephi¬†Consortium,"
The Gephi Consortium is the non-profit organization (NGO) that help the Gephi community to grow. We are pleased to welcome Nodus Labs as an associate company!
Founded by Dmitry Paranyushkin, Nodus Labs is a creative bureau dedicated to researching communities, communication, and human interfaces through the frameworks of complexity theory, network science, and artistic practice. They develop ThisIsLike.Com ‚Äì an online mnemonic network that can be used by anyone to retain and share their knowledge and and regularly do talks on analyzing one‚Äôs social networks, creating strong temporary communities, and write research on sustainable communities structures mainly for the arts field.
We actively use Gephi in our work and are dedicated to helping develop and publicize this software as we believe it‚Äôs a great user-friendly tool that can help people tackle such a difficult but omnipresent subject as networks in such an easy way. And it‚Äôs totally pleasure to use!
 They will start a Gephi User Group in Berlin, please contact Dmitry to know more. The events will be announced on the Gephi blog.

ThisIsLike.Com
",['Dmitry Paranyushkin']
72,2011-07-18 15:45:00+01:00,Slides of the ICWSM Gephi¬†tutorial,"
S√©bastien Heymann and Julian Bilcke gave yesterday the official Gephi tutorial at the ICWSM conference, in Barcelona. The International Conference on Weblogs and Social Media is a unique forum that brings together researchers from the disciplines in computer science, linguistics, communication, and the social sciences. The broad goal of ICWSM is to increase understanding of social media in all its incarnations. This is also a special conference for us because we introduced Gephi for the first time 2 years ago, at the 3rd ICWSM conference.
Thought the tutorial was not recorded, you‚Äôll find here the slides of the tutorial.
 SP1: Exploratory Network Analysis with Gephi  
This month about 80 people were trained to Gephi thanks to the fundings we receive at our non-profit organization, the Gephi Consortium: 40 people at ICWSM, but also 20 people at UKSNA and 20 people at the French Complex System summer school. We will have our next talk at ECCS, the European Conference on Complex Systems. Looking forward to see you there!
","['S√©bastien Heymann', 'Julian Bilcke']"
73,2011-06-27 02:41:12+01:00,Explore the Marvel Universe Social¬†Graph,"
This week end at the data in sight hackathon in San Francisco, one of the winning team worked with Gephi and the cool Marvel dataset provided by Infochimps.


From Friday evening to Sunday afternoon, Kai Chang, Tom Turner, and Jefferson Braswell were tuning their visualizations and had a lot of fun exploring Spiderman or Captain america ego network. They came with these beautiful snapshots and created a zoomable web version using the Seadragon plugin. The won the ‚ÄúMost aesthetically pleasing visualization‚Äù category, congratulations to Kai, Tom and Jefferson for their amazing work!
The datasets have been added to the wiki Datasets page, so you can play with it and maybe calculate some metrics like centrality on the network. The graph is pretty large, so be sure to increase you Gephi memory settings with > 2GB.
","['Kai Chang', 'Tom Turner', 'Jefferson Braswell']"
74,2011-06-15 13:32:38+01:00,Data in sight ‚Äì hackathon in San¬†Francisco,"
Creative Commons, the Netherlands Office for Science and Technology and¬†Swissnex San Francisco is organizing a weekend hackathon about data visualization in which Mathieu Bastian will give a demo of Gephi. The event is called ‚Äúdata in sight: making the transparent visual‚Äú, and runs June 24-26 at Adobe in SOMA (in San Francisco).
Join us for data in sight: making the transparent visual, a hands-on data visualization competition held June 25th and 26th, 2011, at the Adobe Systems, Inc. offices in San Francisco‚Äôs SoMa District. Open to coders, programmers, developers, designers, scientists, members of the media‚Äîanyone who believes that data is divine and has ideas for bringing it to life.
During the hackaton, Mathieu will help teams to code Gephi plug-ins or mashups. Ideas go from live data streaming to layouts, filters or web widgets. If you have ideas, please come to the forum to open a discussion.
Visit the website to learn more about the schedule, data available and advisory committee.
",['Mathieu Bastian']
75,2011-06-14 09:50:42+01:00,Gephi Tutorials at UKSNA and ICWSM¬†2011,"

We are very excited to announce that the Gephi Team has a tutorial session at both UKSNA and ICWSM conferences this summer!
UKSNA will be located at the University of Greenwich, London. The Gephi Short Course is on Wednesday, 6 July (2:30 ‚Äì 6:30PM).
The UK Social Networks Conference offers an interdisciplinary venue for social and behavioral scientists, sociologists, educationalists, political scientists, mathematicians, computer scientists, physicists, practitioners and others to present their work in the area of social networks. The primary objective of the conference is to facilitate interactions between the many different disciplines interested in network analysis.
 website | registration | Facebook event
ICWSM Tutorial Day will be held July 17, 2011 (1:00 ‚Äì 4:00 PM) in Barcelona, Spain.
The International Conference on Weblogs and Social Media is a unique forum that brings together researchers from the disciplines in computer science, linguistics, communication, and the social sciences. The broad goal of ICWSM is to increase understanding of social media in all its incarnations.
 website | registration | Facebook event
Registration to these events is still open! The tutorial at ICWSM costs $150 ($100 for students). The tutorial at UKSNA costs ¬£100 (¬£50 for students).

Program:
In these tutorials, S√©bastien Heymann and Julian Bilcke will provide a hands-on demonstration of the essential functionalities of Gephi, based on a real case scenario. The participants will be guided step by step through the complete chain of representation, manipulation, layout, analysis and aesthetics refinements. Particular focus will be put on filters and metrics for the creation of their first visualizations. They will be incited to compare the hypotheses suggested by their own explorations. They finally will walk away with the practical knowledge enabling them to use Gephi for their own projects. The tutorial is intended for professionals, researchers and graduates who wish to learn how playing during a network exploration can speed up their studies.
Requirements:
Participants should come with their own laptop (and a mouse!) with Gephi installed. After the guided introduction, they will have time to work on a dataset of their own and receive help and direct feedback from the teaching team.

It is also a great opportunity to meet researchers and practitioners interested in network visualization, looking forward speaking with you all there!
","['S√©bastien Heymann', 'Julian Bilcke']"
76,2011-06-13 09:28:12+01:00,New Tutorial: Layouts in¬†Gephi,"
A new tutorial is available about Layouts in Gephi. It will guide you to the basic and advanced layout settings in Gephi. You will learn how to use various layouts in Gephi according to the feature you want to emphasis in the topology and the size of the network, how to avoid node overlapping and how to do some geometric transformations.
This tutorial explains when and how to use each layout, including:

the new ForceAtlas 2
OpenOrd
Fruchterman-Reingold

 Gephi Tutorial Layouts  
 View more presentations from Gephi NGO 

 Tutorial: Download it in PDF.
","['Michael Fruchterman', 'Reingold']"
77,2011-06-06 18:31:59+01:00,"ForceAtlas2, the new version of our home-brew¬†Layout","
The new version of the build-in layout ForceAtlas is now released. It is scaled for small to medium-size graphs, and is adapted to qualitative interpretation of graphs. The equations are the same as ForceAtlas 1, but there are more options and innovative optimizations that make it a very fast layout algorithm.
It is good enough to deal with very small graphs (10 nodes) ¬†and fast enough to spatialize 10,000 nodes graphs in few minutes, with the same quality. If you have time, it can deal with even bigger graphs.
Update Gephi (Help > Check for Updates) to get this new layout.

Force Atlas 2:

Is a¬†continuous algorithm, that allows you to manipulate the graph while it is rendering (a classic force-vector, like Fruchterman Rheingold, and unlike OpenOrd)
Has a¬†linear-linear model (attraction and repulsion proportional to distance between nodes). The shape of the graph is between Fr√ºchterman & Rheingold‚Äôs layout and Noack‚Äôs LinLog.
Features a unique adaptive convergence speed that allows most graphs to converge more efficiently
Proposes summarized settings, focused on what impact the shape of the graph (scaling, gravity‚Ä¶). Default speed should be the good one.
Now features a Barnes Hut optimization (performance drops less with big graphs)

¬†

¬†
Force Atlas 2 features these settings:


Scaling: How much repulsion you want. More makes a more sparse graph.
Gravity: Attracts nodes to the center. Prevents islands from drifting away.
Dissuade Hubs: Distributes attraction along outbound edges. Hubs attract less and thus are pushed to the borders.
LinLog mode: Switch ForceAtlas‚Äô model from lin-lin to lin-log (tribute to Andreas Noack). Makes clusters more tight.
Prevent Overlap: Use only when spatialized. Should not be used with ‚ÄúApproximate Repulsion‚Äù
Tolerance (speed): How much swinging you allow. Above 1 discouraged. Lower gives less speed and more precision.
Approximate Repulsion: Barnes Hut optimization: n¬≤ complexity to n.ln(n) ; allows larger graphs.
Approximation: Theta of the Barnes Hut optimization.
Edge Weight Influence: How much influence you give to the edges weight. 0 is ‚Äúno influence‚Äù and 1 is ‚Äúnormal‚Äù.


¬†

¬†
Force Atlas 2 was created by Mathieu Jacomy at the Sciences Po M√©dialab (Paris), founding member of the Gephi Consortium.
",['Mathieu Jacomy']
78,2011-06-05 18:53:38+01:00,"New Gephi Toolkit release, based on¬†0.8alpha","
 A new release of the Gephi Toolkit arrived, based on the 0.8alpha version. Download the latest package, including Javadoc and demos by clicking on the link below.

It includes all features and bugfixes the 0.8alpha version has, notably:

GEXF 1.2 support (partial)
Add Neighbour Filter
Improve support of meta-edges in Statistics and Filters
Edge weight option in PageRank, which can now be used by the algorithm
VNA Import (Thanks to Vojtech Bardiovsky)
Label Adjust algorithm 3 times faster
Saving/Loading projects is faster and use less memory

Demos available on the Toolkit Portal have been adapted when necessary and tested. If you are intrested in using plug-ins from the Toolkit, checkout How to use plug-ins with the Toolkit.
Links you may be interested:

Gephi Toolkit Tutorial
Tips to use the Gephi Toolkit with other JVM languages
Scripting plugin


This summer, the student Luiz Ribeiro is working on GSoC Scripting Plugin, a project to bring advanced scripting features in Gephi, using Python. This project will work with the Gephi Toolkit, and greatly facilitate its usage.
","['Vojtech Bardiovsky', 'Luiz Ribeiro']"
79,2011-05-23 17:14:29+01:00,Meetups and Workshops in SF Bay¬†Area,"
This article tries to give feedbacks on two recent Gephi events in the San Francisco Bay Area.
The Gephi community is expanding and local events are the best way to meet and greet. We fully support any initiative, and are willing to help/sponsor any meetup or workshop you want to organize. Please contact us for more details.
Gephi User Group Meetup #1
This meetup took place in San Francisco, inviting the local Gephi users to gather around a glass and discuss the project. Hosted by Mathieu Bastian, Gephi‚Äôs co-founder, around 15 users showed up. The purpose of a Gephi User Group is to help users, but also developers interested in plug-ins development. For us, it is a great way to simply understand how Gephi is used and on what the development should focus in future releases.
The most notable fact is the diversity of the users: academics, hackers, startups, designers, media, data scientists and more. It‚Äôs amazing to see in how many domains network data exists and where analyzing them make sense. Supporting all this diverse datasets is also a challenge, and that was a strong endorsement for the plug-in architecture. Another strength of Gephi is its performances. I asked the question ‚ÄúHow big are your networks?‚Äù. It‚Äôs interesting to notice many of Gephi‚Äôs users have very large networks, and are pushing the envelop on performances and memory usage in their daily use.
In general, Mathieu received excellent feedback on the software, praising the interactivity, aesthetics and the plug-in architecture. Users also mentioned that the documentation is still sparse and focus should be made on data transformation. Indeed, a major blocker is often to create a network dataset from an Excel file or a database. The Gephi Toolkit attracted a lot of questions as well.
Gephi Workshop in San Francisco
This workshop was thankfully organized by Kris Chen and Elijah Meeks, and hosted by Noisebridge in San Francisco. Part of the Data Visualization Group in Bay Area, this workshop gathered an amazing crowd of more than 50 participants, eager to learn how to use Gephi. Elijah Meeks is a Digital Humanities Specialist at Stanford and one of the most advanced Gephi user. He ran the workshop,¬†walking¬†users through the complete Gephi process, from data import to preview. Mathieu Bastian was also present, helping users.

We hope to make more workshops like this, as it was a great success. Many Thanks to organizers.
The next workshops will be presented by S√©bastien Heymann and Julian Bilcke at the UKSNA and¬†ICWSM conferences in July!
","['Mathieu Bastian', 'Kris Chen', 'Elijah Meeks', 'S√©bastien Heymann', 'Julian Bilcke']"
80,2011-05-02 09:52:10+01:00,The GSoC rocket¬†launched,"
 The Google Summer of Code 2011 is officially launched! Results have been announced by Google. Congratulations to the students that are joining Gephi project:

Daniel Bernardes ‚Äì Timeline player and movie creation
Ernesto Aneiros ‚Äì Indexing Attributes API with Lucene
Keheliya Gallaba ‚Äì Automated build & Maven
Luiz Ribeiro  ‚Äì Scripting plug-in
Urban ≈†kudnik ‚Äì Network visualization with WebGL
Vojtech Bardiovsky  ‚Äì New Visualization Engine 
Yudi Xue ‚Äì Preview Refactoring 

You put a lot of attention on doing the bests applications and demonstrate great motivation in addition to strong technical skills. We are very excited to work with you guys!
This year we are also honored to count on world-class researchers in the mentoring team: Eytan Adar and Christian Tominski! Eytan is an Assistant Professor of Information and Computer Science at the University of Michigan, and is well-known for the graph exploration software GUESS. Christian is a Lecturer and Researcher at the Institute for Computer Science at the University of Rostock. He has authored and co-authored several articles in the field of information visualization.
The Summer Timeline:
* Until May 23: Students get to know mentors, read documentation, get up to speed to begin working on their projects.
* May 23: Students starts to code
* July 15: Mid-term evaluation
* August 22: Pencils down
","['Daniel Bernardes', 'Ernesto Aneiros', 'Keheliya Gallaba', 'Luiz Ribeiro', 'Urban ≈†kudnik', 'Vojtech Bardiovsky', 'Yudi Xue', 'Eytan Adar', 'Christian Tominski']"
81,2011-04-28 09:41:58+01:00,Scientific graphs Generators¬†plugin,"
Cezary Bartosiak and Rafa≈Ç Kasprzyk just released the Complex Generators plugin, introducing many awaited scientific generators. These generators are extremely useful for scientists, as they help to simulate various real networks. They can test their models and algorithms on well-studied graph examples. For instance, the Watts-Strogatz generator creates networks as described by Duncan Watts in his Six Degrees book.
The plugin contains the following generators:

Balanced Tree
Barabasi Albert
Barabasi Albert Generalized
Barabasi Albert Simplified A
Barabasi Albert Simplified B
Erdos Renyi Gnm
Erdos Renyi Gnp
Kleinberg
Watts Strogatz Alpha
Watts Strogatz Beta



The plug-in can be installed directly from Gephi 0.8, from the Plugins menu.
The source code is available on Launchpad.
","['Cezary Bartosiak', 'Rafa≈Ç Kasprzyk', 'Duncan Watts']"
82,2011-04-08 10:51:57+01:00,Gephi 0.8alpha released,"
The latest version of Gephi has been released today, download it for Windows, Mac OS and Linux platforms. Focus has again been made on stability with more than 80 bug fixes, and performance improvements. Thanks to users who reported bugs, that always makes the difference.
The team will now focus on the Google Summer of Code. Have a look at the exciting projects developed this summer. We are also willing to help as much as possible plug-ins developers to get things done and improve documentation.
Because it‚Äôs a major release, changes are not deployed through the AutoUpdate, you need to download and install the new version. Plug-ins also need to be checked for compatibility. They will reappear on the Plugin Center in the coming days, as they are verified.
Consult the release notes and the new Javadoc for more information.
Features highlight




Localization
Localization is coming with this release, with French and Spanish! In Gephi, simply go to Tools -> Languages to switch.
You speak German, Russian or Italian? All three? Localization need your help, show up on the Forum to get started.



Email spigot
Now import emails from files or servers and look at communication networks. Spigots in Gephi are more advanced way to import networks, look for ‚ÄòImport Spigots‚Äô in the File menu. Using wizards to configure settings, new spigots like Twitter or New York Times API are available as plug-ins.



New And Noteworthy
* GEXF 1.2 support (partial)
* Add Neighbour Filter
* Improve support of meta-edges in Statistics and Filters
* Improve usability of Filters
* Edge weight option in PageRank, which can now be used by the algorithm
* Duplicate workspaces (Edit Menu)
* Graph files now supports GZ compression
* Better Filters support in .gephi files
* VNA Import
Performance
* Label Adjust algorithm 3 times faster
* Saving/Loading projects is faster and use less memory
Bug fixes
* Windows installer should not require admin privileges (bug 663337)
* Cancelled Vector Export Disabled ‚ÄúFile‚Äù Menu (bug 728871)
* Misformated SQL-Server JDBC url (bug 745414)
* Partition Filter Loses Categories As Subfilter (bug 726107)
* Workspace name does not increment (bug 711185)
* Ranking Color can‚Äôt be changed on OSX (bug 737727)
* Filter panel not cleared after query removed (bug 737992)
* Ego Filter ‚Äúwith self‚Äù option doesn‚Äôt work with depth > 1 (bug 671007)
* Maximum Degree Range Doesn‚Äôt Update on Subfilter (bug 725688)
* Cannot save and reload dynamic network as project (bug 709270)
* GDF exports attributes when option is disabled (bug 735927)
* Rename ‚ÄúEdit‚Äù menu to ‚ÄúWorkspaces‚Äù? (bug 735475)
* Data laboratory context menu takes too much time to appear when a lot of nodes are selected (bug 735721)
* export svg/pdf with no edges causes NPE (bug 693789)
* Can‚Äôt import the same file twice in Welcome window (bug 598157)
* Graph Window in Overview Tab Fails to Load (bug 659773)
* Timeline appears first wrong when timeformat=‚Äùdate‚Äù (bug 709234)
* Filter query not saved when Filter button is active (bug 671004)
* GEXF option  doesn‚Äôt work(bug 709235)
* Ego Network Filter Searches for Substring, Does Not Match Value (bug 726114)
* Label text settings not saved in .project (bug 660205)
* saved preset for layouts creates several instances (bug 612848)
* Partition colors in Filters are different from those in Partition (bug 616037)
* import of pajek net has floating pt problem (bug 619893)
* NullPointerException on saving project (bug 622154)
* Name of currently opened file not updated after a ‚Äúsave as‚Äù (bug 629374)
* Labels are not hidden on Preview (bug 654006)
* Chaining Dynamic Filter (bug 654018)
* NullPointerException on importing CSV data in Data Laboratory (bug 654030)
* Statistics report not refreshed after a new execution (bug 654036)
* Maximum lock count exceeded error when running Label Adjust (bug 655544)
* GEXF export: missing attvalues element (bug 655975)
* Can‚Äôt use ranking label transformers with toolkit (bug 656172)
* GEXF export: attribute definitions exported even if Attributes option is unchecked (bug 656276)
* Preview throws an Exception with negative edges (bug 656955)
* Closeness centrality chart empty with normalized values (bug 658361)
* Statistics fail to work on a hierarchy level different from the leaves (bug 658394)
* Exported Data Table doesn‚Äôt use sorted columns (bug 658816)
* Importing a TIME_INTERVAL column in Data Laboratory CSV import doesn‚Äôt enable dynamic features (bug 659017)
* Error when using filter export features and filtering off (bug 659229)
* Exception when using flatten filter (bug 659270)
* GDF export generates invalid files (bug 660200)
* Wrong color type exported in GraphML (bug 660356)
* GEXF exporter doesn‚Äôt export the label if they are the same as the id (bug 660382)
* Tool Selection tooltip under the graph window (bug 660459)
* Column settings in Data Lab are not saved in .project (bug 660469)
* Data Lab filter not executed when changing the column (bug 660471)
* Data Lab: column used by node filter is automatically reset (bug 660517)
* Personalized color of a specific partition is rolled back (bug 660529)
* DOT importer ignores edge weight and .gv file extension (bug 661257)
* Exceptions when importing mixed graph (bug 662488)
* Error on selecting nodes from filter if graph window not shwn at startup (bug 663561)
* Blank preview screen (bug 664300)
* Edge text not visible on preview with other attributes (bug 664444)
* Data does not appear on nodes table (bug 667440)
* saving a project uses too much memory for large graphs (bug 672071)
* Data Lab: search/replace only on a given column (bug 676087)
* Workspace number incremented by opening a new project (bug 681038)
* Filter ‚Äúout degree range‚Äù does not work (bug 681184)
* NullPointerException on exporting dynamic GEXF file with Toolkit (bug 686432)
* Wrong relative betweenness (bug 687267)
* graphml generated syntax is incorrect (bug 688678)
* Import Report freezes when the number of issues or logs is too high (bug 688865)
* Filters fail to work on a hierarchy level different from the leaves (bug 691278)
* Wrong edge count in Context Panel with hierarchies (bug 692225)
* RepaintCell exception on Mac OS X (bug 692379)
* Exceptions when group/ungroup from Partition after delete (bug 692382)
* GML importer don‚Äôt process ‚Äòweight‚Äô column as weight (bug 703877)
* Degree doesn‚Äôt take edge weight into account (bug 703933)
* Edge attribute values not imported from graphml file (bug 707390)
* PageRank not for weighted networks (bug 715621)
* Data Lab: boolean column edition facility (bug 717869)
* Exception on Delete Column if sorted by this column (bug 719987)
* Data Lab: edge rows not displayed when the hierarchy level /= 0 in Overview (bug 720033)
* Java Null Pointer when using Merge Columns (bug 722287)
* Open Recent files doesn‚Äôt work with project files (bug 734105)
* Timeline disappears after saving project.gephi file (bug 695558)
* Exception on Visualization Settings if opened before Overview (bug 734117)
* Database import is not cancelable (bug 734126)
* ‚ÄòA task is still executing‚Äô error after cancelling a custom importer, not LongTask (bug 734132)
* Edge weight slider not refreshed between workspaces (bug 731599)
* Exception on New workspace after deleting last workspace (bug 735273)
* Colors not imported in Pajek Net format (bug 530028)
To 0.8 beta and beyond
Following the Gephi Manifesto, we continue our way to the release 1.0 with goals sets in the Roadmap. You can speed up our progresses in many ways whatever the time you can give: few minutes to¬† report a bug, some hours to fix one or to translate the user interface, some weeks to create a plug-in‚Ä¶you will be always greatly welcomed!
Do Gephi technologies matter for your research or business? You can support us by donating to the Gephi Consortium, or becoming a member to have an impact on our roadmap.
Proud to be part of the Gephi Community? On our fresh new store you can buy mugs, T-shirts and more to show it!
  
 Go to the Gephi store
The stores sells in Europe (EUR). To get a tee-shirt in the US, check our official Gephi tee-shirt.
","['', 'To']"
83,2011-04-04 09:06:39+01:00,First Gephi meetup in SF Bay¬†Area,"
This is an announcement for the first Gephi User Group meetup in San Francisco Bay Area! The area has many active Gephi users and supporters and we are looking forward making regular meetups, to create connections and discuss features and projects. The group is also open to students interested in open-source or data visualization.
The first event is planned for Thursday May 12 in San Francisco. The ambiance will be informal and relaxed, to facilitate contacts and discussions.
Gephi can be used in many domains and with different types of data. Whether you are a scientist, a student, an artist, a developer or a simple enthusiast, you are welcome to join the community and show up at our meetup. It‚Äôs a great opportunity to ask questions, discuss data, plugins, code, metrics or visualization.
The meetup will be organized by Mathieu Bastian, Gephi co-founder. To register, sign-in on meetup.com and RSVP for the event.
",['Mathieu Bastian']
84,2011-03-26 04:42:02+01:00,Google Summer of Code¬†2011,"
 It‚Äôs a great news, Gephi has been accepted again for Google Summer of Code. The program is the best way for students around the world to start contributing to an open-source project. The 2009 and 2010 editions were a great success and dramatically boosted Gephi‚Äôs project development.
What is Gephi?
If you look around you, you may notice that networks are everywhere.  For instance, social networks, relationships among people or computer  networks, links between computers. Transportations routes, power grids,  emails networks or the relations between scientific papers are other examples of networks. The ability to analyze, manipulate and represent a  network is a key-feature for solving difficult problems and boost  knowledge discovery in many disciplines.
Gephi‚Äôs project aims to bring the perfect tool for visualizing and manipulating networks. We focus on usability, performance and modularity:

Usability: Easy to install, an UI without scripts and real-time manipulation.
Performance: Visualization engine and data structures are built scalable. Supporting always-larger graphs is an endless challenge!
Modularity: Extensible software architecture, built on top of Netbeans Platform. Add plug-ins with ease.

Learn more about Gephi, watch Introducing Gephi 0.7, download and try it by following Quick Start Tutorial.
Gephi‚Äôs project is recent, the growing community is composed of a mixture of engineers and research scientists involved in network science, datavis and complex networks.
List of ideas
List of ideas are availabe on our wiki. They cover various skills and level of difficulties:
* Preview_Refactoring ‚Äì Simplify and modularize the Preview architecture
* Web-based network visualization with WebGL ‚Äì Start a new project by developing an efficient network visualization library for the web using WebGL
* Timeline player and movie creation  ‚Äì Add a ‚ÄòPlay‚Äô feature to the timeline component and create animated network movies.
* New Visualization Engine ‚Äì Develop the new visualization engine, add interMake the new visualization engine using Shaders on GPU, and aims to release a feature-complete version
* Indexed Attributes API using Lucene ‚Äì Add index support to Gephi attributes system
* Scripting Gephi ‚Äì Develop a scripting language and a console plug-in for Gephi
* Automated build & Maven ‚Äì Choose and create a deployment server to generate releases automatically
You can also propose your ideas, please post on this forum topic. They will be considered and discussed by the community. Have a look on our long-term Roadmap.
Students, join the network
Students, apply now for Gephi proposals. Come to the GSOC forum section and say Hi! to this topic. The fill in and follow the questionnaire. Be careful, deadline is April 8 (timeline)!
Helder Suzuki, student in 2009 wrote:
At Gephi students will have the opportunity to produce high impact work on a rapidly growing area and be noted for it.
Have a look to 2009 pages and Helder‚Äôs interview.
Follow gephi on Twitter

","['Gephi', 'Helder Suzuki']"
85,2011-02-21 14:36:59+01:00,The HTTP Graph¬†plugin,"
The HTTP Graph plugin provides real-time collection and visualization of HTTP traffic. Using the embeddable Membrane Router, details are extracted from the transaction headers and fed to Gephi for graphing and further analysis. This approach makes the relationships between clients, servers, and resources easily visible.

See the video in HD on Vimeo.

Nodes
There are 4 types of nodes:  client, uri, host, domain.
Client:  By default, the largest sized nodes with the source IP addresses of clients for labels. If you are the only one pointing to the plugin‚Äôs proxy, there will probably be only one of these nodes that says 127.0.0.1. Clients are linked to a domain node of ‚Äòlocal‚Äô to keep them together on the graph. Another function of the client node is to keep the graph anchored. You may find it interesting to use a filter in Gephi to hide the client type nodes to see a more ‚Äúfree-form‚Äù graph of the internet. If you do this, you may see large pieces float away because they didn‚Äôt link to the rest of the graph anymore!
URI: By default, the smallest sized nodes with no visible labels. These represent resources like HTML pages, images, javascript, or whatever other resources might be requested through the proxy. The size in bytes and the MIME (Content-Type) reported by the host when returning the resource is available so you can see what it is.
Host: For a given domain (.gephi.org, .google.com, etc.) there can be multiple hosts which serve the different resources. In some cases, you may see the same resource being served from multiple servers in a DNS-based load balancing system. Other interesting details about the underlying architecture of the sites you are viewing can be seen.
Domain: These nodes exist primarily to keep the related hosts close together on the graph. You may want to use a filter in Gephi for this type of node and hide them to see a different perspective.
Edges
HTTP and the web are defined by links, which are essentially directed graph edges, and these occur at the resource level. An HTML page resource will link to CSS, image, and other file resources, both on the same domain, and on remote domains. These inter-domain links are the glue that forms the structure of the world wide web.
Have fun!
~by phreakocious

 Get the HTTP Graph plugin on the Plugins Center, or in Gephi go to Tools > Plugins > Available plugins.
",['phreakocious']
86,2011-02-15 00:04:17+01:00,The Egyptian Revolution on¬†Twitter,"
This is a preliminary result of the network of retweets with the hashtag #jan25 at February 11 2011, at the time of the announcement of Mubarak‚Äôs resignation. If you retweeted someone, or has been retweeted, it is possible that your username is one of these tinny points (or maybe a bigger one?).
To collect the network data, I used the Gephi Graph Streaming plugin, connected it to a Python web server I made myself. This web server works like a bridge, it connects to the Twitter Streaming API using the statuses/filter service and converts the users and retweets to nodes and edges in a network format that can be read by the Gephi Graph Streaming plugin. Nodes are twitter users, and links appear between the nodes A and B when B retweeted a message of A containing the hashtag #jan25.
The static network visualization is just the final result of about one hour of data collection. It is a dynamic network, and it‚Äôs possible to get much more information from the collected data. For example, before the announcement, there were few nodes and edges, sparse in time. But when the announcement arrives, a boom of retweets appears on the network. A video with the flow of retweets is available on YouTube. It shows the dynamic network construction during the hour of data collection, compacted in less than four minutes. During the collection, I run Gephi with the Force Atlas layout just adjusting some parameters from default: repulsion strength to 2000, attraction strength to 0.3 and speed to 10.



I was very lucky to get this data. On February 11 afternoon I was testing the Python server that works as bridge and connected to Twitter. I tried some interesting hashtags to see it working, and at the moment #jan25 seemed to be an active hashtag. I let the application run for some time, adjusted some parameters for visualization, and at some point there was a burst in the activity. I didn‚Äôt understood what was happening until I checked again my Twitter account and realized that the Egypt‚Äôs vice-president had just made the resignation announcement. After it, I proceeded collecting data, and the final result was this network. It was very interesting to see, in real time, the exact moment when Tahrir Square, from a mass protest demonstration, has been transformed in a giant party, and the burst in the Twitter‚Äôs activity. It was like covering in real time a virtual event, a big event that was happening in the Twitter virtual world.
After playing with the data, I found that the data I got through the Twitter Streaming API is only approximately 10% of the total. I‚Äôm now working to recover all data and hopeful soon I can make available the full graph of retweets.
Dataset available in a GEXF file here. Download it and play with it with Gephi!
Andr√© Panisson / www.
‚Äî‚Äì
This work is part of a research project involving the Computer Science Department of the University of Turin (www.di.unito.it), the Complex Networks and Systems Group of the ISI Foundation (www.isi.it), and the Informatics department of Indiana University (http://cnets.indiana.edu/).
‚Äî-
/seadragon-samples/twitter_jan25/seadragon.html
","['Mubarak', 'Andr√© Panisson']"
87,2011-01-31 22:47:17+01:00,Happy new year!,"
All the Gephi Team wishes you a happy new year! A tremendous year finished, a promising one begins. This post is an opportunity to sum up the important facts of 2010, and announcing the objectives for 2011. At the end you will discover one of Gephi‚Äôs secret‚Ä¶

Some 2010 facts

Gephi 0.7 ‚Äì After more than a year of development, Gephi 0.7 was released on February. Based on NetBeans Platform, this new version written from scratch is able to scale the complexity of the source code with a modular approach, opening the way to community plug-ins and a fine control on features. Gephi 0.7 beta is still the official release, maintained easily through automatic updates. Today, it has been downloaded more than 35,000 times!
Google Summer of Code ‚Äì Selected again by the Google Open Source program, we welcomed six new students on the project. Performing an excellent work, Andr√© Panisson, Antonio Patriarca, Cezary Bartosiak, Martin ≈†kurla and Yi Du still continue to work on their plug-ins and have become regular contributors. We were also pleased to see Eduardo Ramos joining us to create the Data Laboratory.
Duke‚Äôs Choice Award at JavaOne ‚Äì Revealing the international dimension of our community, Gephi was selected by Java creators to win the Duke‚Äôs Choice Award 2010, a recognition given to a few for putting innovation at the edge of Java technologies. Held in San Francisco, the conference was the opportunity to show Gephi to Java gurus and leading companies in the field.
Scientific diffusion ‚Äì Gephi was recognized as a valuable tool for research activity. Cited in papers on network studies, we were accepted at great conferences like IEEE Eurovis and INSNA Sunbelt, also invited at the expert workshops Data Driven Dynamical Networks and Modelling Knowledge Dynamics‚Ä¶and exhibited at the International Design Biennale. The Gephi Team has even been declared winner of the VACN Cookoff last week! Nothing to say that the community made an outstanding word-of-mouth, talking about their studies on conferences and online, sharing experience on blogs and helping each other. This trophy is yours.
Real-world applications ‚Äì The Gephi Toolkit is used by the Indiana University and LinkedIn Labs:
¬†







LinkedIn InMaps ¬ª
Truthy ‚Äì Indiana University ¬ª


Objectives for 2011
Following the roadmap and manifesto, here is our plan for the year.
Gephi 0.8 ‚Äì Evolution of the previous release, it aims to include dynamic network analysis features and being more stable. It will be localized in French and Spanish since the first alpha release, planned for February.
Gephi Consortium ‚Äì The non-profit organization will enter in activity on spring. It provides core services to the community, supports the development of the Gephi Open Source framework, and help other projects.
Dual licensing ‚Äì We want to facilitate the use of Gephi by companies. As the GNU AGPL license is restrictive against commercial activities and is not so well understood, we will provide a paid commercial license to avoid all juridical uncertainties and allow the integration of the source core (only) in all kind of softwares. The Gephi Consortium should guarantee that this economic system will benefit for the Open Source project and contributors at large.
Improved documentation ‚Äì Online documentation and tutorials will be completed for both users and developers. A manual will be drafted.
Official training seminars on Exploratory Network Analysis with Gephi ‚Äì Started in the second half of 2010, an official training program is progressively put in place to offer high-quality seminars on network analysis with Gephi.
Bonus
Finally, discover how graphs are drawn inside Gephi software! See the image on Flickr here. üòâ
","['Andr√© Panisson', 'Antonio Patriarca', 'Cezary Bartosiak', 'Martin ≈†kurla', 'Yi Du', 'Eduardo Ramos', 'Gephi Consortium']"
88,2010-12-12 20:04:00+01:00,"For holidays, fund a new Gephi¬†feature","
The Gephi project is always eager to experiment new kinds of tool to foster the community growth. We recently discovered Fundry and are very enthusiast to propose a try!
Fundry is a crowdfunding platform that helps developers get paid for developing new features, and enables a community of funders to contribute to get the features they want. Win win.
Read this page to learn how it works.
The features we propose are four Export plug-ins to GML, Pajek NET, Ucinet DL and Netdraw VNA formats. This is typically the kind of feature the Gephi core developers don‚Äôt have time to work on, but are still important because users should have the ability to switch on different tools according to their needs. So if interoperability matters to you, we invite you to donate as it will help to find new developers to implement them.
¬†
Go to Fundry
",['none']
89,2010-11-27 15:57:01+01:00,1st Gephi workshop held at Vienna University of¬†Technology,"
The first Gephi workshop was held on November 6 & 7, during a course on collaborative work at Vienna University of Technology in Austria. During these two days, Lukas Zenk and S√©bastien Heymann introduced Gephi-aided Social Network Analysis to 70 students mostly in Computer Science.
The goals of the first day were to get students:

Think about different kind of networks like one can see on the beautiful VisualComplexity website.
Discover what kind of questions could be asked by using networks to model data, and the corresponding metrics. We used  some presentations of Lada Adamic‚Äòs course on networks as a support, demonstrated using Gephi.
Learn how to visualize and analyze their own Facebook networks, so they can compare and criticize the results regarding their intimate knowledge of their friendship neighborhood. They installed Netvizz on their Facebook account, an application made by Bernhard Rieder, and followed the tutorial provided by Sociomantic Lab.

The second day was an open session (un)organized to let people mix up and generate new ideas of studies, applications and developments around Gephi. Groups will work on their projects until January. Most of them will do data analysis, and some are motivated to use the Gephi Platform to develop prototypes or to contribute to the source code. Examples of ideas for students are available on the Student Program page. I invite everybody from the Gephi Community to welcome and help them as most as you can!

This workshop was the first step of an initiative driven by the Gephi Consortium that aims to offer academics and professionals a Gephi training program with high quality standards. Anonymous feedbacks were collected at the end so the next one will be improved, even with a majority of very positive replies!
Contact us to request a workshop in your company or university.
¬†


","['Lukas Zenk', 'S√©bastien Heymann', 'Lada Adamic', 'Bernhard Rieder']"
90,2010-11-22 16:17:05+01:00,Gephi donation campaign¬†ended,"
Thank you for your support!
During the last 9 months you donated over ‚Ç¨700 to the Gephi NGO. This helped us to pay the Web server. Now this campaign is over, but you can still continue to help! The Gephi NGO has been transformed to the Gephi Consortium, and you can support our activity.
While all of the administrative effort is currently through unpaid volunteers, our expenses include:

Server costs
Legal and Accounting
Normal office expenses
Marketing and PR.

Your sponsorship will allow the Gephi Consortium to meet these expenses as well as expand our capability to maintain our leadership in the developer and Open Source communities. Funding will allow us to enhance our community outreach, set up development programs, student challenges and user groups, and perform non-code related improvements to projects such as better documentation and more comprehensive websites.
We regularly participate in conferences and events: JavaOne, IEEE Eurovis, INSNA Sunbelt, International Design Biennale‚Ä¶but also help teaching (social) network analysis at the university. This year, the Gephi Consortium and our sponsor INIST-CNRS spent jointly more than ‚Ç¨8,000 in registration fees and travel reimbursements. Gephi was presented that way to different communities and we met very interesting people. Contact us to organize a Gephi workshop in your company or university!
If you think that our actions are useful, consider also to make a donation.
¬†

",[]
91,2010-11-13 16:47:31+01:00,Gephi maps exhibited at the International Design¬†Biennale,"
 The Saint √âtienne International Design Biennial, holding from 20 November to 5 December, is a unique event in the domain of design, due to the exhibitions shown as well as the diversity of its attendees. The Biennial democratizes design and makes it accessible to all kinds of audiences, proving that this creative discipline can take many forms, and is often driven by human aspects, including its uses by humans.
 The theme of the 2010 biennial is around teleportation. It intends to explore paths of discoveries that will tend in their extreme expression to lead to a possible teleportation as the dematerialization of movement which appears to be an incredibly revealing notion of our era.

Sebastien Heymann will exhibit maps of designers‚Äô conceptual world, placed at the center of the ‚ÄúPr√©diction‚Äù exhibition. Made in collaboration with Benjamin Loyaut√©, curator of the event, these inscriptions are a proposal to reveal the state of knowledge sharing in Design today.
Useful information on how to come here.
¬†
You may contact Sebastien by email to appoint a meeting during the first weekend.
Ten free tickets will be given to the first comments of this post!
EDIT: photos are available on the Facebook page of Gephi.

","['Sebastien Heymann', 'Benjamin Loyaut√©']"
92,2010-11-05 23:19:48+01:00,"OpenOrd: New layout plugin, the fastest algorithm so¬†far","

A new force-directed layout algorithm plugin named OpenOrd has just been released. It is one of the few force-directed layout algorithms that can scale to over 1 million nodes, making it ideal for large graphs.
Features:

Very fast, scales to millions nodes
Can be run in parallel, run it on multicore processors
Aims to highlight clusters


Install it directly from Gephi (Tools > Plugins > Available Plugins) or download it from the Plugin Center. Longer description and source code can be found directly on the plug-in page.

Below is a small demo of how fast this algorithm is layouting a 10K nodes network, and only using one processor.

OpenOrd Layout Demo in Gephi from gephi on Vimeo.
The algorithm original design and implementation can be found at this address. Kudos to the authors!
",['gephi']
93,2010-10-25 17:08:20+01:00,Gephi has a Student¬†Program,"
 The Gephi project now has a Student Program. The idea is simple: propose various tasks adapted to computer science students and help them to create Gephi plug-ins. Inspired by the Google Summer of Code and our own experience as students, the program offers original ideas and a real open-source experience.
Computer science students are usually asked to complete many small projects during their studies, often by group. We want to propose original projects, which the result can easily be packaged as a plug-in and shared. Graphs and networks are at the heart in variety of problems, including Graph Theory, Sociology, Data Mining, Statistics or HCI (Human-Computer Interaction). The ability to visualize and manipulate graph structures in a simple way is central to understand these problems. Moreover, what a best way to learn graph theory than code on of its algorithm?
The wiki page will maintain an (open) list of ideas and projects. For each student interested, we will provide some help to get things done and promote his project. We are also thinking about free tee-shirts for all students.
",['Google']
94,2010-10-18 11:11:18+01:00,A Google Map for the Gephi¬†Community,"
Gephi is now an international community, and thanks to the Internet we can exchange at distance through the forum, mailing-lists and live chat.
However IRL meetings are still very important, as great collaborations can start with a beer! It‚Äôs the secret part of the Gephi history‚Ä¶
So we set up a Google Map  for the Gephi community to claim our locations and therefore help organizing local meetings. Internet makes communication easy but it‚Äôs always better to have real meetings to help each other and exchange our experiences in data analysis with Gephi face-to-face! Discover if a Gephi supporter lives in San Francisco, Warszawa or T≈çky≈ç.
Please contribute and add the information you want: this map is publicly editable for your own use.
How to organize a meeting?

Put a marker on the map to set the place of meeting and detailed information.
Contact the local members you find on the map.
Inform us on the forum by giving details on the event location and date.
We advertise your event through the Gephi official blog and social media: Facebook, LinkedIn, and Twitter.

¬†



","['San Francisco', 'Warszawa', 'T≈çky≈ç']"
95,2010-10-04 13:58:42+01:00,"Gephi Toolkit released, based on¬†0.7beta","
 The 0.7beta version of Gephi has been released last week. It is today the Gephi Toolkit release, based on the latest codebase. Download the latest package, including Javadoc and demos by clicking on the link below.

It includes all features and bugfixes the 0.7beta version has. Therefore it is possible to use dynamic networks and new Data Laboratory features from the Gephi Toolkit.
Two new demos are available from the Toolkit Portal:

Import Dynamic ‚Äì How to import several static files and transform them into longitudinal network
Dynamic Metric ‚Äì How to execute a metric (ex: Average Degree) for each slice of a dynamic network

Links you may be interested:

Gephi Toolkit Tutorial
Tips to use the Gephi Toolkit with other JVM languages


Since it‚Äôs launch in July, the Gephi Toolkit has been used in various use cases for graph visualization. Recently, the Indiana University launched Truthy, a system to analyze and visualize the diffusion of information on Twitter. Truthy uses the Gephi Toolkit for layout.
",['Michael']
96,2010-10-01 17:03:18+01:00,Gephi 0.7beta released,"
Major milestone for Gephi today. The 0.7 beta version is ready for download for Windows, Mac OS and Linux platforms. It brings many awaited features and more than 80 bug fixes!. Stability and productivity improvements are the main objectives of this release. A complete support for longitudinal network is part of this release, it is now more easy and flexible to import and explore dynamic networks. Consult this new tutorial to see how input longitudinal networks in Gephi. We support three different methods, to cover all use cases.
Because it‚Äôs a major release, changes are not deployed through the AutoUpdate, you need to download and install the new version if you had the alpha. Plug-ins also need to be checked for compatibility. They will reappear on the Plugin Center in the coming days, as they are verified.
Consult the release notes and the new Javadoc for more informations.
An announcement for modules developed this summer by the Google Summer of Code students, in particular Neo4j and Social Network import. They may be fully integrated in Gephi for its 0.8 version, in the meantime they will be released as plug-ins through our Plugin Center. Stay tuned, it will be fast.
A new version of the Gephi Toolkit will be released in a few days, based on the beta codebase.
Features highlight




New Data Laboratory
The Data Laboratory receives tons of new features, developed this summer by Eduardo Ramos. It now proposes to manipulate and edit data in a broader and more productive way. A detailed list of features is available on the Introducing Data Laboratory post. The laboratory is also now auto-refreshing when filters are manipulated. Another essential point is that the laboratory is easily extensible with plug-ins.







Longitudinal networks
They are now fully supported in Gephi. Explore how the network topology change over time by using the Timeline component, which now appears automatically. The major improvement is the dynamic attributes support. The edge weight or any attribute value can evolve over time as well, and the visualization shows the value in the right range. Enable the timeline with a single button. See tutorial.







Edit
Simple edit by selecting one or several nodes or edges in the Data Laboratory. Keep Control key on the table to select several rows and change values of several elements in one action. Edit also manually visualization variables like color, size or position. The Edit window is available by right-clicking on rows. Many other features are now available through the context menu, and more can be added with plug-ins.



Search/Replace
General Data Laboratory actions like Add node/edge, Search/Replace or Import CSV. The Search/Replace feature shows an advanced UI to search and replace values in the table cells. It can do a normal search or a regular expression based search, among other useful options. It is implemented in a separate controller that is part of the Data Laboratory API.



Columns merge
Manipulate columns and do basic calculations. On numerical columns one can get sum, average, median, ‚Ä¶ from several other columns. New columns can be created from a regular expression based on a existing column. Among other merge strategies, a Time Interval column can be get from a simple numerical column. Get a longitudinal network from a simple ‚Äòyear‚Äô column in your data.



Label visibility
Decide whether a label should be visible or not from the filter result. Nodes and edges not in the filtered graph will have their labels hidden. Can be reset by the ‚ÄòReset Visible‚Äô action (left of graph window).



Copy and Move to a workspace
New option when right-clicking on the graph. You can copy or move the selection to a new or existing workspace.



Import ‚ÄòMissing Nodes‚Äô option
New option in the import panel to import nodes which were not properly defined in the file. Use this option to create nodes only from their reference in edges.



Import Time Frame
Their are different way to import longitudinal network in Gephi. One of them is to import multiple ‚Äòstatic‚Äô files, where each is a particular snaphsot in time (one file per day or per month). There is a new option for that in the import report. See this tutorial section to use it.



Time Frame settings
Decides whether the time format is a date or a real number. The processor will look for existing elements in the workspace and append the time frame to nodes and edges. The network becomes longitudinal, each node, edge and attribute is defined with time intervals.



Preview Presets
The Preview settings has now default presets: Default Curved, Highlight Mutual Edges, Small Labels and more.



Rescale weight in Preview
New option in preview to have edge weight look the same as Overview. Meta-edges have also now a separate scale slider in Visualization settings. This scale value is used in Preview to respect dimensions.



Original color option
When edges color are imported from a file or set by Partition, they have a custom color. This color mode can now be rendered by Preview by setting ‚ÄòOriginal‚Äô in the color dialog.



Localization
Localization is now possible in Gephi, French and Spanish versions will be available soon. Please consider helping us, show up on the Translations forum section.



New And Noteworthy
* NOT Operator (Filters)
* MASK Operator (Filters) ‚Äì keep edges according to source/target/both/any ‚Äì can easily obtain neighbors of a set of nodes
* Display edge weight as labels on visualization
* New StAX GEXF importer and exporter, with hierarchy and dynamic support
* New List/Arrays attribute types. Can only be imported from GEXF for now.
* Flatten Filter ‚Äì Flatten a hierarchical graph to the visible view, transform meta-edges into normal edges
* New Giant Component Filter
* Set size for the ‚ÄòReset Size‚Äô action, by right-clicking on the reset size button
* Get degree column from Undirected graphs
* Statistics reports now saved in Gephi projects
* When parallel edges are found during import, it now increases the weight of the edge by default
* Option in Ego Filter to include the parent node or not
* Meta-edges have now a separate scale slider in Visualization settings, change how thick they are compared to normal edges
* Ranking and Partition list of attributes are now sorted
* Ranking now updates itself with filtered graphs. Clicking on Apply will refresh bounds and the transformation (color, size)
* It‚Äôs now possible to drag a filter sub query to become a main query
* With dynamic attributes, Ranking, Partition, Visualization and Filters will use the current Timeline range to find values
* Edge weight can be dynamic, type DYNAMIC_FLOAT. Force Atlas layout will use the current Timeline range
* Filters are refreshed when the graph is modified, the current filter is reexecuted
Bug fixes
* Nodes not unselected after turning off Selection on Filter Panel bug 649920
* PDF Export only with default font bug 651273
* Ego Filter doesn‚Äôt include the node itself bug 649908
* Exception on opening project file bug 648617
* Partition filter automatically filters null value bug 648600
* Edges weight not merged with parallel edges bug 648600
* Negative edges not rendered in Preview bug 628223
* Edge weight scale is different between Graph and Preview bug 569329
* Edges native color are not displayed in Preview bug 586237
* Text not displayed in Preview bug 627567
* Errors at PDF export when labels have font size zero bug 626865
* Filtering not refreshed when sub-queries set or removed bug 594511
* Wrong stroke weight when SVG imported in Illustrator bug 626378
* Generating a graph on a previously loaded undirected graph bug 624671
* Wrong folder selected in the Export Panel when changing file type bug 620337
* Node Degree not in Label Text settings bug 598170
* Ranking and Partition parameters list not ordered bug 594520
* Read positions from dot files bug 594793
* Wrong node size when Ranking has same min and max size bug 631689
* SVG files not listed in Export dialog bug 626394
* Export to pdf background is always white bug 583386
* Selected filter query not properly refreshed in UI bug 626483
* Wrong node positions when setting X or Y to zero bug 615844
* z-coordinate not exported in GraphML bug 614606
* Partitions don‚Äôt refresh when opening project not from Overview bug 612902
* duplicate label in filter window bug 604003
* Visualization size limitation bug 602470
* Can‚Äôt close project when generating a graph bug 631341
* csv file export problem bug 598767
* Can‚Äôt import the same file twice in Welcome window bug 598157
* ‚ÄúCommandLineParsing null‚Äù message when error on opening file from command line or desktop bug 594630
* Default selection of Nodes in Data Laboratory necessary bug 594515
* Preview ratio not available at first time bug 594176
* Impossible to cancel the Average Path Length Statistic calculation bug 590226
* Auto-scale flips the graph bug 577843
* ‚ÄúNode must be in the graph‚Äù error when importing a hierarchical graph with height greater than 1 bug 577180
* FileNotFoundException during saving of PDF file bug 572876
* dynamic graph unrecognized if everlasting nodes bug 555637
* Edit window not hidden on tabs bug 552494
* ‚ÄòFormat‚Äô not recognized on DL import bug 619069
* Visualization selection color inversion between ‚Äòout‚Äô and ‚Äòboth‚Äô color bug 618726
* Workspace Selection failed to refresh after closing workspace bug 616814
* NullPointerException when selecting ‚Äú‚ÄìChoose a Layout‚Äù in the Layout ComboBox bug 606964
* In/Out degree metric doesn‚Äôt work with undirected graphs bug 606305
* Right click on workspace after deleting a node throws ‚Äúnode can‚Äôt be null‚Äù bug 605947
* Import transform to Undirected don‚Äôt merge weight bug 603478
* Can‚Äôt display edge weight as text bug 603134
* Can‚Äôt select Postgresql driver in database import settings bug 595223
* Error when opening Plugin Center bug 616829
* Node invisible (too small) when created with the node pencil bug 574807
* Ranking not refreshed when graph filtered bug 632459
* Ranking parameters re-initialized at each new ranking bug 594231
* Can‚Äôt drag a filter sub-query to become a root query bug 626495
* NullPointerException when switching between workspaces while a layout is running bug 597458
* NullPointerException when executing the ‚ÄúEigenvector Centrality‚Äù Statistic bug 589731
* Memory Leak in Graph Distance bug 587450
* ForceAtlas and Fruchterman Reingold not layouting with meta-edges bug 584286
* Cannot save / saves as when opening a Gephi by doubleclick a graph in Windows bug 583397
* GraphML importer doesn‚Äôt import node labels data bug 581629
* Exception on clicking on ‚ÄòHierarchy‚Äô while running multilevel layout bug 631663
* Opening Archived ZIP files is broken bug 578876
* Partition Settings in Filter not saved on switching workspaces  bug 616052
* Filtered graph not exported with ‚ÄúSelect‚Äù pressed bug 573685
* Partition ‚ÄúAll Blacks‚Äù feature randomizes colors bug 601066
* ‚Äòstart‚Äô and ‚Äòend‚Äô attributes are missing when exporting dynamic GEXF bug 521848
* EdgeList Database Configuration is not saved bug 571263
* Slowness on picking a partition entry bug 519549
* Unable to cancel a project opening bug 616415
* Progress is not shown when opening/saving project bug 594644
* Incorrect mutual edge weight on Preview bug 610469
* Memory Leak in GEXF/GraphML Parser bug 596872
* Node Size Mode and Filter Paramaters don‚Äôt save in project bug 596430
* Errors with Yifan Hu MultiLevel Layout on a filtered graph bug 594643
* Preview is not displaying meta-edges bug 584289
* Meta-edges are not displayed bug 584283
* gtk+ slider problem bug 529913
* NullPointerException on importing dynamic graph bug 581872
* NullPointerException when filtering undirected graphs bug 571153
* Filtering with convex hulls displayed bug 541819
* Wrong edge removed from Edge Weight filter bug 603469
","['Eduardo Ramos', 'Yifan Hu']"
97,2010-09-29 22:03:40+01:00,Gephi at JavaOne¬†2010,"
Gephi is one of the Duke‚Äôs Choice Award winners this year and has therefore be kindly invited to attend the JavaOne conference in San Francisco.
The project has been featured in the Mason Street tent during the five days of the conference. Moreover, Mathieu Bastian (Gephi‚Äôs Software Architect) presented Gephi during the Java Frontier Keynote as a brilliant example of Java innovation. Mathieu provided a short demo using a longitudinal Java dependency graph, the classes in the Java package from Java 1.2 to Java 6. The keynote was introduced by Ray Kurzweil, who insisted on the vast amount of data, the ‚ÄúPetabyte Age‚Äù and the need to process, analyze and extract value from it.
You can watch the video of the Gephi presentation online (go to topic 36). EDIT: now on Vimeo in HD!

Mathieu Bastian presenting a live demo of Java packages evolutions at JavaOne 2010 conference.










The project has been also mentioned in the following articles:

Exploring the Technology Frontier with Ray Kurzweil and Java Technology Innovators
My JavaOne 2010 Reflections

","['Mathieu Bastian', 'Ray Kurzweil']"
98,2010-09-14 10:16:30+01:00,Announcing the Gephi¬†Consortium,"
The Gephi Team is proud to announce a major shift for Gephi:
The former Gephi NGO is ready to launch the Gephi Consortium, a legal entity created to ensure future developments of Gephi by collecting funds and in-kind contributions to the members. It is a not-for-profit corporation governed by the French law of July 1st, 1901, equivalent of the United States 501(c)(3) organization. It aims to join the efforts of industrials, laboratories and civil society to pursue the goals fixed on the Gephi Manifesto. We plan to officially launch it on October 1st, 2010.
Gephi Software key figures

Launched in 2008
Development cost evaluated at 2M$ with COCOMO
150,000 lines of code
20 contributors in 8 different countries, translated in English, French and Spanish
33,000 software downloads
600,000 pages viewed/year on gephi.org (estimation 2010)

Why a Consortium?
What have research laboratories, big data companies and human societies in common? The recurrent need to map and understand complex phenomenons, revealing patterns and trends in relational data. The knowledge discovery process faces now with the ‚Äúdata deluge‚Äù problem provocatively emphasized by Chris Anderson on Wired Magazine‚Ä¶ and everyone is becoming concerned by mining data/information from the flow.
Most of the data can be expressed as networks: transportations routes, power grids, emails, food webs, interlocking directorates or the relations between scientific papers are just a part of their applications.
The Gephi project aims to tackle this underlying complexity by giving the power to visualize, filter and manipulate every kind of networks in real time. A generic infrastructure and long-term vision are the keys to overcome these challenges.
Since we started in 2008 in France, many individuals, students and companies already downloaded and tried Gephi. Sign of good health, we federate engineers and reseach scientists from many different countries.
But the project needs fundings and leadership to comply with these plans. This is the purpose of the Gephi Consortium.
A long-term mission
The Consortium makes an R&D effort to build generic and reusable parts of Gephi, improve a competitive technology at low cost, and create standards to ensure interoperability.
It provides core services to the Gephi community, support the development of the Gephi Open Source framework, and help other projects like the GEXF universe (format specifications, libraries and Flex applications) and a soon-to-be graph-stream format. Real-life meetings and retreats are also on the list.
We act as a central point to coordinate the worldwide distributed development, promote it and legally protect it.

These goals are only reachable with the financial and in-kind support of the community. The founding members include INIST-CNRS, Linkfluence SAS and WebAtlas NGO. They have been selected for their past investments to support Gephi at the early stages. Other organizations are already eager to join like SciencePo Paris and the TIC-Migrations research program, and more currently in discussion. A rapid growth is expected as the consortium is a structural solution to the community‚Äôs need ( see for instance this comment on Christian Tominski‚Äôs review ).
The ecosystem we set up is made for the benefit of the whole community. The governance is held by a Board of Directors electing the Management Office every three years. The consortium can only receive funding from grants, donations and membership fees to ensure the respect of antitrust laws. Contracts are then held by members on their sole commitment, out of the consortium‚Äôs responsibility scope.
We expect this way to generate opportunities for companies to build by-products and services, Gephi developers to get hired for their recognized skills, analysts to improve their insights as long as our technology evolves, and academics to use a robust infrastructure for visualization and network science research for free.
About the legals, Gephi is distributed under the GNU AGPL license. The obligation for the contributors to sign a Contributor License Agreements (CLA) certifies the ability for the Consortium to protect the ecosystem.
So why joining us?
Academics: We provide an infrastructure for Visualization and Network Science research. Use our technology as a platform for implementing new research ideas in a very short time, focus on your novelty, and get feedback from the community.
Corporates: We propose legal solutions to integrate Gephi in your value chain. Use it as a module in final products or in R&D departments. If you can‚Äôt use an Open Source software for any reason, you may get a dual license on demand to use Gephi like any proprietary software.
Individuals: We organize the community in a transparent manner, provide online tools and build a knowledge base for the benefit of everyone.
In a nutshell, key benefits are:

Leadership and strategic directions taken according to the members‚Äô common needs
Personalized business made possible
Address book, connection with skilled developers and talented researchers, open innovation
Distributed assistance on Gephi technology, i.e. understand how to extend or reuse Gephi to get things done 
Advices in software engineering and graph visualization in general 
Legal guidance in Open Source / Free Software licensing 

¬†
 We focus on the specifications and development of the Gephi Open Source core. This R&D effort to build generic and reusable parts is only made possible by the collaboration of multiple companies, research laboratories and organizations.
¬†

¬†
Learn more about the Gephi Consortium at http://consortium.gephi.org.
Get the executive summary in PDF here.
Get the nutshell presentation in PDF here.
","['Chris Anderson', 'Christian Tominski']"
99,2010-09-13 09:20:49+01:00,Gephi wins Duke‚Äôs Choice Award¬†2010,"
The Duke‚Äôs Choice Awards recognize and honor extreme innovation in the world of Java technology, and are granted to the most innovative uses of the Java platform. Because the primary judging criteria is innovation, the awards put even small developer shops on an equal footing with multinational giants. The winners are selected by Oracle‚Äôs Java technology leadership team.
Congratulations to all Gephi contributors! Thank you to the Oracle‚Äôs Java Team to make Gephi a Duke‚Äôs Choice and the technology that have enabled us to build Gephi and Gephi Toolkit.
The winners will be featured at the JavaOne Conference in San Francisco, September 19-23rd. Gephi‚Äôs Software Architect, Mathieu Bastian will be present there to receive the award, and attend the conference!
Java provides all the components and development tools to develop large data-intensive open-source applications. Gephi is built on top of the Netbeans Platform, and profit from its module and window systems. The platform allows us to propose solutions to reuse and extend features, in terms of plug-ins, and let developers create new data wrappers, algorithms or filters easily. The rendering engine is built with JOGL (Java OpenGL) and gives responsiveness and interactivity, thanks to hardware acceleration. We use a large number of Java libraries. I would like to use the occasion to offer thanks to all contributors of these projects.
A new video that features Gephi in five minutes:

Introducing Gephi at JavaOne from gephi on Vimeo.
",['Mathieu Bastian']
100,2010-08-25 17:37:22+01:00,Scientist Christian Tominski about¬†Gephi,"
Guest blog post from Dr. Tominski who accepted to review Gephi 0.7alpha4 for us.
Christian Tominski received his diploma (MCS) from the University of Rostock in 2002. In 2006 he received doctoral degree (Dr.-Ing.) from the same university. Currently, Christian is working as a lecturer and researcher at the Institute for Computer Science at the University of Rostock. Christian has authored and co-authored several articles in the field of information visualization. His main interests concern visualization of multivariate data in time and space, visualization of graph structures, and visualization on mobile devices. In his research, a special focus is set on interactivity, including novel interaction methods and implications for software engineering.

Recently, I stumbled upon the Gephi Project ‚Äì an open source graph visualization system. As I‚Äôve done some research in the area of interactive graph visualization, I was eager to see how Gephi works and if it brings some new concepts or if it‚Äôs yet another graph visualization system. I‚Äôll share my thoughts on Gephi from three perspectives. The first one is the user perspective. I‚Äôll take the role of a user who is interested in getting a visual depiction of some graphs. Secondly, I‚Äôll take the role of a developer and shed some light on the aspect of software engineering. And finally, I‚Äôll be a scientist and try to foresee if and in which regard Gephi might have some impact on visualization research.
The User‚Äôs Perspective
Gephi has been designed with the users and their needs in mind. The system welcomes its users with a familiar look and feel. It is quite easy to load graph data into the system. Many of the known file formats for graphs are supported, as for instance, DOT, GML, GraphML, or Tulip‚Äôs file format TLP. A nice thing about the data import is that an import report provides essential information about the import process (e.g., number of nodes and edges, edge-directedness, potential problems, etc.). Once imported, the graph is shown as nodes and links in a main view, and several complementary views provide additional information.
The main view is the core for visual graph exploration. It allows users to zoom in, to select nodes, to adjust node size and color, to find shortest paths, and to access attributes of nodes and edges. In addition to letting users set sizes and colors manually, the system can also set these automatically based on attributes associated with nodes and edges. What is called ‚ÄúPartition‚Äù in Gephi is used to assign unique colors to nodes and edges based on qualitative data attributes (e.g., class affiliation). Quantitative data values can be mapped to size and color of nodes, edges, and labels using the ‚ÄúRanking‚Äù tool. All these tools are customizable. It is worth mentioning, that Gephi provides some nice user controls to parameterize the color coding.
Gephi also supports graph editing, i.e., insertion and deletion of nodes and edges as well as manipulation of attribute values. What is missing in terms of editing the data is the possibility to add (and delete) attributes, for instance to generate some derived data values using simple formula.
A key aspect in graph exploration is the layout of node and edges. As it is usually unclear what will be the best layout for a given graph, Gephi offers various layout algorithms to choose from. While a layout is being computed, the main view constantly updates itself to provide feedback of the progress made. A big plus is that users can interrupt the layout algorithm once they deem the result to be ok or if they find that it might be more suitable to use the current result as the initial setup for another algorithm. This way users can easily tune the layout to fit the graph and the particular needs. Users may put the finishing touches to the layout by moving nodes manually in the main view.
Once a suitable visual representation has been created, the final step is to export nice pictures of the graph. To this end, Gephi follows the philosophy of providing a dedicated export interface with many options to create high quality printouts.
People that have been working with larger graphs might know that some computations on graphs (including layout computation) are quite complex and take some time. While other systems are blocked during computation and in the best case provide a progress bar, Gephi is different. Long running calculations are concurrent to the main application. From my point of view, this is one of the strongest points of Gephi, the system does not block during costly computations. The benefit for the users is that they can always interact, for instance to initiate some other computations or to cancel running ones when they recognize that a re-parameterization would yield better results.
Concurrency is Gephi‚Äôs solution to offering computations of statistics about the graph. Currently, Gephi supports a variety of classic graph statistics including degree distribution, number of connected components, and others. Based on data attributes and computed statistics, the graph can be filtered to reduce nodes and edges to those that fulfill the filter criteria. In a dynamic filtering UI, several filters can be combined using drag‚Äôn‚Äôdrop and thresholds can be manipulated easily, for instance via sliders. Besides using filtering for data reduction, Gephi also provides basic support for graph clustering. However, the currently implemented MCL algorithm is still experimental. But there is the possibility to manually group nodes to build a hierarchical structure on top of the visualized graph. Yet, this is quite cumbersome for larger graphs. Additional tools are needed to support the user in creating a navigable hierarchy on top of a graph. Configurable clustering pipelines that combine several strategies for clustering (e.g., based on attributes or based on bi-connected components) in addition to a clustering wizard user interface would be helpful.
In summary, I see a much potential in Gephi, the overall shape of the system impressed me ‚Äì me as a user. I personally felt it easy to work with Gephi and explore some of my own data sets and some provided at Gephi‚Äôs website. Given the fact that the version I‚Äôve worked with is 0.7 alpha, there is also much space for improvements. In the first place I would like to mention the navigation of the graph. The main view provides just basic zoom and pan navigation, which is even imprecise in some situations. Navigation tools like those provided in Google Earth and navigation based on paths through a graph would be really helpful. Moreover, I was missing the concept of linking between views. Selecting an element (node or edge) in one view should highlight that element in all other views. Right now this is not really an issue as the number of views seen in parallel is quite low. But once additional views are needed, for instance to focus on data attributes in a Parallel Coordinates Plot or to visualize the cluster hierarchy in a dedicated view, or when one and the same graph is shown in parallel in two or more main views for comparing different analytic results, linking will be crucial for user experience. But these things are not too complex and should be easy to integrate in future versions of Gephi. Another aspect regards highlighting in the main view: instead of marking the selected node, all non-selected nodes faded out to focus on the selected node. This implies rather big visual changes because all but one nodes change their appearance when a single node gets selected and deselected.



 Pros:
 Cons:




Easy graph import and export
Many options for visual encoding
Various layout algorithms to choose from
Support for dynamic filtering
Computation of graph statistics
Basic support for graph clustering
System does not block during long running computations




Graph navigation can be improved
No linking among views
Few visual glitches
Still an alpha version with bugs here and there





The Developer‚Äôs Perspective
Now let me switch to the developer‚Äôs view. Gephi is open source software so that everybody can participate in improving the system or can adapt the system to personal or business needs. Gephi seems to be very well designed on the back-end. The project is based on the Netbeans platform and the Java language. It is subdivided into a number of modules that define several APIs and SPIs and that provide implementations of these interfaces. Thanks to the modular structure, Gephi can be extended quite easily. The best way to do so is to implement plugins. Plugins can be used, for instance, to add further layout or clustering algorithms, statistical computations, filter components, or export methods. The modular structure also allows for using only specific parts of the Gephi project in one‚Äôs own projects. The Gephi Toolkit is a good example. It is not an end-user desktop application, but a class library that provides all the functionality of Gephi to those who want to reuse Gephi‚Äôs functionality and data structures in different ways.
As I‚Äôve mentioned in the user perspective, the way how Gephi deals with long running computations is a big plus. Given the fact that aspects of multi-threading are inherent in the system from the very beginning and are manifested at the systems core, I sincerely hope ‚Äì no, I‚Äôm quite sure that Gephi will not run into all the problems that are likely to occur when multithreading is integrated into an existing single-threaded system, as I have experienced it myself. Also I conjecture that others will find it much easier to implement concurrent non-blocking extensions of the system simply by following the way how existing code handles things in Gephi.
As Gephi is split up into many different modules, it took me a while to get accustomed to the system and to learn which functionality can be found in which module. But I have to add that I had no prior experience in Netbeans platform development and the module concept that is used there. I also found that the code documentation could be improved in several parts of Gephi‚Äôs sources. On the other hand, the Gephi website provides informative wiki pages with various examples and tutorials.
My view from the developer‚Äôs perspective can be summarized as the following pros and cons:



 Pros:
 Cons:




Open source
Modular structure
Well defined interfaces
Extensible via plugins
Inherently multithreaded




In-code documentation can be improved





The Scientist‚Äôs Perspective
As a scientist I‚Äôm not so much interested in developing fully-fledge end-user software, but in developing solutions to scientific questions and in publishing the results. A difficulty in interactive visualization is that usually one needs a broad basis of fundamental functionality to be able to develop such solutions. Previous attempts of establishing a common infrastructure for interactive data exploration made notable progress, but eventually did not fully succeed or are no longer actively maintained. This is due to the fact that a single researcher usually simply does not have the time to do decent research and at the same time to maintain a larger software project.
I personally feel that Gephi can become such a fundamental infrastructure. Maintained by an active community, the system allows researchers to focus on solutions in form of plugins, while they can utilize the functionality that the system provides. Visualization researchers will be happy if they can simply plug in new visualization techniques as additional views, test new layout algorithms, and experiment with new clustering methods. Moreover, new solutions can be easily disseminated to real users in the community. This might prove beneficial when it comes to acquiring early user feedback or when more formal user evaluation is needed prior to publishing new techniques and concepts.
A big issue in visualization research is visual analytics, that is, the combination of analytical, interactive, and visual means to facilitate making sense of large volumes of data. In terms of analytic means, a goal is to break analytic black boxes and make analysis algorithms interactively steerable. With the architecture of Gephi, where parameterizable algorithms run concurrently and provide feedback in form of intermediate results, I believe this goal can be reach in the future. A thing that I‚Äôm curious about is if it is also possible to come up with concepts that allow for plugging in new interaction techniques. As interaction is usually quite tightly bound to a view, I wonder if interaction could be implemented as independent plugins as well, and if novel interaction concepts will be supported in the future (e.g., touch interaction)? Furthermore, aspects of interactive collaboration of multiple users working to solve a common analysis problem could be of interest. A question related to the visual side is whether it is possible to use Gephi with different displays and display environments such as tabletop displays, display walls, smart phones, or multi-display environments?
A facet of graph visualization that I did not mention in the user‚Äôs perspective as I felt it more suited to be mentioned here is dealing with dynamically changing graphs. Visualization of time-varying graphs is a hot research topic and Gephi is about to face this challenge. There is preliminary support for exploring time-dependent graphs via a time slider. But there is more to this that just browsing in time. Concepts have to be integrated to support easy comparison of multiple snapshots of a graph and to highlight significant changes in the development of a graphs history.
Let me try to put my thoughts into a pros and cons list:



 Pros:
 Cons:




Potential infrastructure for visualization research
Researchers can focus on solutions in form of plugins
Potential to use community for user feedback and evaluation
Partial results for current research questions (graph clustering, steerable algorithms, dynamic graphs)
Nice playground for experimentation and testing new ideas




Unclear if new and alternative technologies will be supported





Summary
Since I‚Äôve put hands on Gephi I‚Äôm infected. Maybe I‚Äôm dazzled by the beautiful demo video or the nice pictures that have been generated using Gephi, but in my opinion Gephi has the potential to become a big player in interactive visual graph exploration and analysis. From all perspectives that I‚Äôve taken I see many positive things ‚Äì and plenty of room for improvements or additional features. I do hope that the people behind Gephi will continue their work to the benefit of all users, developers, and researchers.
Related Stuff
There are many other systems and frameworks out there that do a great job in interactive graph visualization or in supporting it as a toolkit. I would like to give credit to these systems, because they can be the source of many ideas and much inspiration:

Tulip ‚Äì A great visualization system
Cytoscape ‚Äì Sophisticated network visualization for bio-medicine
GUESS ‚Äì Interactive graph exploration at its best
Pajek ‚Äì Graph analysis at its best
prefuse ‚Äì The well known information visualization framework
JUNG ‚Äì A library for graph structures and algorithms
JGraphT ‚Äì Another library for graphs

To go further about Gephi design, see also this article about semiotics.
","['Christian Tominski', 'Pajek']"
101,2010-08-16 15:54:41+01:00,GSoC mid-term: Shader¬†Engine,"

My name is Antonio Patriarca. The aim of my Shader Engine project is to implement a new visualization engine in Gephi based on modern graphics card capabilities. The current one is in fact designed to be very portable and only uses legacy features which are not optimal on modern hardware.
The OpenGL API, which Gephi uses, has changed a lot in the last years to follows the evolution of the hardware. Several parts of the first versions are now considered deprecated and they are difficult to implement efficiently in the drivers. For this reason, it is often necessary to redesign the graphics engines based on old versions to get the best from modern hardware.
In the old days, graphics primitives were rendered using a fixed pipeline implemented in hardware. The programmers had to set several states in order to control the rendering logic. Several tricks has to be invented to achieve not supported effects. At each new OpenGL version, several new states were introduced to give more freedom and power to the users and the pipeline soon became very complex and difficult to manage. This is how the current Gephi visualization engine is still implemented.
Inspired by the success of the RenderMan Shading Language, graphics card manufactures finally introduced some programmable stages to the graphics pipeline. These stages give the ability to precisely and easily define the rendering logic without taking care of a large number of states. At first, the only way to implement the programs, called shaders, running in these programmable stages was using an assembly language. But the GLSL language was soon designed to simplify shader implementation in OpenGL and other similar high level languages were introduced in the other APIs as well. The number of the programmable stages of the graphics pipeline are increased since their first introduction and modern GPUs are now often used as general purpose stream processors. The new visualization engine will use the shaders to render the nodes and edges of the graph in a more efficient way, while achieving an higher quality image.

Current Gephi Visualization Module issues
It is useful to discuss the problems of the current architecture to better understand the new engine design. The current Gephi Visualization Module was designed to be very portable and only use features available in the first OpenGL version. It is therefore based on the fixed pipeline and it sends the geometry to the GPU using the immediate mode or display lists. The new engine will still support legacy hardware, but it will also includes a more modern pipeline. Some issue will be only solved in the new pipeline.
Each renderable object (nodes, edges and labels) implements a common interface which take care of how it is rendered and responds to changes in the graph. In the rendering loop, the engine iterates over each edge, node and label and calls the corresponding method to render it. This is not optimal on modern graphics cards for several reasons.
A modern GPU is composed by several cores which runs the same program (they may execute different parts of it though) in parallel. Each time a state change, the GPU may stall waiting for each core to terminate before updating the state. In the current design, several states change between consecutive renderable objects causing the GPU to be idle most of the time. Moreover, each renderable object is composed by a small number of polygons and it is unable to use all the available cores. The best way to render objects using a modern graphics card is to sort them by state change and render them in batches. This is the strategy which will be implemented in the new visualization engine.
The OpenGL API is optimized to render 3D polygonal meshes. Therefore, the only ways to draw vector objects were to approximate them using polygons or textures. They both have issues when the objects are bigger enough which can be solved using additional memory. The current engine draw circles and spheres using a polygonal approximation. Shaders gives to the programmers a lot of additional freedom and it is now possible to draw general objects rendering a single polygon. The shapes generated using shaders looks good regardless of the size of the objects. The engine will use this method where possible.
New Visualization Module design
The new visualization engine will be composed by three parts: the viewer, the controller and the data manager. The viewer controls the drawable object and the main rendering loop. The controller updates both the camera and the selection area and handles all the window and mouse events. The data manager updates the graph information in the engine and decides what to draw each frame. Each part of the engine runs in a different thread. Therefore, it shouldn‚Äôt freeze when the graph is modified as it sometimes happen in current engine.
The rendering system of the new visualization engine will use concrete and immutable representations of the renderable objects. Each data manager frame, after the graph has been updated, each node, edge and label data is inserted in a render batch which is then inserted in the specific render queue. All the render queues (one for each renderable object type) are sent with the current camera to the Viewer for rendering. The Viewer then updates the current render queues and wait the following display method call.
The rendering logic for each renderable object will be defined in the renderers. Each renderer will be only able to render a specific type of object and it will render the entire render queue. There will be no way to directly render a single renderable object in the new visualization engine. The viewer will maintain a single renderer for each object type and it will then use them to render the current render queues. Two renderers will be implemented for each renderable object (one using the OpenGL 2.0 version and one using the OpenGL 1.2 version) and the viewer will decide what renderer to use based on the installed graphics card and user preferences. A detailed description of all the renderers will be soon published in the specification.
New features
The majority of the changes in the new visualization engine will be invisible to the user, but there will be also some new features. The most important ones are the following (some of them will also requires some works in the other Gephi modules):

Different node shapes for each node. It will be possible to define a different shape for each node and therefore use node shapes to distinguish between the different groups of nodes.
Images as node shape. It will be possible to load images to use instead of the predefined node shapes.
Wider choice of 2D node shape. Several node shapes will be supported in addition to circles and rectangles.
Starting and ending color for edges. It will be possible to define a different color for the starting and ending part of the edges and use gradients to define edge directions.
Clusters implemented as halos or depth-aware borders around nodes. Clusters will be supported rendering additional halos or borders of increasing depth of the cluster color around each node in the cluster.
Per primitive anti aliasing (PPAA). Shaders allows the implementation of an anti aliasing strategy independent to multisampling. The new engine will implement these strategies to achieve a better image quality. In the figure above it is possible to observe the PPAA technique applied to the transition between the inner part and the border of a node in an old prototype without multisampling. The effect is slightly exaggerated.

Current status and future work
The engine is currently implemented as a standalone application independent of the rest of Gephi. The engine has been implemented in this way to be able to focus on the most important parts of the engine from the start. Gephi wasn‚Äôt in fact independent enough from the current visualization engine to immediately substitutes it with the new one. When the project will terminate, the standalone application will not have all the desired features and it will not be ready to be included in Gephi. The basic rendering system logic and the general engine architecture will be probably implemented in time though.
When the GSoC project will terminate the interaction layer with Gephi will be implemented and some parts of the code will be adapted to work with it. The project will be rewritten as a Gephi module and the required interfaces with the rest of the application will be implemented.
",['Antonio Patriarca']
102,2010-08-13 16:04:09+01:00,Introducing Data Laboratory,"

My name is Eduardo Ramos and this summer I have been working on a project for Gephi called Data Laboratory, which was initially designed as an idea for a GSoC project. The first specifications can be found at this wiki page . The new data laboratory features will be included in the 0.8 version of Gephi, released later this year.
Presentation
The general purpose of this project is to improve the basic and common features offered in ‚ÄúData Laboratory‚Äù section of Gephi software.
In this section there are two tables (nodes and edges) that show the attributes of every node or edge as table columns. Before starting this project, the available features for modifying the table structure and values were not enough so there was a lack of graph manipulation and edition, refine or even create a graph with attributes in a tabular view.
New key-features coming:

Graph edition in many ways
Columns add/remove
Search & Replace
Import & Export CSV files
Charts and statistics reports
Sparlines
Merge columns
And the possibility of extending all of this with plugins!

Data Laboratory needed to provide an API/SPI for using and extending the new options available as plugins. A complete API is being designed to be able to use these new general features from any module or plugin. As this API is independent from the user interface, these actions will be included in the toolkit.
Types of manipulators (i.e actions) and how they look in the UI
Click to enlarge image
General actions
These are not related to a specific element like nodes, edges or columns and normally provide a UI. They appear as buttons in the toolbar at the top of data table, and can be grouped in a drop down button called ‚ÄúPlugins‚Äù if necessary.
Some of the new basic features of this type are: Add node/edge or Clear graph and clear edges. The rest of general actions in the picture are more special. Search/Replace shows an advanced UI to search and replace values in the table cells. It can do a normal search or a regular expression based search, among other useful options. It is implemented in a separate controller that is part of the Data Laboratory API.

Export CSV table allows the user to export the data in the current table selecting the desired columns, separator and charset to use:

Import CSV does the contrary operation, showing a wizard to configure the import settings in 2 steps:
Click on the image to enlarge.
Click on the image to enlarge.

Nodes/Edges actions
These actions are shown in a context menu on right click on one or more table rows that represent a node or an edge.
The currently implemented manipulators for nodes are:

Edit node properties ‚Äì Shows edit window for the clicked node
Select on graph view ‚Äì Centers graph view on the clicked node
Select neighbor nodes on table ‚Äì Modifies the same table rows selection to highlight neighbor nodes of the clicked node
Delete ‚Äì Deletes the selected node(s)
Clear node data‚Ä¶ ‚Äì Shows a UI to choose what columns to clear of the selected node(s)
Copy node data to the other selected nodes ‚Äì Is only enabled when more than one node is selected, and copies the chosen columns of the clicked node to the other nodes
Group ‚Äì Groups the selected nodes
Ungroup ‚Äì Ungroups the selected groups
Ungroup recursively ‚Äì Ungroups the selected groups, and all their descendant groups
Move to group‚Ä¶ ‚Äì Shows a UI to choose an available group to move the selected nodes
Remove from group ‚Äì Removes the selected nodes from their group, putting them in the superior level of hierarchy
Settle and Free ‚Äì Lock/Unlock the node(s) position
Set node size ‚Äì Sets the given size in the UI to the selected node(s)
Link nodes ‚Äì Is only enabled when more than one node is selected and shows a UI to select a source node which will be linked to all the other selected nodes
Copy node ‚Äì Makes the desired number of copies of the selected node(s) with their attributes and properties

And for edges:

Select source node on graph view ‚Äì Centers graph view on the source node of the clicked edge
Select target node on graph view ‚Äì Centers graph view on the target node of the clicked edge
Select source and target on nodes table ‚Äì Modifies the nodes table row selection to highlight the source and target nodes of the clicked edge
Delete ‚Äì Deletes the selected edge(s)
Delete with nodes ‚Äì Deletes the selected edge(s) and the nodes that the user chooses in the UI (source and/or target)
Clear edge data‚Ä¶ ‚Äì Shows a UI to choose what columns to clear of the selected edge(s)
Copy edge data to the other selected edge ‚Äì Is only enabled when more than one edge is selected, and copies the chosen columns of the clicked edge to the other edges

Attribute columns¬† actions
Like nodes or edges manipulators, these are designed to operate with a specific type of data, attribute columns in this case.
They appear in Data Laboratory UI as independent (or grouped by type) drop down buttons. Each one represents an action that can be done with a single attribute column, therefore when the button is clicked, a list of the available columns for that operation (being the conditions specified by the manipulator) is shown to select one for execution.

Some of the implemented attribute column manipulators are:
Basic operations like adding columns, deleting columns, clearing and copying columns data, filling a column with some value and duplicating a column to other with the data type that the user needs, doing a data conversion when possible.

Other column manipulators operate with specific types of columns data like boolean or numeric or use regular expressions to obtain a new column from other column.
Click on the image to enlarge.
Click on the image to enlarge.

Columns merge strategies
Finally, other part of the project SPI can define different strategies for merging various columns.
Click on the image to enlarge.
Conclusion
This project has been a great opportunity for me to experience working with an open source community and learn about many programming aspects like API/SPI design, creating better user interfaces and creating modular applications and I will be happy to participate on future projects for Gephi.
Some more information can be found at this wiki page which will be updated soon with more documentation and help about how-to extend Data Laboratory using the new SPI.
Also your opinion and needs are very important to improve Gephi, so you can suggest and ask anything about Data Laboratory project at this forum post.
Eduardo Ramos
","['Eduardo Ramos', 'Eduardo Ramos']"
103,2010-08-10 15:02:09+01:00,GSoC 2010 mid-term: Adding support for Neo4j in¬†Gephi,"

During this summer, six students are working on Gephi with the Google Summer of Code. They contribute to Gephi by developing new features that will be integrated in the 0.8 version, released later this year.

My name is Martin ≈†kurla and this summer I was working on GSoC project called ‚ÄúAdding support for Neo4j in Gephi‚Äù. In this article we will look at implemented features including these under the hood, pictures of dialogs, common use cases and future plans.
¬†
Gephi project
At first I want to make quick introduction into Gephi project. Gephi is Open Source Visualization Platform build on top of the NetBeans platform. It is written in Java so you can run it on various Operating Systems including Windows, Linux, Mac OS. It supports many interesting graph analysis capabilities including:

Real-time visualization
Layout
Metrics
Dynamic network analysis
Cartography clustering and hierarchical graphs
Dynamic filtering

The story so far
The main idea of my project is to add support for Neo4j in Gephi. This means the ability to transform the Neo4j graph into Gephi graph. In fact, both graph models are different so the first task was to make mapping between Neo4j graph items and Gephi graph items and vice versa.
There was also a mismatch between types supported in Neo4j and these supported by Gephi. This mismatch was solved by adding new ‚ÄúList‚Äù types into Gephi, so now every type in Neo4j has its appropriate type in Gephi.
There were also some changes under the hood which are not visible to end user, but must be defined and implemented. The most interesting thing is adding ‚ÄúDelegating mechanism‚Äù. This mechanism is responsible for getting values from storing engine (Neo4j) as well as manipulation with data. In fact during the importing process, graph representation of Neo4j graph is created in Gephi, but all values are not stored directly, but they are queried using delegating mechanism.
Another minor tasks were to customize the open dialogs used for importing local Neo4j database and debugging the imported database. The open dialog for importing accepts only valid Neo4j database directories. I defined valid Neo4j database directory structure and every valid directory now includes picture of Neo4j in the open dialog. User is able to open only valid Neo4j directories in the process of importing. The open dialog for debugging accepts only Java class files that can be used for debugging process. This simply means they have to implement required interface and have public nonparam constructor. Every valid class file will have Neo4j picture and after selecting a valid debug file, Target and Visualization options will be automatically filled based on data from selected class file.
¬†
Open Neo4j directory dialog customization
Open Neo4j debug file dialog customization
¬†
Neo4j integration
Menu integration
All possible actions started in menu. As we can see, this is the entry point to import from, export to and debug the Neo4j graph. Both importing and exporting support local as well as remote Neo4j databases.
Importing
Whole graph import dialog
Importing process consist of 2 approaches:

whole import
traversal import

Whole graph import dialog is designed for importing whole graph. We can customize the rules responsible for returning nodes by defining filtering expressions. For example previous dialog can be used when we want to find all people working on project Gephi with maximum age 30 years. Only people with at least 5 years of experience and those which have driver licence types A, B and C will be included.
Let‚Äôs have a deeper look at the dialog:

Property key is the name of property we want to filter
Property value is the value which will be compared to actual Node property value using chosen operator. Values will be automatically converted into appropriate types and if the value cannot be converted, the node will not be included into graph. All types supported in Neo4j are supported in this dialog. We can also see the support for array types in the last filter expression.
Operator will be applied on the final expression and if the expression is evaluated to true, node will be included
Match case means the ability to compare String, char, String[] and char[] types with respect of the same case
Restrict mode is used to restrict some nodes. Imagine we have people stored in database which have only subset of required property names used in filtering expressions. If the Restrict mode is on, only nodes which have all property names and all filtering expressions evaluated to true will be included. If the Restrict mode is off, every node which has any subset of required property names (even empty subset) will be included if all the filtering expressions applicable to the subset will be evaluated to true.

All the filtering expressions are combined together using AND and the list of current supported operators consist of: ==, !=, <, <=, >, >=.
In fact, usefulness of adding new operators as well as including OR and other useful import options is the main idea behind Questionnaire which is part of this article.
Traversal graph import dialog is designed for importing any subgraph using traversal capabilities of Neo4j v 1.1. Traversal import adds additional options:

Start node can be set in two ways, either by its id or by its indexing key and value pair
Order can be set to depth or breadth first algorithms
Max depth can be set to concrete number or to end of graph
Relationships can be restricted too. We can set any combination of Relationship types and directions which should traversal include. The list of Relationship types is dynamically filled from database with existing values.


¬†
Traversal graph import dialog
This was the quick summary of Gephi Neo4j importing capabilities implemented in the project. We focused on more features and one of them is the support for exporting. We can export any loaded graph into local or remote Neo4j database. The exporting process can be customized in similar way as importing.
Exporting
Export dialog
Exporting means opposite process to importing. Previous dialog shows exporting options as well as validation. We can customize exporting process by setting:

From column is used to set the RelationshipType to appropriate values from any of Gephi edge columns. During importing Neo4j graph, column with name ‚ÄúNeo4j Relationship Type‚Äù is automatically created.
Default value is used in the case when processed Gephi edge does not have value in selected From column
Export Node columns is the set of Gephi columns in node table which will be exported
Export Edge columns is the set of Gephi columns in edge table which will be exported

Remote importing/exporting
The only difference between local and remote importing/exporting is the existence of Remote dialog, where we need to set following connection information:

Remote database URL
Login
Password

All of them must be filled in order to successfully import/export remote graph.
Remote import/export dialog
Delegation process
Nodes values exploration (click on the image to enlarge)
As we can see from previous picture, we can very simply explore all the node and edge values. This is exactly the place where delegating mechanism is used. All values are in fact not stored directly in memory in some kind of Gephi data structure, but the storing engine (Neo4j) is requested for actual values every time we need them.
Debugging

We can see debugging in action in previous picture. The dialog is initialized with data from chosen debug class file, but we can change all of them at the runtime too. Any change in options will automatically update graph visualization. We can change visibility of nodes and edges as well as colors for both nodes and edges. User proceeds to next step of debugging/traversal by clicking on the Next button.
Use cases
That was the quick summary of all implemented features and now we can summarize common use cases every user can be interested in.
Visualizing Neo4j graphs
One of the main ideas of my project was to implement the ability to visualize Neo4j graphs, even big ones. As we saw from the dialog pictures, we have many options how to customize the importing process including filtering. After the import we can use all the rich graph analysis features Gephi provides.
Analyzing only part of the whole graphs
Quite common use case is to analyze only part of the graph, which is possible in Gephi too. We can take advantage of traversing where we can set starting node and other traversal options. After that we can visualize and analyze only part of the graph.
Export graph stored in text files/databases into Neo4j
Another use case could be exporting graphs stored in graph text files or relational databases into Neo4j. In fact, every graph loaded into Gephi can be easily exported to Neo4j database. Importing formats depends on Gephi abilities themselves, currently following formats are supported:

Text formats: GEXF, GDF, GML, GraphML, Pajek NET, GraphViz DOT, CSV, UCINET DL, Tulip TPL, XGMML
Relational databases: MySQL, PostgreSQL, SQL Server

Future plans
There are more things which we want to implement, including:

support for Gephi Toolkit, which is in general set of Gephi core libraries which you can use in your own Java projects for graph visualization and manipulation
implementing proof of concept Web application using both Gephi Toolkit & Neo4j to manipulate with Neo4j database & show results (probably using GWT)
more features, bug fixing, performance optimizations

Questionnaire
One of the big advantages of Gephi is the fact that it is developed as Open Source project. We want to add additional features according to user requests and their opinions. That‚Äôs why we created questionnaire focusing on usefulness of proposed additions. We will be very happy if you fill the questionnaire because it is very valuable source of information and we can focus on features Neo4j users think useful. Please  fill in the questionnaire.
Conclusion
I am very happy that I can be part of the Gephi developer community and introduce integration with Neo4j. During this summer I learned a lot and I am proud that I was chosen as GSoC student. The fact is that none of these features can be done without great help of my mentors, so big thank to both of them: Mathieu Bastian & Tobias Ivarsson.
If you are interested in and want to test the code, you can download source codes from my branch using bzr branch lp:~bujacik/gephi/support-for-neo4j
All the pictures were made on data stored in testing Neo4j database which can be created using Java SE project and you can download it using:
bzr branch lp:~bujacik/+junk/testing-new-neo4j-traversal-api
¬†
Martin ≈†kurla
 Download this article in PDF.
","['Martin ≈†kurla', 'Gephi', 'Gephi', 'Neo4j', 'Mathieu Bastian', 'Tobias Ivarsson', 'Martin ≈†kurla']"
104,2010-08-10 11:41:12+01:00,Semantic plugin: AlchemyAPI,"
A new plugin is available for Gephi that utilizes the power of natural language processing (NLP) software to analyze text documents and visualize their contents. The plug-in was created by AlchemyAPI (alchemyapi.com), and utilizes the AlchemyAPI REST service to semantically process a web page or text file and show all the subjects of the text (people, places and things, known collectively as named entities) as nodes in Gephi.
¬†
Graph of the American Revolution wikipedia entry.
The plug-in is a powerful tool to distill dense and unstructured textual data into easy to understand graphs. Extracted entities possess a relevance attribute which is a measure of how pertinent the subject is to the source text, and also a count attribute that indicates the number of times the subject is named in the source text. Both of these attributes can be used to affect the visualization.
Once installed, the plug-in can be accessed through the File->Generate->Semantic Analysis menu. As an example of the functionality of the plug-in, we‚Äôll examine the wikipedia entry for the American Revolution. To make a graph with this article, enter the article‚Äôs url into the Semantic Analysis dialog box. The plug-in will extract over 350 people, places, and things from the wikipedia page. You can use this data to create a word cloud type visualization of the article, like the one above.
If subtype analysis is enabled, you can also visualize the types and subtypes of named entities. For example, the nodes in the image below were extracted from a recent news article.  They represent Dmitry Medvedev and his ontological classifications. The edges from Medvedev‚Äôs node identify him as a Person, Politician, and President (classifications he shares with Mahmoud Ahmadinejad). A complete list of the subtypes AlchemyAPI returns can be found at http://www.alchemyapi.com/api/entity/types.html.
Detail of named entity subtypes
The plug-in can also be used to visualize the connections between multiple text documents. Connections will be drawn between the document node and the entities that the texts share, creating a powerful way of discovering recurring themes within an archive. As an example, see the connections shared between the wikipedia pages for the American Revolution and the French Revolution in the picture below. Common entities like ‚ÄòFrance‚Äô, ‚ÄòBritain‚Äô, and ‚ÄòThomas Paine‚Äô are linked by both the French Revolution and American Revolution articles.
Graph of connections between American and French Revolution wikipedia entries.
As more documents are added to the graph, a web of entities form. The relevance and count of connected entities increase with the number of documents that mention them.
We hope you use this plug-in to make the data in your text more accessible. If you have any questions or suggestions for the makers of this plug-in, please leave them in the comments section.
Our thanks to the Gephi team for their remarkable visualization program, and all the documentation and help that made this plug-in possible.
/seadragon-samples/espn_out_2/seadragon.html
Graph of espn.com front page and linked articles.
Shaun Roach
Download the Gephi plugin for AlchemyAPI here, or find it in your Gephi plug-in center.
","['Alphonse Medvedev', 'Mahmoud Ahmadinejad', 'Thomas Paine', 'Shaun Roach']"
105,2010-08-10 00:29:53+01:00,GSoC 2010 mid-term: Dynamic attributes and¬†statistics,"

During this summer, six students are working on Gephi with the Google Summer of Code. They contribute to Gephi by developing new features that will be integrated in the 0.8 version, released later this year.
¬†
The project which is done by Cezary Bartosiak focuses special attention on further development of dynamic network analysis (DNA) in Gephi. The aim is to create a framework which would make it possible to build and query a dynamic graph with use of proper API. It has got a practical purpose, for instance analyzing evolution of networks (see in particular M. Argollo de Menezes, A.-L. Barab√°si Fluctuations in Network Dynamics) or dynamic networks visualization. The article shows the most important features provided by this GSoC project.
¬†
In the current 0.7 version we can import dynamic graphs written in GEXF syntax and then filter them using Timeline component. Unfortunately, it only filters graphs topologies and that means hiding nodes and/or edges.
The obvious step is make it possible to handle dynamic changes not only of graph topology but also attributes connected with nodes and edges. It can be done by creating a proper API. This API could be used by other modules, like Statistics to make dynamic versions of them. Computing metrics like Degree Distribution or Clustering Coefficient for each time interval in the time series has got a great interest to analyze graphs within time.
So, getting down to brass tacks, the most important tasks are:

A data structure to host dynamic attributes efficiently which would make it possible to present them in Data Laboratory module.
A Dynamic API which has got the following features: the Dynamic Graph Decorator, that wraps the graph and a time interval, returns static graphs copies for given time intervals, attributes values arrays for given nodes/edges and time intervals.
Adapting Metrics framework to use Dynamic API to propose dynamic versions of existing metrics.

There are also additional features, which will be done in the future (probably they will not be included in the nearest release):

Dynamic visualization of attributes.
Dynamic version of the Ranking module ‚Äì dynamic visualization attributes transformation.

I‚Äôll try to shortly describe how these features are done.
Dynamic attributes
It is a very interesting task from a programmer‚Äôs point of view since it requires implementing a complicated data structure like Interval Tree (see also Antoine Vigneron ‚Äì Segment trees and interval trees). But also users will judge it necessary. The purpose is to make it possible to read dynamic attributes from GEXF files and host them efficiently. Thanks to that we are able to get values of attributes of different time intervals. It goes without saying how powerful feature it is. To show how it is working, let‚Äôs consider one node (written in GEXF syntax):
<node id=""1"" label=""Some node"">
  <attvalues>
    <attvalue for=""0"" value=""abcdefgh""/>
    <attvalue for=""2"" value=""1"" end=""2009-03-01""/>
    <attvalue for=""2"" value=""2"" start=""2009-03-01"" end=""2009-03-10""/>
    <attvalue for=""2"" value=""1"" start=""2009-03-10""/>
  </attvalues>
</node>

As we can see we have got one dynamic attribute (id = 2) which has three different values in different time intervals. The first interval starts in the ‚Äúnegative infinity‚Äù. We simply assume that it only ends, never starts. But if we have got some bounds, for instance, a related graph has its start and end times, this attribute would ‚Äústart‚Äù in the same moment as the graph. It is rather intuitive. The second interval exists from 2009-03-01 to 2009-03-10 and the last one exists from 2009-03-10 to ‚Äúpositive infinity‚Äù or graph‚Äôs bound.
After importing this to Gephi we can simply get values of ANY time interval we want, for example [-inf, +inf]. But we should know how to estimate a final value. In the above example we have got three values: 1, 2 and 1. To solve the problem which of them should be returned, we provide a set of estimators like AVERAGE, MEDIAN, MODE, SUM, MIN, MAX, FIRST and LAST. Each of them has got different behavior that depends on a type of attribute, i.e. for real numbers they behave like in statistics.
So, users will be able to get values of different time intervals on demand, for instance in Data Laboratory module or (in the future) see them on the screen as a part of a rendered graph. For instance we have got some attribute like priority. A potential user will be able to choose between several possibilities like: nothing (it means this attribute should not be visualized), color, stroke, thickness etc. It means, for instance, that if some node has got this attribute close to its upper bound its stroke thickness would be very high. And, on the other hand, if one node has got this attribute close to its lower bound only its internal color could be visualized.
Metrics framework
For now it is possible to count a set of important metrics but all of them take a ‚Äústatic graph‚Äù into consideration. The idea of dynamic metrics is then to execute the static ones in a loop, where the graph changes according to time interval. The following screen shows that use of these additional metrics is similar to their static brothers:
Dynamic Metric (click on the image)
In the screen we can see only Dynamic Degree Power Law, but of course every dynamic metric will be implemented (during writing this article this module was still under development ‚Äì it also means that the final product could differ from this one presented above). So, user inserts important information like time interval etc. and gets a separate report for every time interval. What are the other results?
The result for each node/edge is written in the graph, so one can see this in Data Laboratory.
General result is also written and presented in the report.
Conclusion
Evolution of networks, network dynamics and dynamic network analysis are hot topics nowadays. There is growing interest in studying these issues. It causes that there is bigger and bigger need of DNA analysis tools. In my opinion Gephi is heading towards being one of the best‚Ä¶
Cezary Bartosiak
","['Cezary Bartosiak', 'M. Argollo de Menezes', 'A.-L. Barab√°si', 'Antoine Vigneron', 'Cezary Bartosiak']"
106,2010-08-03 16:05:38+01:00,GSoC 2010 mid-term: Graph Streaming¬†API,"

During this summer, six students are working on Gephi with the Google Summer of Code. They contribute to Gephi by developing new features that will be integrated in the 0.8 version, released later this year.
The purpose of the Graph Streaming API project, run by Andr√© Panisson, is to build a unified framework for streaming graph objects. Gephi‚Äôs data structure and visualization engine has been built with the idea that a graph is not static and might change continuously. By connecting Gephi with external data-sources, we leverage its power to visualize and monitor complex systems or enterprise data in real-time. Moreover, the idea of streaming graph data goes beyond Gephi, and a unified and standardized API could bring interoperability with other available tools for graph and network analysis, as they could start to interoperate with other tools in a distributed and cooperative fashion.
¬†
With the increasing level of connectivity and cooperation between systems, for a system that aim to be interoperable, it is imperative to comply with the available standards. Graph objects are abstractions that can represent a wide range of real-world structures, from computer networks to human interactions, and there are a lot of standards to exchange graph data in different formats, from text-based formats to xml-based formats. But the real-world structures are constantly changing, and the current formats are not suitable to exchange such type of dynamic data.
A lot of well-established systems already stream data to its users using a streaming API. Twitter for example defined a Streaming API to allow near-realtime access to its data. They are using two different formats: XML and JSON, but JSON is strongly encouraged over XML, as JSON is more compact and parsing is greatly simplified.
We are not the first to implement a Graph Streaming API, and another very interesting experience is the GraphStream Java Library. It is composed of an API that gives a way to add edges and nodes in a graph and make them evolve. The graphs are composed of nodes and edges that can appear, disappear or be modified, and these operations are called events. The sequence of operations that occur in a graph is seen as a stream of events.
So, as other people already had successful experiences with graph streaming, why not start our work based on these experiences? That‚Äôs what we are doing, and beyond finding these experiences very useful, we are also trying to be compatible with the available work. The first Gephi Graph Streaming release will use two formats: JSON for flexibility, and a text-based format, based in the GraphStream implementation.
The first version of the Graph Streaming features will be available in the next release of Gephi, but it‚Äôs already possible to taste some of these features. To illustrate how simple it will be to connect to a master, the following video shows Gephi connecting to a master and visualizing the received graph data in real time. The graph in this demo is a part of the Amazon.com library, where the nodes represent books and the edges represent their similarities. For each book, a node is added, the similar books are explored, adding the similar ones as nodes and the similarity as an edge.
¬†

¬†
The Graph Streaming specification goes beyond the simple fact that a client can pull data from a master: in fact, clients can interact with the master pushing data to it, in a REST architecture. The same data format used by the master to send graph events to the clients is used by clients to interact with the master.
In the next example, we will transform Gephi in a master to provide graph information to its clients. At the Streaming Tab in the Gephi application, you can access all the features of graph streaming. You can connect to a Master by clicking the ‚Äò+‚Äô button, but you can also transform your Gephi in a master by right-clicking the ‚ÄúMaster Server‚Äù and selecting ‚ÄúStart‚Äù (You are not limited to a single master by host: each Gephi workspace can be available as a master). By default, the HTTP server will listen at port 8080 in plain HTTP, and at port 8443 using SSL. The server path depends on your workspace: each workspace uses a different path. You can configure these parameters (and also Basic Authentication) at the ‚ÄúSettings‚Ä¶‚Äù button:
¬†
Graph Steaming Server start
Graph Steaming Settings Panel
¬†
Now, you can connect to it using some simple HTTP client. For example, you could use curl to see the data flowing. First of all, open a shell window and execute the following command:
curl ""http://localhost:8080/workspace0""
With this, you are connecting to your workspace at Gephi. If the workspace is empty, you will receive no data, but you will remain connected, so you will receive all events from now.
Now open another shell prompt, and with the following commands, you could see a triangle appearing at Gephi:
curl ""http://localhost:8080/workspace0?operation=updateGraph"" -d $'
{""an"":{""A"":{""size"":10,""r"":1,""g"":0,""b"":0,""z"":0,""y"":500,""x"":70}}}r
{""an"":{""B"":{""size"":10,""r"":1,""g"":0,""b"":0,""z"":0,""y"":90,""x"":250}}}r
{""ae"":{""AB"":{""source"":""A"",""target"":""B"",""weight"":10,""r"":0,""g"":0,""b"":0,""directed"":false}}}r
{""an"":{""C"":{""size"":10,""r"":1,""g"":0,""b"":0,""z"":0,""y"":90,""x"":-90}}}r
{""ae"":{""BC"":{""source"":""B"",""target"":""C"",""weight"":10,""r"":0,""g"":0,""b"":0,""directed"":false}}}r
{""ae"":{""CA"":{""source"":""C"",""target"":""A"",""weight"":10,""r"":0,""g"":0,""b"":0,""directed"":false}}}'
At the same time, all events will be sent to your connected client, in the other shell window.
With the following commands you can retrieve some of the data:
curl ""http://localhost:8080/workspace0?operation=getNode&id=A""
curl ""http://localhost:8080/workspace0?operation=getEdge&id=AB""
And you could start manipulating your graph through command line, as you like. There are other event types for changing and removing edges and nodes, for more information about them see the current status of the JSON Streaming Format, available at this page. We recall that this format is subject to changes, as the API was build to be very flexible and more requirements are being added to it.
But what about connecting two different Gephi instances together? One instance will be master, and the other client. Using the Graph Streaming API, a change in a graph at the master‚Äôs workspace should cause a change in the client‚Äôs workspace, and a change at the client‚Äôs workspace will cause it to send requests to the master to update its graph accordingly. Both instances working in a distributed mode. In fact, different people could work in a distributed mode to construct a graph: it‚Äôs the Collaborative Graph Construction.
My personal impressions about it
For me as a researcher, Gephi has the potential to become a de-facto standard for manipulating and visualizing large scale graphs. I believe that the research community is still lacking a high-quality, general-purpose, community-supported framework for exploratory analysis of large-scale dynamical graph data, and I believe that Gephi has the potential to fill this gap. I‚Äôm working also in collaboration with ISI Foundation at the SocioPatterns project, an example of research use case that currently uses Gephi for exploratory data analysis and visualization. The support for dynamic networks, the readiness of the Gephi data model for dynamical update of graph topology and attributes and, in a near future, the support for graph streaming are exciting features that suit very well the large-scale real-time data sources we are dealing with. The potential for processing live streams from our experiments is a unique feature that we are eager to see working.
Andr√© Panisson
","['Andr√© Panisson', 'Andr√© Panisson']"
107,2010-07-26 15:01:56+01:00,Graph visualization on the web with Gephi and¬†Seadragon,"
The project takes another big step forward and bring dynamic graph exploration on the web in one click from Gephi with the Seadragon Web Export plugin.
Mathieu Bastian and Julian Bilcke worked on a Seadragon export plugin. Directly export large graph pictures and put it on the web. Seadragon is pure Javascript and works on all modern browsers. As it uses images tiles (like Google Maps), there is no graph size limit.
Go to your Gephi installation and then to the Plugin Center (Tools > Plugin) to install the plugin. You can also download manually the plugin archive or get the source code.
/seadragon-samples/diseasome/seadragon.html
Sample with Diseasome Network dataset directly exported from Gephi
Communication about (large) graphs is currently limited because it‚Äôs not easy to put them on the web. Graph visualization has very much same aims as other types of visualization and need powerful web support. It‚Äôs a long time we are thinking about the best way to do this and found that there is no perfect solution. We need in the same time efficiency, interactivity and portability. The simpleness of making and hacking the system is also important, as we want developers to be able to improve it easily.
By comparing technologies we found that Seadragon is the best short-term solution, with minimum efforts and maximum results. It has however still a serious limitation: interactivity. No search and no click on nodes are possible for the moment. But as it is JS, I don‚Äôt see hurdles to add these features in the future, help needed.
The table below see our conclusions on technologies we are considering. We are very much eager to discuss it on the forum. As performance is the most important demand, WebGL is a serious candidate but development would require time and resources. We plan to start a WebGL visualization engine prototype next summer, for Google Summer of Code 2011, but we would like to discuss specifications with anyone interested and make this together.





Portability
Efficiency
Effort
Interactivity




Flash






Java2D/Processing






Canvas (Processing.js/RaphaelJS)






WebGL






Seadragon







Figure: Comparing technologies able to display networks on the web.

How to use the plugin?
Install the plugin from Gephi, ‚ÄúTools > Plugin‚Äù and find Seadragon Web Export. After restarting Gephi, the plugin is installed in the export menu. Load a sample network and try the plugin. Go to the Preview tab to configure the rendering settings like colors, labels and edges.
Export directly from Gephi Export menu
The settings asks for a valid directory where to export the files and the size of the canvas. Bigger is the canvas, more you can zoom in, but it takes longer time to generate and to load.
Export settings, configure the size of the image
Note that result on the local hard-drive can‚Äôt be viewed with Chrome, due to a bug. Run Chrome with ‚Äú‚Äìallow-file-access-from-files‚Äù option to make it work.
Kudos to Microsoft Live Labs for this great library, released in Ms-PL open source license. Thank you to Franck Cuny for the CPAN Explorer project that inspired this plugin. Other interesting projects are GEXF Explorer, a Flash-based dynamic widget and gexf4js, load GEXF files into Protovis.
","['Mathieu Bastian', 'Julian Bilcke', 'Franck Cuny']"
108,2010-07-25 15:08:20+01:00,GSoC 2010 mid-term: Direct Social Networks¬†Import,"

During this summer, six students are working on Gephi with the Google Summer of Code. They contribute to Gephi by developing new features that will be integrated in the 0.8 version, released later this year.
Yi Du is adding the module Direct Social Networks Import during this summer, which provides several kinds of importers like Emails, Twitter or Facebook. The goal of this article is to briefly introduce some of the importers, as well as several samples provided.
The ability to import any kind of structured data and build network from it is essential for users. This step is often missing and requires time and scripting abilities, although tools and libraries able to read and parse all type of data already exist. Moreover it has never been so easy to quickly access meaningful datasets online.
Email importer
Email is a simple and widely used tool in communication among people, yet many people have no knowledge of its mechanism. To some extent, our work on analyzing emails can help people better know their relationship with others.  In our email importer module, each email address is represented as a node. If there are two email addresses with the same display name, an option will be provided to allow the user to determine whether to regard them as a node or two different nodes. Afterwards, if there is an email from A to B, an edge will be built, along with an option permitting the user to determine whether Cc or Bcc will be viewed as an edge.
We provide two ways to import emails: on the one hand, the emails are obtained from the email server (POP3 or IMAP), in a one-by-one manner. On the other hand, we get the emails from local files or folder. This importer will arise a problem, that is, different email clients may have different file format. Fortunately, our importer has an easy-to-extend API, as well as a default implementation (EML files). EML is standard and can be obtained from Thunderbird, Outlook and Gmail with tools like Gmail Backup.
This is a sample to illustrate how email importer outputs the data (2000 emails with EGO filter, 700 nodes, 1300 edges).
 
 

Twitter importers
Twitter is a very popular social network. People can send and receive short messages, which we usually call tweets, using Twitter. We can follow person we are interest in and topics we like. Twitter networks has been popularized by NodeXL which has a similar feature. See this nice gallery.
We provide two kinds of networks: ‚ÄúTwitter Search Network‚Äù and ‚ÄúTwitter User Network‚Äù.
We support Twitter search network to analyze people who search or mention similar keywords. We present one Twitter user as a node and define three kinds of edge construction:

Replies-to relationship: If A reply to B in a searched tweet, an edge from A to B will be added.
Mentions relationship: If A mentions B in a searched tweet, an edge from A to B will be added.
Followers relationship: If A follows B in constructed graph, an edge from A to B will be added.

The second network we provide is ‚Äútwitter user network‚Äù. We analyze people who follow each other to show the relationships between twitter users. We add an edge from A to B if A follows B in the whole graph by default. We provide three options for vertex construction:

Person followed by the user: If searched user A follows B, B will be added as a vertex.
Person following the user: If A follows searched user B, A will be added as a vertex.
Both: Both the above two options.

The interface of the two importers are shown as below.
 
New-York Times importer
The New York Times is an American daily newspaper founded and continuously published in New York City. It has a series of APIs for developers on news and social networks. There are several APIs of NYT, such as Article Search API, Best Seller API, etc.
We provide two kinds of social network importers in Gephi: ‚ÄúArticle Network‚Äù and ‚ÄúTimesPeople Network‚Äù. We use article network to analyze articles with specific filters (date, facets, etc). User can choose which option constructs the edge. For example, user can choose date as the edge. If two articles have the same date attribute, an edge between them will be built. TimesPeople is a social network for Times readers, it‚Äôs similar to Facebook, we can analyze the relationship between them.
Interface of NYT article network import and TimesPeople network are shown below:
 
Display of TimesPeople network:
 

Conclusion and future work
In this article, we introduced several importers: Email, Twitter and NYT. By using these importers, users can import data they want and analyze them. They can find the hottest group, the relationship of their friends, the most related author of a facet and other import information by analyzing them.
Until the end of the GSoC, we will have four major importers: Email, Twitter, NYT and Facebook. Among these four importers, Twitter will have ‚ÄúTwitter User Network‚Äù and ‚ÄúTwitter Search Network‚Äù. NYT will have ‚ÄúNYT article search network‚Äù and ‚ÄúNYT TimesPeople Network‚Äù. Facebook will have ‚ÄúFacebook Friends Network‚Äù and ‚ÄúFacebook Group Network‚Äù. Besides adding Facebook importer, we will also optimizing the UI of the importers, and make them more user friendly.
Yi Du
","['Yi Du', 'Yi Du']"
109,2010-07-14 10:38:45+01:00,Announcing the Gephi¬†Toolkit,"
We are announcing today the first release of the Gephi Toolkit. The Toolkit project packages essential modules (Graph, Layout, Filters, IO‚Ä¶) in a standard Java library, which any Java project can use for getting things done. The toolkit is just a single JAR that anyone could reuse in a Java program and script Gephi features.
The toolkit is the counterpart of the desktop application. Gephi‚Äôs user interface aims to be simple, intuitive and without command-line or scripting needed. The toolkit is made for people who want to:

 Script, automate features & reproduce the same procedure over and over
Reuse Gephi features and algorithms in other projects and softwares
Develop all types of mashups or web-services that deals with networks


A lot of new content is coming with the release of the Toolkit. A new portal appeared on the wiki, with documentation. Above all we provide demos and examples and a tutorial for newcomers. The cool thing is that it is very easy to use and this is all  compatible with Gephi plugins. What is done for Gephi desktop can be  reused in the toolkit.

Gephi is designed in a modular way and splitted into  different modules. All features are wrapped into separated  modules, for instance a module for the graph structure, a  module for the layout algorithms and so on. Moreover business modules  are separated from user interfaces modules. That allows to keep only  business modules and remove UI without any problems.  That is the purpose of the toolkit, which wraps only core modules and  removes all the UI layer. So the toolkit is just taking what already exists in Gephi and packages it.
 That is all thanks to the power of Java and Netbeans Platform.  The way modular development is encouraged and the ability to manually extract modules from the Netbeans Platform is all thanks to the way they designed the architecture and use standards like ‚Äòant‚Äô and plain Java. It‚Äôs a good occasion to say Kudos to them!

With the release of the toolkit, we are also moving to the AGPL license, as announced earlier. The GNU Affero General  Public License is a modified version of the ordinary GNU  GPL version 3.  It has one added requirement: if you run the program on a server  and  let other users communicate with it there, your server must also allow  them  to download the source code corresponding to the program that it‚Äôs  running. If  what‚Äôs running there is your modified version of the  program, the server‚Äôs users  must get the source code as you modified  it.
",[]
110,2010-07-04 09:35:37+01:00,"Gephi Poster at Sunbelt, Longitudinal Networks, Plug-ins and¬†Future","
The Sunbelt Conference went extremely well, with great audience for Gephi and many positive feedbacks and comments. This event confirmed Gephi is fulfilling some of the essential needs and is going toward the good direction. Two of our plans are to improve features for longitudinal networks and develop the gephi-toolkit. Let‚Äôs see what we learnt from Sunbelt.








 Download Gephi Poster
The Sunbelt Conference is a huge event, and this edition breaks all records with more than 700 participants and a very intensive program. Needless to say outstanding researches are presented there and it‚Äôs a pleasure to meet everyone, though we didn‚Äôt have enough time there in Riva Del Garda (Italy).
Longitudinal Networks
A great majority of people we provided a Gephi demo asked about dynamic network support. That is not really surprising but it shows the great demand about these features and the interest the timeline in Gephi and how to use it.
I was however frustrated we didn‚Äôt have the time to go deeper in the discussion. People are looking for specific layout, evolution and diffusion features. It is a vast topic and that‚Äôs why we are starting a draft specification about longitudinal networks. Our aim is to collect knowledge, references and feature requests from Sunbelt researchers interested in seeing progress in this direction. That will help for Gephi future versions 0.8 and 0.9.
And it is clear we need a tutorial how to format data to use dynamic features in current version.
Plug-ins, Toolkit, reuse and mashup
Gephi is a modular application extensible with plug-ins. We hope that the existing documentation is enough to already start to code cool stuff and are really eager to help anyone who has a plugin project. Meet us on the forum.
Gephi also relies on a dozen core modules that can be packaged independently. That is what we call the gephi-toolkit, which official announcement and tutorial are due soon. Many researchers are seduced by this idea, allowing custom scripting and command-line applications using Gephi features. Stay tuned.
Future
Gephi is an international project, open to any institution or company anxious to see quick progress. We are looking for contributors and funding. Please contact us. Thanks to Google Summer of Code program, see what we can do in four months with great students.
Stay tuned on twitter
",['None']
111,2010-06-29 00:32:07+01:00,DJ Patil explaining LinkedIn social graph¬†visualizations,"
Very cool video: DJ Patil, Chief Scientist at LinkedIn showing big networks made with Gephi!

Thanks to joiito for sharing this video.
","['DJ Patil', 'joiito']"
112,2010-06-22 12:57:05+01:00,Making up after the 100-Day¬†Plan,"
After more than four months of intense activity, and after the end of the 100-Day Plan it‚Äôs time to sum up what was achieved since the release of the 0.7 version. Most of the objectives have been carried out and Gephi has been downloaded more than 17K times since February. The future looks bright and more and more people are interested using and developing the software. Networks are gaining a lot of momentum in  the  research community and in the industry, by being a generic and extensible platform we position Gephi as a reference tool. If you‚Äôre interested funding us, please let us know.
To beta version
Four versions have been released and a lot of bugs have been fixed during this period. The current version is 0.7 alpha 4, released last month.  New features were also developed, with the help of the developer community and were quickly deployed, for instance PDF Export and new Metrics. Not later than yesterday, new bug-fixes were deployed and available through Gephi updates.
The milestone date is also fixed for the 0.7 beta: August 14, 2010. The aim is to fix remaining bugs until this date. If you notice one, please consider reporting it.
Documentation
A Quick Start Guide and a Visualization Tutorial have been written. The community made great tutorials also, which made a huge difference. Kudos to them. The forum has also showed great ability to connect with users and provide quick support. Many efforts are still needed in that way and hope to get more support writing tutorials.
Manifesto
We completed the Gephi Manifesto,  to understand the project‚Äôs goals and aims.
Communication
The video Introducing Gephi 0.7 had a huge success, viewed more than 12K times. It was done to promote the release of the 0.7 version and succeeded in this job. Gephi has now its place among graph visualization software and is already recognized for its easiness and efficiency. But above all, the audience see great potential in Gephi and many people are thinking how they could use or reuse Gephi for achieving bigger tasks. That is very positive and we are cheering developers to code plug-ins.
Follow the #madewithgephi hashtag on Twitter to see recent comments. The Gephi team also attended the IEEE EuroVis conference in June and will provide software demonstration at Sunbelt XXX next week, on Friday July 2.
Development
Thought the 0.7 beta is still in preparation, the new developments still continue and are now in a very active period. Indeed, six Google Summer of Code students are working hard and are preparing outstanding improvements. The whole code is also profiting from the toolkit project, where essential modules are built together in a single JAR in order to be reused as a Java library. Good progress is made on this project. It is very important for many developers who wants to reuse Gephi features in other Java applications. So stay tuned about GSoC updates and gephi-toolkit!
The roadmap and blueprints page also got a lifting.
We would like also to reinforce interoperability with other tools and develop connectors to new file formats.
Developers tutorials
New help pages for developers were created: Checkout Code,  Configuring  NetBeans and Plugin  Quick Start. HowTo for extending Gephi features have been written  also, including layout,  metric and import and were already used by third-parties developers to create new plugins.
The next tutorial will concentrate on the gephi-toolkit project and how to reuse Gephi as a Java library.

Many other tasks are on the way, notably translating Gephi in French and Spanish and preparing Gephi Student Program. We are very interested involving CS students and propose to them challenging tasks for a semester or a quartile. We hope to interest professors about that.
One more thing, after discussing with the community members we decided to move to AGPL licence for the beta version. The GNU Affero General Public License is a modified version of the ordinary GNU  GPL version 3. It has one added requirement: if you run the program on a server  and let other users communicate with it there, your server must also allow them  to download the source code corresponding to the program that it‚Äôs running. If  what‚Äôs running there is your modified version of the program, the server‚Äôs users  must get the source code as you modified it. It is specifically designed to  protect the Gephi Toolkit.
",['Gephi']
113,2010-06-18 11:24:15+01:00,"Meet Gephi at 30th Sunbelt Conference, June 29 to July¬†04","
We are very excited to annouce the Gephi Team is attending the International Sunbelt Social Network Conference, located in Riva del Garda, Italy from June 29 to July 04. We present a poster and will provide software demonstration on Friday, 2 during Poster Session (12:30-13:30)
The Sunbelt conference is the hugest event in the area of Social Network and we are honored to present our project there. More than 700 abstracts are to be presented there, by social scientists, mathematicians, computer scientists, ethnologists, and more‚Ä¶ The program is very rich and interdisciplinary and will for sure fulfill our curiosity.
It‚Äôs also the best opportunity to meet researchers and practitioners interested in network visualization, looking forward speaking with you all there!
Follow us on Twitter
",['No names mentioned']
114,2010-06-06 19:23:20+01:00,Bug fixes and new metrics¬†deployment,"
We invite you to update your Gephi installation to profit from latest fixes and new metrics features. To do so, please go to Help > Check for Updates in Gephi.
Patrick McSweeney has been working to bring new network metrics to Gephi:

Connected Components (weakly and strongly)
Eigenvector Centrality

That are really useful and widely used metrics, if you want to propose new ideas, a forum topic is dedicated for New Metrics. Please join the discussion.
In addition to other small improvements in the statistics package, he also fixed graph distance memory issues. Average Path Length and Diameter metrics are now working fine.
In the meantime we are working on the toolkit project, which will be announced soon.
",['Patrick McSweeney']
115,2010-06-04 16:37:48+01:00,"Gephi at Eurovis 2010,¬†Bordeaux","
The Gephi Team presents a poster for the Eurovis 2010 conference, June 9-11, located in Bordeaux, France.
EuroVis 2010 is the 12th annual Visualization Symposium  jointly organized by the Eurographics Working Group on Data  Visualization and the IEEE Visualization and Graphics Technical  Committee.

The poster will be presented by Sebastien Heymann and Mathieu Jacomy on site during the poster session. They will also provide live demo.



It is a great opportunity to present some of the visualization features available in Gephi and discuss with the research community about the project and network visualization in general.
The poster concentrates on the visualization topic and a general project presentation. It describes the visualization architecture built for the OpenGL and Preview engine.
Abstract
Using Computer Games Techniques for Improving Graph Viz Efficiency
Gephi is a modular and extensible open-source network visualization platform. It follows a pragmatic approach for visualization by using two different engines for two different purposes. Large scale graph drawing requires performance and interactivity, but also customization and implementation flexibility. We observed that fulfilling all aspects in a single rendering engine is technically not viable on a long-term view and propose to use different technologies. Gephi project aims to create a sustainable software and technical ecosystem, driven by a large international open-source community, who shares common interests in networks and complex systems. It focuses on visualization and manipulation, simplicity and extensibility.
 Full Abstract (2 pages)




","['Sebastien Heymann', 'Mathieu Jacomy']"
116,2010-05-25 19:09:44+01:00,New Tutorial: Visualization in¬†Gephi,"

A new tutorial is available about Visualization in Gephi. It will guide you to the basic and advanced visualization settings in Gephi and introduce selection, interaction and tools.
Gephi has a powerful and customizable visualization engine but sometimes capabilities are not obvious and the richness of some features remains hidden. For instance text drawing is essential for visualization efficiency and needs to me controlled in the best way, in particular for large graphs.
This tutorial explains also in details some of the important tools, including:

Shortest Path
Heatmap
Edit

Gephi Tutorial Visualizationhttp://static.slidesharecdn.com/swf/ssplayer2.swf?doc=gephi-tutorial-visualization-100525114920-phpapp01&stripped_title=gephi-tutorial-visualization
View more presentations from Gephi NGO.

",[]
117,2010-05-17 15:13:57+01:00,Map Geocoded data with¬†Gephi,"
The mixture between network and geographic data has a fantastic potential and didn‚Äôt completely reveals its power yet. Alexis Jacomy, a student member of the Gephi community just released a new Plugin named GeoLayout, which aims to bridge this gap. Congratulations!
The Plugin use latitude/longitude coordinates to set correct nodes position on the network. Several projections are available, including Mercator which is used by Google Maps and other online services.
The Plugin is available from Gephi Plugin Center. The author is looking for feedbacks, please visit the plugin page.
I wanted to try with the classical USA Airline Routes network dataset, and detail the experience.
Install Plugin
In Gephi, go to the Tools menu and then Plugins. In the Available Plugins tab check the GeoLayout and click on Install. The plugin is installed and you are asked to reboot Gephi. Click OK.

Open Dataset
Download the airlines-sample.gexf (Save As‚Ä¶) dataset and open it with Gephi.
The network is an undirected graph with 235 nodes and 1297 edges. For each node there are two additional data latitude and longitude, expressed in degrees.
You should see the graph opened like this.

Use GeoLayout
Go to the Layout module and choose Geo Layout in the list. And then just click the Run button.









Result
You can see the result immediately. Analysis and aesthetics refinement can be done now. Please visit the Quick Start Tutorial for a step by step introduction to Gephi.

",['Alexis Jacomy']
118,2010-05-14 22:41:26+01:00,Mozilla Drumbeat ‚Äì Map the¬†web,"
Mozilla Drumbeat initiative is an open project to build a better web. It gathers communities around various projects to discuss technology and the way we will use the web in the future. It is also possible to submit your own project ideas.
But there is one which interests us in particular already, Map the Web:
Map the Web uses art, design and data to map the internet ‚Äî to help all of us understand the web, how it works and what it means.
The objectives of the project so far, quoted from the project page:

Transform the big, abstract internet into something simple and emotional that busy people can understand by ‚Ä¶
Building a community of artists, designers and data nerds passionate about mapping the internet who ‚Ä¶
Create tools and maps that help people understand how the internet works and where they fit in.
Over time: use the insights from these maps to generate other kinds of tools and projects that add to users‚Äô experiences of the web.

At Gephi we do believe in the power of maps to tell stories and help users to understand complex, unsorted data. For instance why not use maps for bookmarks? Represented by a network of associated URLs and tags, bookmarks would appear in thematic clusters naturally. Gary Flake showed recently interesting ideas about data visualization use in browser.
Gephi is a desktop Java application, but in the next months our aim is to launch a web canvas project as well. The idea is to lead or participate building a network visualization library standard for the web. Simple enough to be used in various applications, we propose to do this using WebGL. A data visualization library must be efficient and OpenGL is clearly suitable for this task. We had considered starting a Google Summer of Code project this year about that but we finally decided to wait a bit more. WebGL is getting lots of support and development and promise to be the standard, as Google recently dropped O3D. We think this canvas project has many common interests with the ‚ÄòMap the Web‚Äô Drumbeat project and therefore naturally propose to help.
Let‚Äôs start the discussion and contribute to this project! Who‚Äôs joining?

",['Gary Flake']
119,2010-04-30 20:31:18+01:00,Gephi 0.7 alpha4¬†released,"
The alpha4 version has just been released, check out Download page or Check for Updates in your Gephi. This release comes with new features, including PDF export and bugfixes. Thank you to all members that reported bugs on the forum or through the Crash reporter, that helps a lot, more than you think!
Many bugs have been fixed, including the Menubar problem on Mac OS X and some annoying filters issues.
Let‚Äôs have a look on what‚Äôs new, and read the complete release notes.
PDF Export
The built-in PDF Exporter is now fully working. It exports the network exactly how it‚Äôs displayed in the ‚ÄúPreview‚Äù window. We have been impressed how fast it‚Äôs processing and exporting. One can configure the page size and margins, in addition to the orientation. Thus you can directly export your network and embed or print it anywhere. Note that texts in PDF are searchable, very useful. Special thanks to Jeremy Subtil who worked on his free time on this feature.

GraphML Export
Files in GraphML format can now be exported from Gephi. Interoperability is very important and the GraphML format is well known and supported in other tools such NodeXL, igraph or NetworkX. We hope that we reach interoperability with these tools and that we use GraphML in the same way. If not, please let us know.
Ego Network
A new filter has been created, it let‚Äôs you filter the graph from a node at depth 1, 2, 3 or Max. Enter a node label and the depth and it shows the network around this node.

Other new features in this release

CSV export ‚Äì Export adjacency list and matrix
New LabelAdjust algorithm, faster and better quality. Thanks to Mathieu Jacomy.
Watts-Strogatz Small World Generator

Interested by being a Gephi official tester? Please consider joining the community.
","['Jeremy Subtil', 'Mathieu Jacomy']"
120,2010-04-27 08:42:22+01:00,The GSoC rocket¬†launched,"
The Google Summer of Code 2010 is officially launched! Results have been announced by Google yesterday. Congratulations to the students that are joining Gephi project:

Andr√© Panisson ‚Äì Graph Streaming API
Antonio Patriarca ‚Äì Shader Engine
Cezary Bartosiak ‚Äì Dynamic attributes and statistics
Christopher Kelvin Lee ‚Äì Force-Directed Edge Bundling
Martin ≈†kurla ‚Äì Adding support for Neo4j in Gephi
Yi Du ‚Äì Direct Social Networks Import

You put a lot of attention on doing the bests applications and demonstrate great motivation in addition to strong technical skills. We are very excited to work with you guys!
The Summer Timeline:
* Until May 24: Students get to know mentors, read documentation, get up to speed to begin working on their projects.
* May 24: Students starts to code
* July 16: Mid-term evaluation
* August 16: Pencils down
","['Andr√© Panisson', 'Antonio Patriarca', 'Cezary Bartosiak', 'Christopher Kelvin Lee', 'Martin ≈†kurla', 'Yi Du']"
121,2010-04-13 15:25:03+01:00,Book store: Theory &¬†Practice,"
Gephi has now its own book store!
It‚Äôs a great place for those who want to discover the key theories beyond networks. It has also an ‚ÄúInformation Visualization‚Äù and ‚ÄúProgramming‚Äù section for those who want to master the subject and join the Gephi team. All these books give valuable information for understanding what is guiding the people who are developing Gephi and how concepts were put in practice.

The Network Science section refers to the science beyond networks. It describes where networks are in nature, society or organizations and helps understand their properties and patterns. Newcomers can starts with  Linked by Albert-Laslo Barabasi, the major reference, from 2001. You can also directly jump to Bursts, Barabasi‚Äôs new book released few days ago.
Social network theory views a network as actors who are connected by a set of relationships and is referenced as Social Network Analysis (SNA). As people increasingly use social networking websites (e.g. Facebook, YouTube, LinkedIn etc.), Social Network Analysis brings tools to study patterns of communication and communities. Social Network Analysis by Wasserman & Faust is a major reference.
These books are for all audience, so researchers would find a clear  state of the art of the domain with The Structure and Dynamics of Networks or Dynamical  Processes of on Complex Networks.
¬†

Data Visualization and Human Computer interaction (HCI) are at the base of Gephi. Learn about how visualization and interaction enhance understanding and knowledge discovery of complex data. Information Visualization or Visual Analytics make reference to this domain as well.
One can easily find the roots of the Visual Analytics in the book Readings  in Information Visualization: Using Vision to Think by Stuart Card,  Jock Mackinlayis and Ben Shneiderman. Exploratory Data Analysis started  with John Tukey, and has recently been extended by Andrienko.

The last stone is added with the knowledge of efficient programming, in particular how to design a modular software based on services with Practical API Design: Confessions of a Java Framework Architect. And as the human factor is central, take a look at The Mythical Man-Month: Essays on Software Engineering. Mathieu is a great fan üòâ
¬†
Also we foster you to go beyond with more references at the Reader‚Äôs circle and of course send us book suggestion.
","['Albert-Laslo Barabasi', 'Wasserman', 'Faust', 'Stuart Card', 'Jock Mackinlayis', 'Ben Shneiderman', 'John Tukey', 'Andrienko', 'Mathieu']"
122,2010-04-07 10:17:48+01:00,GSoC 2009 student interview: J√©r√©my¬†Subtil,"
Today I am pleased to interview Jeremy Subtil, Gephi student at Google Summer of Code 2009.
Jeremy is a French postgraduate student in Computer Science at Compi√®gne University of Technology. Fond of FLOSS, he took part to the 2009 Google Summer of Code on a Gephi project.
¬†
Sebastien Heymann: Hi J√©r√©my Subtil, you took part in Gephi with the Google Summer of Code 2009 (GSoC), by handling the vectorial preview module and implementing the SVG export. Could you explain why you chose this project, in particular why getting involved in Gephi although there are such great other organizations like Debian, WordPress or Mozilla?
J√©r√©my Subtil: I heard about Gephi in one of the courses I chose in February last year. From web crawling inputs, we visualized links between websites and we identified the emerging clusters, in order to approach a part of the world wide web‚Äôs shape. I discovered that Gephi was driven by a small but very active team, so I though it was a very nice opportunity to integrate a FLOSS community. In addition, I was very interested in doing some graphic work with the vectorial preview, as well as I wanted to know more about the SVG format.
Continue reading ‚Üí
","['Jeremy Subtil', 'Sebastien Heymann', 'J√©r√©my Subtil']"
123,2010-04-01 09:41:25+01:00,Gephi 0.7 alpha3¬†released,"
A new alpha version has been released in the night. It mostly includes latest bug fixes and small features developed. Thanks to users that reported issues on the forum or through the embedded crash reporter. Remaining issues will be fixed in a upcoming updates and future versions.
Changes were also deployed throught the AutoUpdate feature. Go to Help > Check for Updates in Gephi.
New features

Welcome screen, with recent opened files and samples.
CSV Importer. Import adjacency lists.
UCINET DL files importer. Import edge lists and full matrix.
DOT Import. Import DOT GraphViz files. Support directed, undirected, labels and colors only. No subgraph support.
Better memory starvation detection .

Check releases notes and download latest version. Please uninstall previous versions before.
This version includes a welcome screen, with samples graph file:

",[]
124,2010-03-27 18:55:48+01:00,"New GraphViz DOT, CSV and UCINET¬†formats","
Gephi now supports GraphViz DOT file format. This new feature is shipped with two others: UCINET DL and CSV formats. With a broader set of input file formats, it reinforces interoperability between tools and allows Gephi to be found effective on different problems. Tabular data and other delimited text files are now supported through the CSV (comma-separated values) importer. Two columns which represents relationships between elements can now easily be pushed to Gephi.
Note that DOT support is still incomplete. Subgraphs, shapes and some attributes are not supported for the moment. Please report on the forum or bug tracker any issue  you found using these new features.
To have these features, just update your Gephi application. In Gephi, go to Help > Check for Updates.
Consult the datasets page to find sample networks.
Documentation has been completed for these three new formats:

DOT
UCINET DL
CSV

",[]
125,2010-03-26 11:57:19+01:00,Gephi and Neo4j graph database propose a joint GSoC¬†project,"
Annoucement! Gephi is adding a new GsoC proposal: Adding support for Neo4j in Gephi
Neo4j is an open-source graph database that scales to billions of nodes and relationships. The stable 1.0 version has been released in February this year and is widely appreciated for variety of problems where relational databases are unqualified. Neo4j is therefore part of the growing NoSQL movement and is getting a lot of attention.
There is huge interest of visualizing Neo4j graphs and Gephi is suited for this task due to its performance and modularity. With graph data in Neo4j and a nice plug-in, Gephi could deal to larger graphs and overcome the traditionnal memory limit.
Students can start present themselves and apply for this proposal. Mentoring will be done by both Neo4j and Gephi team members. Deadline is April 9 so there is still enough time!
The Gephi team is excited about collaborating with Neo4j community!
",['None']
126,2010-03-19 10:37:30+01:00,Google Summer of Code¬†2010,"
It‚Äôs a great news, Gephi has been accepted again for Google Summer of Code. The program is the best way for students around the world to start contributing to an open-source project. The 2009 edition was a great success and dramatically boosted Gephi‚Äôs project development.
What is Gephi?
If you look around you, you may notice that networks are everywhere.  For instance, social networks, relationships among people or computer  networks, links between computers. Transportations routes, power grids,  emails networks or the relations between scientific papers are other examples of networks. The ability to analyze, manipulate and represent a  network is a key-feature for solving difficult problems and boost  knowledge discovery in many disciplines.
Gephi‚Äôs project aims to bring the perfect tool for visualizing and manipulating networks. We focus on usability, performance and modularity:

Usability: Easy to install, an UI without scripts and real-time manipulation.
Performance: Visualization engine and data structures are built scalable. Supporting always-larger graphs is an endless challenge!
Modularity: Extensible software architecture, built on top of Netbeans Platform. Add plug-ins with ease.

Learn more about Gephi, watch Introducing Gephi 0.7, download and try it by following Quick Start Tutorial.
Gephi‚Äôs project is recent, the growing community is composed of a mixture of engineers and research scientists involved in network science, datavis and complex networks.
List of ideas
List of ideas are availabe on our wiki. They cover various skills and level of difficulties:
* Shader Engine ‚Äì Create a new visualization engine with OpenGL 2.0 and Shaders
* Dynamic attributes and statistics ‚Äì Develop dynamic data structure and metrics framework
* Web-based network visualization engine with WebGL ‚Äì Gephi on the web is starting here
* Force-Directed Edge Bundling ‚Äì Work with Processing to implement this state-of-the-art datavis technique
* Data Laboratory ‚Äì Code utility methods and user interface for the data manipulation
* Graph Streaming API ‚Äì Create the framework for streaming graphs into Gephi in a robust way
* Direct Social Networks Import ‚Äì Plug social networks data source in Gephi
You can also propose your ideas, please post on this forum topic. They will be considered and discussed by the community. Have a look on our long-term Roadmap.
Students, join the network
Students, apply now for Gephi proposals. Come to the GSOC forum section and say Hi! to this topic.
Helder Suzuki, student in 2009 wrote:
At Gephi students will have the opportunity to produce high impact work on a rapidly growing area and be noted for it.
Have a look to 2009 pages and Helder‚Äôs interview.
Follow gephi on Twitter

","['Gephi', 'Helder Suzuki']"
127,2010-03-15 22:48:13+01:00,Seminar at LIP6 Paris ‚Äì March¬†25,"
I was kindly invited by the complex networks team at LIP6 to present Gephi 0.7 version during their monthly seminar.
The seminar will take place next week, on the 25th of March at LIP6 in  Paris. More information here (in French). Entrance is free.
Abstract:
In this practical talk, I will present 0.7 version of Gephi, open-source  graph visualization & manipulation software. Gephi possesses a  complete set of network visualization and analysis features, proposes  major innovations in dynamic and hierarchical graphs and above all is a  flexible and extensible architecture for plugins. I will firstly sum up  embedded features: Layout, Metrics, Ranking, Filters, Partition,  Preview, Clustering, DataLab. Then, I will present and discuss dynamic  and hierarchical graphs features and roadmaps while showing live demo.  Afterwards, I will outline our approach by presenting the Gephi project,  some insights about performance and the various possibilities of using  and extending Gephi in the way scientists and engineers can rely on. To  conclude I will speak about plugin development and show how to create a  plugin in five minutes.
",['None']
128,2010-03-12 18:12:59+01:00,Future Internet and Society: A Complex Systems¬†Perspective,"
The European Science Foundation (ESF), in partnership with COST is organising the following conference:

Future Internet and Society: A Complex Systems Perspective
Hotel Villa del Mare, Acquafredda di Maratea, Italy
2-7 October 2010
Chair: Romualdo Pastor-Satorras ‚Äì Departament de F√≠sica i Enginyeria Nuclear (FIB), Universitat Polit√®cnica de Catalunya, ES
Co-Chair: Claudio Castellano ‚Äì CNR-ISC (Istituto dei Sistemi Complessi) and Dipartimento di Fisica, Sapienza Universit√° di Roma, IT
The digital revolution and the advent of the Internet are transforming the way we work, how we spend our free time. These phenomena are also changing how we communicate with each other and the way in which we establish and maintain our social relations. The relationship between Internet and society is complex and bidirectional, leading to a co-evolution of the two systems. In fact, the Internet exists because humans need networking and the Internet evolution is ultimately driven by our ever-increasing use of it.
Continue reading ‚Üí
","['Romualdo Pastor-Satorras', 'Claudio Castellano']"
129,2010-03-08 12:49:47+01:00,Gephi Quick Start¬†Tutorial,"
Check out the first Gephi tutorial, which introduce the basic steps  to network visualization in Gephi.
Gephi Quick Starthttp://static.slidesharecdn.com/swf/ssplayer2.swf?doc=3363639&stripped_title=gephi-quick-start
View more presentations from Gephi NGO.

 Tutorial: Download it in PDF.
The tutorial follows the following steps with LesMiserables sample dataset. You can find other network datasets on the wiki.

 Import file
 Visualization
 Layout
 Ranking (color)
 Metrics
 Ranking (size)
 Layout again
 Show labels
 Community-detection
 Partition
 Filter
 Preview
 Export
 Save

Something is missing? Please continue the discussion about this tutorial on the forum. Feedback and criticism are welcomed.
",['LesMiserables']
130,2010-03-08 12:31:47+01:00,GSoC 2009 student¬†interview,"
Today I am pleased to interview Helder Suzuki, Gephi student at Google Summer of Code 2009.
Helder is a Computer Engineer student at Instituto Tecnol√≥gico de Aeron√°utica and participated as a student in the 2009 Google Summer of Code. He‚Äôs currently working as a Software Engineer Intern at Google in Mountain View, California.
¬†

 Sebastien Heymann: Hi Helder Suzuki, you took part in Gephi with the Google Summer of Code 2009 (GSoC), by handling the layout module and implementing the Yifan Hu‚Äôs multi-level algorithm. Could you explain why you chose this project, in particular why getting involved in Gephi although there are such great other organizations like Debian, WordPress or Mozilla?


 Helder Suzuki: I really believe in the power of graphs application in variety of problems, this is a very hot topic and it‚Äôs gaining a lot of momentum in the research community and in the industry. My previous research was related to graphs, so I had some experience in the area already, it made a lot of sense for me to apply for Gephi.


 Continue reading ‚Üí
","['Helder Suzuki', 'Sebastien Heymann', 'Yifan Hu']"
131,2010-02-25 13:36:49+01:00,Video: Introducing Gephi¬†0.7,"
http://vimeo.com/moogaloop.swf?clip_id=9726202&server=vimeo.com&show_title=1&show_byline=0&show_portrait=0&color=59a5d1&fullscreen=1
Introducing Gephi 0.7 from gephi on Vimeo.
This is a ‚Äúmadness‚Äù screencast overview of brand new Gephi 0.7. Turn on the sound, go on Vimeo to see it in HD, and enjoy!
The video highlights the following features:



* grouping:
Group nodes into clusters and navigate in multi-level graphs.


* multi-level layout:
Very fast layout algorithm that coersen the graph to reduce computation.


* interaction:
Highlight neighbors and interact directly with the visualization when using tools.


* partitionning:
Use data attributes to colorize partitions and communities.


* ranking:
Use degree, metrics or data attributes to set nodes/edges‚Äô color and size.


* metrics:
Run various algorithm in one click and get HTML report page.


* data laboratory:
Data table view with search feature.


* dynamics:
Use Timeline to explore dynamic graphs.


* filtering:
Dynamic queries, create and combine a large set of filters.


* auto update:
The application is updating itself it‚Äôs core and plugins.


* vectorial preview:
Switch to the preview tab to put the final touch before explorting in SVG or PDF.



Video License:

Creative Commons By-NC-SA
Music Credits:
Feather Drug ‚Äì Mysteries ‚Äì Album Beta test V0.1
","['gephi', 'moogaloop']"
132,2010-02-23 11:02:21+01:00,Check for Updates,"
We are testing the AutoUpdate feature, the following bugfixes have been deployed to our server. Therefore updates are available from your Gephi installation.

 Edge Weight Filter cannot be chained (bug  523941)
 GEXF hierarchy not imported correctly (bug  522896)
 craches on closing project with dynamic filter active (bug  523110)
 Filter button still active across workspaces (bug  523124)
 Meta-Edges are not displayed after opening project (bug  526040)
 hierarchy1.gexf not imported correctly (bug  522896)
 Problems when restoring Ranking Window (bug  526126)

To update, select Help > Check for Updates in Gephi. Note that you need Gephi 0.7 alpha 2.
The notification may also appears directly at the bottom right of the window.

",[]
133,2010-02-18 00:51:45+01:00,Gephi 0.7alpha2 released,"
Gephi 0.7 alpha2 was just released. It increases stability and fix issues that were reported on our forum and bug tracker. Thanks for your valuable feedbacks!
Normally, for minor versions like those, Gephi updates itself by asking users to update when Gephi starts. This AutoUpdate feature was not yet available for 0.7alpha but is working now. Therefore users need to download this new 0.7alpha2 version to profit for upcoming updates through the plugin center.
Check releases notes and download latest version. Please uninstall previous versions first before installing it.
One can find many network and graph datasets on this wiki page.
",[]
134,2010-02-10 16:34:41+01:00,Gephi‚Äôs 100-Day Plan,"
Gephi team is very proud to announce 0.7 version of the software, after almost one year of hard, yet passionate work. You can download and try the alpha version with various datasets. Please give us all feedback on our new forum.
Gephi is turning now in a fully collaborative free software project, as its software architecture allows collaborative development. The 0.7 project was a complete rewriting of the code in a modular way. Features were spitted in modules that can be developed and managed by different developers more easily. The Google Summer of Code 09 was a perfect way to experience our architecture. The modules developed at that time are now fully integrated in the 0.7alpha release. We plan to have many developers interested by creating plugins for Gephi. We oriented our new website in that way, have a look on the Plugin Center. Plugins could be anything, from a new layout algorithm to the connector that build graphs from your enterprise data. If you‚Äôre interested, please join the discussion on the forum.
We hope to collaborate with the entire community to help drive network visualization forward. Gephi‚Äôs aim is not only proposing unseen features, but above all build a professional tool that works and serve community‚Äôs needs.
Official 100-Day plan, presented as top priorities first

Fix all reported bugs and improve usability. The 0.7 beta version will be released.
Fill users‚Äô Quick Start guide and create a simple tutorial how to use Gephi.
Documentation, documentation and more documentation.
Make a feature-madness video, to let people know us.
Create tutorial pages for plugin development. At least layout, metrics and import.
Fill the Plugin Portal documentation on the wiki.
Create a Manifest and fill ‚ÄúGoals and Aims‚Äù on the website. Share our passion for graph visualization and highlight most challenging tasks.
Start Gephi Student Program, by proposing a set of programming tasks that can be managed in a semester or a quartile by computer science students.
Post blog articles about our approach and how Gephi is different (and great!).
Reorganize 0.7 specifications and build a clear roadmap and a discussion space for future developments. Invite people to join the specification team.
Finish documenting Gephi‚Äôs API.
Give more insight which dataset Gephi can deal with, get closer from users‚Äô needs by learning which networks they wants to visualize and support them in this task.

Please consider joining us for achieving these tasks! See the wiki.
Follow us on Twitter
",[]
135,2010-02-08 03:29:18+01:00,Try Gephi 0.7,"
Before any further announcement about the new 0.7 version, welcome to new Gephi website, an outstanding improvement for the community. The new version 0.7alpha has been uploaded on our server today at midnight. You can download it and start playing with it now.
We would be grateful if you could send us as many feedbacks as possible, about features, bugs and usability.
To start spread Gephi, you can already visit this page. However more materials will come soon, like a feature-madness video and more screenshots.
Follow us on twitter
",[]
136,2010-02-01 02:30:26+01:00,Gephi initiator interview: how ‚ÄúSemiotics¬†matter‚Äù,"
Today I have the honnor to interview a special member of Gephi Team: Mathieu Jacomy.
Mathieu is an engineer, a founder of the WebAtlas NGO, teacher in Sciences Po Paris, and leads R&D in the TIC Migrations program in the Fondation Maison des Sciences de l‚ÄôHomme and Telecom ParisTech school.
He is the main developer of the ‚ÄúNavicrawler‚Äù software. He also created the first Gephi prototype.
¬†

 Sebastien Heymann: Hi Mathieu Jacomy, you are the creator of Graphiltre, the first Gephi prototype that you developed in 2006. What was the purpose of making a yet-another-graph-software?


 Mathieu Jacomy: Hi ! I‚Äôm glad to answer your questions, and I hope our readers will be pleased to know more about Gephi.
At this time I was analyzing a lot of graphs and I wasn‚Äôt satisfied by the existing free tools. That‚Äôs why I started to build my own tools.
I had no money to use professional tools, and I needed to understand precisely what the software was doing : the open source, free softwares perfectly fit these constrains.
I was using the amazing software Guess proposed by Eytan Adar, that himself built for his own needs. I was doing quite the same thing as him, and I couldn‚Äôt start to explore graphs without this tool.
But I wasn‚Äôt satisfied because the software didn‚Äôt allow so much manipulations. I couldn‚Äôt look at the substructures as easily as I wanted, and it was difficult to make nice cartographies.
I was dreaming of a ‚Äúgraph-dedicated Photoshop‚Äú, a visualization-oriented software rather than a script-oriented tool.
A good way to figure out what I mean is to look at the spatialization process. In famous softwares such as Pajek or Guess, you have algorithms called ‚Äúlayout‚Äù, ‚Äúforce-vectors‚Äù or ‚Äúenergy model‚Äù. These algorithms give its shape to the graph, and it is probably the most critical part of the process to build a clear visualization. Because the substructures or ‚Äúpatterns‚Äù that one may see in the image strongly depend on the algorithm and the settings chosen. But in the same time, most of users also want to quickly look at the global shape of the graph, and may not be aware that it‚Äôs important to search for the best algorithm to use depending on the time you have, the quality you want, the size of the graph, its degree distribution, the substructure that you expect to recognize‚Ä¶ I was careful with these algorithms but even if I understood their principles and specificities, I couldn‚Äôt figure out how they were transforming the graph, and I couldn‚Äôt evaluate their differences.
Why? Because in these softwares you can‚Äôt :
‚Äì Manipulate the graph while the algorithm is running
‚Äì Modify the settings while the algorithm is running
‚Äì And sometimes, you can‚Äôt event see the graph while the algorithm is running
How can you just understand what‚Äôs happening there? Of course I started to work on a software that allowed this. But the same kind of problems appears again in other parts of the process, like filtering, image exporting‚Ä¶ Pajek is clearly built in a mathematical perspective. Guess is more user-friendly, but not enough. I didn‚Äôt want a tool for mathematics experts, but a tool for people that actually have to explore and understand graphs. A professional tool for a job that didn‚Äôt exist at this time.
This was the starting point of ‚ÄúGraphiltre‚Äú. Building a graph exploration system so that you can understand what you are doing by looking at what happens on the screen, and do anything (including filtering) without typing a single script line.


 Continue reading ‚Üí
","['Mathieu Jacomy', 'Sebastien Heymann', 'Eytan Adar']"
137,2010-02-01 02:22:32+01:00,Gephi 0.7 is¬†coming‚Ä¶,"
Howdy! The Gephi Team is proud to announce that the new Gephi 0.7 alpha version will be release very very soon! This will lead to a complete shift for the community, making Gephi the network visualization and manipulation software we dreamed 3 years ago, when the project started at WebAtlas NGO in France.
During the next weeks, we‚Äôll publish a serie of blog posts to tell you more about the project history and the evolutions brought by the next release (one clue: we built it on NetBeans Platform‚Ä¶). Stay connected with us on Twitter and Facebook. üôÇ
Go to this page to view the detailed screenshot and register to be notified by email:
Gephi 0.7 countdown
",['']
138,2009-12-16 15:03:30+01:00,Diseasome at Online Information'09,"
Diseasome.eu, the human disease network map, was presented at Online Information‚Äô09, the international symposium of information systems. Our conference shows how interactive exploration of complex networks can lead to innovative interfaces for document discovery:
Diseasomehttp://static.slidesharecdn.com/swf/ssplayer2.swf?doc=diseasome-091216063505-phpapp01&stripped_title=diseasome
View more documents from S√É¬©bastien .

",['S√©bastien']
139,2009-11-24 11:46:29+01:00,Gephi at SISC‚Äô09 (3rd French Symposium on Complex¬†Systems),"

The Gephi team will present a poster at SISC‚Äô09, 3rd French Symposium on Complex Systems. The conference is set for November 25 ‚Äì 27 in Paris, France. This is the first time we present the whole work of the community on Gephi 0.7.
 Poster: Gephi 0.7 project: Modular architecture for a large graph visualization and manipulation software ‚Äì Building a modern and durable open-source project
",['']
140,2009-11-17 00:37:19+01:00,Meeting agenda,"
Did you ever wanted to meet some of us and having a talk around a hot and tasty coffee? You can find Mathieu or me (Sebastien) on these coming public events:

November 17 at UTC (Compiegne Institute of Technology) in Compi√®gne France: graph visualization session given during the course of web mining and distributed information technologies.
November 20 at ISCC (Institute of Communication Studies of the French National Center for Scientific Research (CNRS)) in Paris, France: ‚ÄúMapping web territories: the nanotechnology universe‚Äù, a debate on medias and controversies. Link[fr].
November 25-27 at SISC‚Äô09 (French Symposium on Complex Systems) in Paris, France: we‚Äôll have a poster for presenting Gephi software and community.
November 27 at OCIM (French Office for Museographic Cooperation and Information) meeting in Dijon, France: talk on web mapping issues and practical uses.
December 1-2 at Online Information in London, UK: presentation of Diseasome, in mission for INIST-CNRS (Please request an appointment here).

","['Mathieu', 'Sebastien']"
141,2009-11-13 16:36:44+01:00,"gexf.net, a new website for gexf graph format, libgexf and¬†gexfExplorer","
Hi,
It‚Äôs been a while we didn‚Äôt give you some fresh news, but hopefully this fall will see great surprises for the community! First of them today, we just published a website solely dedicated to the GEXF file format and applications : http://gexf.net
You will find :

clear GEXF specifications, examples and primer.
libgexf, the official C++ toolkit for GEXF.
gexfExplorer, a brand new open source Flash application created by Alexis Jacomy to visualize networks encoded in GEXF, directly in a web browser.

This website concentrates all the useful links to communicate and staying involved in these projects. They are now independent from Gephi itself, and take part of a bigger Gephi Community project.

[nggallery id=4] 
",['Alexis Jacomy']
142,2009-09-07 12:48:27+01:00,libgexf 0.1.1 is¬†out!,"
We started the libgexf project a few months ago to help people creating, reading and writing efficiently GEXF files. Today we announce the second alpha release of this dynamic library, which brings new file validation (RelaxNG and XML-schema based) and data integrity checking (see examples)! These features provide a quick way to find and correct some mistakes or missing elements in your files. GEXF files created are also now compatible with Gephi 0.6 by using the Legacy writer. See the complete changelog here for more details.
Finally, New bindings are available for Perl5 and Java6, which increase the number of language bindings to 3 with the existing one in Python. Don‚Äôt hesitate to give us feedbacks and requests features.
 Go to libgexf page
",['']
143,2009-08-25 11:03:28+01:00,GSoC final term,"
The Google Summer of Code 09 just ended and our students are giving the last touches to their excellent work. Their code will be integrated to the trunk very soon, and without giving any details for the moment I can say that the GSoC is a great success for the Gephi Community! This real ‚Äúboost‚Äù will lead to the first release of 0.7 series around fall 09.
I personally thank all the students for their hard work and the high quality code produced. Guys, you can be proud. You rock! I also thank the mentors who took the time to integrate them to the community, and helped them well to become deeply involved in the software architecture and code management. Sebastien Heymann.
Gephi Team during Helder's visit in Paris (from left to right: Julian, Mathieu, Seb, Helder)
","['Sebastien Heymann', 'Julian', 'Mathieu', 'Helder']"
144,2009-07-22 01:14:13+01:00,"libgexf, a C++ toolkit library for GEXF file¬†format","
We released the first version of libgexf, the official toolkit library for creating and manipulating GEXF files, distributed under the MIT licence. The GEXF (Graph Exchange XML Format) format has now its dedicated project, independent from Gephi. It allows to use GEXF in daily needs for exchanging rich network data. It compiles both basic use cases like network topology and advanced features like dynamic and hierarchical networks.
This tool has been long-awaited by the community, to make the daily use of reading and producing GEXF files as easily and efficiently as we can. Forget the boring activity of reading the format specification, interpreting it correctly and implementing a solution to export your data to Gephi. Libgexf do this for you, and is up-to-date according to the GEXF specifications.
Though the library is written in C++ a variety of language bindings make it available in other environments. Libgexf currently only works on Linux systems (tested on Ubuntu 8.10 and 9.04), but the portability will be increased on demand. A Python binding facility is also provided, and Perl will be added soon.
You are welcome to try it and help us improving this toolkit for your benefits! A dedicated forum section has just opened.
 Go to libgexf page
",[]
145,2009-07-08 12:37:18+01:00,GSOC Mid-term,"
Google summer of code 09 students are nowadays all working hard and are deeply involved in their topics. It‚Äôs a real pleasure for me to see things going well and code committed to our repository. Modular architecture makes things easier, as students can work independently on their module. Proposals have been made a bit in that way, it was necessary as the core architecture is evolving in the same time. That‚Äôs my job! I‚Äôm also learning a lot, about code sharing practices and module reuse.
More than anything else, communication in the team is responsible for success. We want contributors to feel comfortable in the community, free to propose and feel proud of their work. All four students have blogs where they post details about their progress and sum up future development. It‚Äôs a good source of information for us, but the aim is mainly to keep track of the project. Blogs stays forever, aren‚Äôt they?
Blogs addresses:




Patrick McSweeney


Jeremy Subtil


Helder Suzuki


Julian Bilcke




Check their blogs to see progress and details about each project.
To remember, Helder Suzuki is working on Multilevel Force-Directed algorithms, implementing the state of art in Gephi. Quality and layout performances will increase dramatically. Patrick McSweeney is working on the Statistics module, so far this module was cruelly lacking in 0.6 version. He is implementing classical networks algorithms and statistics, design architecture, GUI and the way to present results in reports. Julian Bilcke is dealing with dynamics networks. He is designing a nice Timeline component, API for exploring dynamic structure and attributes and will work on integrate all this in the core. Jeremy Subtil‚Äôs work is the Vectorial Preview module. Using Processing lib, he displays the graphs exactly how it will be exported in SVG and propose a variety of parameters. It is a key step for improving user productivity and comfort. He is also volunteer to work on PDF export later, after GSOC.
To conclude I must say again Google Summer of Code is great! It sped up Gephi code and community development a lot, made us connect with talented students, brought to the project legitimacy and made us prepare the future.
","['Patrick McSweeney', 'Jeremy Subtil', 'Helder Suzuki', 'Julian Bilcke']"
146,2009-07-02 10:43:17+01:00,"Diseasome, explore the human disease¬†network","
Gephi team presents today a science-mapping project: Diseasome. Asked by Magali Roux, Senior Scientist at CNRS, to create a website to come with the publication of her book, Biology ‚Äì The digital era, we worked on the ‚ÄúHuman Disease Network‚Äù dataset and built a network exploration platform.
‚ÄúOn a unique place, one can find information about the book, the dataset related to the writings, an online data exploration framework and the file to manipulate these data with Gephi.‚Äù
The HDN (Human Disease Network) and the GDN (Gene Disease Network) were extracted from the original dataset and treated with Gephi. From the results, an interactive map has been created with the help of RTGI/Linkfluence tools. A poster is also available, with the full network and some useful statistics.
Although this work is experimental, we hope it can help scientists to explore and search in this complexity. The Diseasome is above all an innovative way to present a scientific work. The importance of complex data in science and particularly network graphs brings a lot of challenges. As well as computational issues, many things can be done with graphic design and interaction.

[nggallery id=3] 
",['Magali Roux']
147,2009-06-25 11:19:20+01:00,"CPAN-Explorer, an interactive exploration of the Perl¬†ecosystem","

We are proud to announce the first Gephi-based system for exploring a complex network, CPAN-Explorer. This is a visualization project aiming at analyzing the relationships between the developers and the packages of the Perl language, known to be organized as the CPAN community (Comprehensive Perl Archive Network). Produced by RTGI Labs and our team, it was initially discussed in a talk at the FPW‚Äô09.
You can download original graph source files from each subproject page. 
Available formats are:  GEXF (Gephi graph format), GDF (Guess graph format), SVG, and PDF.
For some of the subprojects, an embedded javascript visualization is also available. For the community graph, a special Flash webpage is available for online exploration.

Website: http://www.cpan-explorer.org/

We generated two maps (authors and modules) using the CPANTS data. For the websites, we crawled a seed generated from the CPAN pages of the previous authors. Each of this graphs are generated using a force base algorithm.
All the map are available in PDF files, in creative common licence. The slides are in french, but we will explain the three maps here.

slides (french)
authors map
modules map
community map
community map (flash version)
cpan-explorer.org


CPAN‚Äôs modules
The first map is about the modules available on the CPAN. We selected a list of modules which are listed as dependancies by at least 10 others modules, and the modules who used them. This graph is composed of 7193 nodes (or modules) and 17510 edges. Some clusters are interesting:

LWP and URI are really the center of the CPAN
a lot of web modules (XML::*, TemplateToolkit, HTML::Parser, ‚Ä¶)
TK is isolated from the CPAN
Moose, DBIx::Class and Catalyst are forming a group. This data are from march, we will try to do a newer version of this map this summer. This one will be really interesting as Catalyst have switched to Moose

The CPAN‚Äôs authors
This map is about the authors on the CPAN. There is about 700 authors and their connections. Each time an author use a module of another author, a link is created.
Modern Perl, constitued by Moose, Catalyst, DBIx::Class. Important authors are Steven, Sartak, perigin, jrockway, mstrout, nothingmuch, marcus ramberg
Slaven Rezi√Ñ‚Ä° and others TK developpers are on the border
Web map
We crawled the web using the seed generated using the CPAN‚Äôs authors pages.

again, the ‚Äúmodern group‚Äù, on the top of the map, with Moose/Catalyst/DBIx::Class developpers
some enterprises, like shadowcat and iinteractive in the middle of the ‚Äúmodern Perl‚Äù, Booking in the middle of the YAPC‚Äôs websites (they are a major sponsor of this events), 6apart, ‚Ä¶
perl.org is the reference for the Perl community (the site is oriented on their sides)
cpan.org is the reference for the open source community
github is in the center of the Perl community. It‚Äôs widely adopted by the Perl developpers. It offers all the ‚Äúsocial media‚Äù features that are missing on the CPAN

We hope you like this visualisations, have fun analyzing them üôÇ
Thanks Franck for the original post.

","['Steven', 'Sartak', 'perigin', 'jrockway', 'mstrout', 'nothingmuch', 'marcus ramberg', 'Slaven Rezi√Ñ‚Ä°', 'Franck']"
148,2009-06-09 01:14:53+01:00,SciencesPo Paris Medialab¬†demo,"

Last week for the great opening of the SciencesPo Medialab we have been invited to make a special demo of Gephi. Because the exploration of the web is a leading domain of interest for us and SciencesPo, and in addition a technological challenge, we decided to use Gephi to display live web graph.
The device was funny. Three Firefox-based Navicrawler were driven by three web-explorers, actually trying to map a controversy. When browsing, the Firefox extension was sending discovered URLs and links through the network to the server computer running Gephi. There, a tweaked Gephi datasource compiled the results, assigned colors and immediately display the graph.
A clip of the live results. You can see new nodes an links coming dynamically.
http://vimeo.com/moogaloop.swf?clip_id=4977684&server=vimeo.com&show_title=1&show_byline=0&show_portrait=0&color=59a5d1&fullscreen=1
Gephi realtime viz of a distributed crawl from gephi on Vimeo.
We are looking forward to continue these experiments and build a stronger architecture in our 0.7 version to facilitate datasource development.
* To learn more about SciencesPo Medialab, please visit official website. Check out Demoscience to learn more about mapping controversies.
","['Moogaaloop', 'Gephi']"
149,2009-05-27 11:00:11+01:00,Gephi Features Tour,"
This is our last video on Gephi 0.6 presenting 14 features of this serie. Completing the tutorials, you will find :
00:00 Real-time layout
02:00 Node details
02:45 Manipulation tool
04:10 Filtering
05:10 Label adjust
05:30 Designing labels
06:45 Real-time design
07:45 Space partitionning
10:10 Using workspaces
12:10 Customizing the interface
13:10 SVG export
15:00 Viewing propagation
15:55 Live datasource
17:00 Timeline (experimental)
Watch it in HD on Vimeo!
http://vimeo.com/moogaloop.swf?clip_id=4846287&server=vimeo.com&show_title=1&show_byline=0&show_portrait=0&color=59a5d1&fullscreen=1
Gephi Features Tour from gephi on Vimeo.
Download AVI version (1280√ó720, 272MB)
",[]
150,2009-05-23 17:38:53+01:00,Back from ICWSM,"
We are just back from California where we presented a demo paper at ICWSM‚Äô09 conference.
I was impressed at many levels, especially how professional where presentations. More than 47% of papers where done by students, I think this is great. The poster and demo session was highly appreciated by everyone and I think showed the diversity and creativity of students. Pr Jon Kleinberg‚Äôs talk was very impressive, notably by its clarity. Network structure and diffusion in one of the topic we like to follow and read about here. We also highly appreciate Pr Watts‚Äôs presence for his experience
Experts will be more likely to drive conclusions and highlights about the conference than me. Note that the  KDD‚Äô09 (Knowledge Discovery and Data Mining Conference) in Paris sounds very interesting as well, with connate topics.








Demo was a success, as we received many audience and comments. We tied numerous links to the network and social media research community. As Gephi is open-source, needless to say we count on international support and collaboration to  build a better tool. Effort is made to be compatible with other file format but more must be done to help users to work with network data more easily. I think we are doing well, as 0.7 version will be based on a modular framework.
Well, very positive. Rendezvous next year.
","['Pr Jon Kleinberg', 'Pr Watts']"
151,2009-05-08 22:54:17+01:00,Visualize metaballs,"
Following the article Nodes groups visualization I was trying to implement this work in the new (very) experimental 0.7 version, just for fun. The purpose of this Potatoes module is to enable users to highlight group of nodes in a network.
When clustering (i.e. grouping) nodes, it is useful to leverage group perception on the network visualization. For instance with SNA (Social Network Analysis) it is a good way to display communities and better see interactions between them.
However it is a difficult problem, both for a software designer and a developer. There is no perfect way to visualize groups when the number of them increases and when they starts to hide and blend each other. This problem appears especially when using convex hulls solution. The presented solution belongs to implicit surfaces systems, also called Metaballs. I found the visual result very precise and beautiful, some qualify it organic. Unfortunately it costs much more resources than hulls to calculate these potatoes and may be applied only on small graphs.

Here you can see a very good example of this feature.

The following video presents it with movement. A small network is displayed with 3 different groups, one per color. A spatialization algorithm is running and moves nodes according to their links. Metaballs are refreshed continuously when moving.
http://vimeo.com/moogaloop.swf?clip_id=4551215&server=vimeo.com&show_title=1&show_byline=0&show_portrait=0&color=59a5d1&fullscreen=1
Gephi ‚Äì Potatoes work in progress from gephi on Vimeo.
Conclusions of this experimental implementation will guide us for official specification of further Gephi releases. We will implement this functionality for vectorial export but presumably not in the 3d engine.
","['Moogaaloop', 'Geoffi']"
152,2009-04-23 23:57:59+01:00,Building a modular¬†application,"
It is now a couple of weeks I am working on the new 0.7 core. The plan is to rewrite completely the architecture using the Netbeans Platform Framework. In this article I will introduce a bit what I‚Äôm doing and the benefits it brings.
I used to claim the importance of software architecture. I have to admit, as I am rewriting completely a new architecture, I didn‚Äôt know a lot about architecture so far. I had to ask myself what was wrong. I found some very classical problems. Typically, the architecture was built for a specific set of features and adding features which was not planned at the beginning were very difficult to add. Nowadays I just think this is inescapable and software architecture has a lifecycle, like anything else.
Since, I‚Äôm converted to a (Service oriented) API Design and I try to think every day in this way. I‚Äôm helped by this excellent book: Practical API Design: Confessions of a Java Framework Architect.
Modular application
The aim is to clearly divide the application in modules, in order they are extensible and can grow independently from each other. It also helps to avoid the spaghetti problem and therefore it fits for very large applications, like Netbeans IDE.
In addition, a modular application is much more appropriate for an open-source project, with several programmers involved. As a consequence, new programmers from GSoC will only work on the new 0.7 architecture.
Netbeans Platform
The Netbeans Platform Framework is used by Netbeans developers to build their IDE. The framework is available for Swing programmers to build medium and large desktop applications. It encourages sustainable development practices and provide all the ‚Äúplumbing‚Äù that, before, I developed myself.
One of the main benefits is that you don‚Äôt need to think how to build an application extensible by plug-ins because everything is plug-in!
Example:
For instance a controller class can obtain all implementations, in any module, of an Algorithm interface. In this way anyone can develop an algorithm class and include it in a plug-in. No additional code will be needed to include the algorithm in Gephi.
I will start a topic about modular design on the forum to start a discussion.
",['Unknown']
153,2009-04-10 15:08:52+01:00,Quick Gephi0.6 beta3,"
Due to a critical bug about SVG Export on Linux platforms, we need to publish a new release for 0.6 serie. Because some new cool functionalities has been recently added, it is worth offering them quickly to the community. See changelog on Launchpad.
 Go to download page
The demo page has also been updated with this new version.
New features

Introducing new ‚ÄúNode Details‚Äù panel
* See attributes value when clicking on nodes
* Modify attributes
* Search in labels and center camera on it


New filters
* Order by mutual links: Chart and represent mutual releations.
* RangeSet: for selecting nodes between a numerical range.
* AttributeEqual: Attributes value selection, according to string or regex.
* AttributeNotEqual: Same but NOT equal.
",[]
154,2009-04-02 10:55:45+01:00,Import graph files,"
This article discusses graph file format and introduce a new support page about graph import, which explain a bit of each format and gives tips about current Importer‚Äôs specificities.
Gephi supports major graph file format and GEXF, which is our own creation. These file format come from different editors and therefore none is really a standard. Needless to say Gephi supports them for enable previous work to be imported but it is not always easy, due to differences between them. Some standardization efforts exist but they are difficult to apply anyway, due to very different features within graph editors, for instance mixed diagrams and graphs editors.
Our approach when building the GEXF format is slightly different. Instead being specific to our software focus is made on what may be common to all network editors. In addition it will be the first standard dynamic, yet easy format. You can follow the process of specification and see some samples on this page. It recently reached a 1.1 version.
Gephi‚Äôs domain of application are networks only, this tends to clarify which data shall be imported. Although these (old) formats can have sometimes complicated functionalities, only few are essential to import a graph structure in Gephi, in sum topology and attributes.
See below current and future status about file import. Note that graph file format export is so far not a priority, as long as we have GEXF export, but we may perhaps consider it more in the future. Note that as PDF is not a graph format, export feature is set at high priority for 0.7.
Import Implementation status (Gephi 0.6 beta2)



* GEXF
Implement GEXF 1.0 Specification.


* GDF
Implemented, but some rare bugs remains.


* GraphML
Support basic node, edge and attribute. Don‚Äôt currently support hierarchy but planned for 0.7.


* Pajek
Implemented, works fine.


* XGMML
As for GraphML, hierarchy is not yet supported.



More details and compare on Supported Graph Formats.
Future



* GML
Needs to be done, planned for 0.7 version.


* Excel/CSV
We are thinking how to do this.


* Database
In the 2009 roadmap.



",['Albert']
155,2009-03-25 13:05:02+01:00,Gephi at Google Summer of Code¬†2009,"
The Gephi project has been selected by Google to be part of the Summer of Code 2009 (GSoC).
This is a global program that offers student developers stipends to write code for various open source software projects, fund over a three month period (4500USD per student). Through this, accepted student applicants are paired with a mentor from the participating projects, thus gaining exposure to real-world software development scenarios and the opportunity for employment in areas related to their academic pursuits.
We actually offer 4 student mentorships, 3 on the ideas below, and a free one:

Shader engine
Network algorithms and statistics
Vectorial Preview

Students can submit their applications via the Google Summer of Code 2009 site from March 23 ‚Äì April 3, 2009.
Find our proposals, eligibility, instructions and evaluation criteria in this Call for student applications (pdf), and rendezvous on the public forum!
",['Google']
156,2009-03-20 01:46:08+01:00,Version 0.7 launched,"
I‚Äôm pleased to inform the community that we are working on a new Gephi core. As it is explained in recent news about 0.6 beta2 release, we won‚Äôt publish an official 0.6 version and move directly to an entire new architecture. Though the 0.6 architecture is pretty stable and has been used for worth case studies (see our Exhibition section or WebAtlas gallery), it doesn‚Äôt fit with various new needs, like clustering support and complete dynamic network (DNA) support. The 0.6 core was used since September 2007 from now, mostly in an experimental context. As we receive many positive comments and support, we are adopting a long term view and enter a new development cycle. When increasing quality and modularity of the application, we expect more developers helping and a lower learning curve. Therefore the new architecture will be based on the awesome Netbeans Platform, currently the most advanced open-source framework for large Java modular applications. Plugins development will be eased when based on this framework.
Besides the framework, the most serious change will be located in data structures, with a brand new technology. Developed by us for more than 6 months, the DHNS (Durable Hierarchical Network Structure) is a very efficient data structure for storing hierarchical and dynamic networks. Thanks to this new module, new hard features like a clustering algorithm framework or hierarchical network navigation could be hatched more easily. I am currently writing a paper about these researches.
Other features will be added or improved within 0.7 version, you can have a look on our 2009 roadmap. It‚Äôs hard to say now exactly how priorities will be managed but I will publish regularly news about the progress for keeping you informed. For now the top priority is building the new architecture around Netbeans Platform.
Until the end of summer, Gephi project is hosted by RTGI SAS in Paris. Besides supporting our project, they plan to use Gephi daily and thus we have feedbacks and opportunities improving user interface and ergonomics.
Let‚Äôs go back to work and build the best open-source network visualization software.
",['C']
157,2009-03-01 19:09:27+01:00,Gephi 0.6 Beta2¬†released,"
We released Gephi 0.6 Beta2 ‚ÄúTeddy Lion‚Äù today, second beta release of Gephi 0.6. It mainly enhances stability and improves existing features.
Although we are already working on next major release 0.7, we decided to publish a second beta for 0.6 version. It is already a long time we are working on improving functionalities and stability of this version and this release marks our final point of achievement for 0.6 series. This beta is fully operational.
Because we prefer concentrate on the new 0.7 version, no official 0.6 version will show up.
The demo page has also been updated with this new version.
 Go to download page
Stay tuned for information about the new 0.7 version.
You can see the changelog:
- Rich SVG Export.
- New text display ""Proportional"" mode. The size of labels follows node size.
- Add Spring layout algorithm.
- Add new node design, with an experimental photo panel.
- Dynamic datasource now support all UPDATE operations.
- Nodes added dynamically are now put in a ""Dynamic space"" instead of the trash.
- Nodes labels have now correct position in 3D dimension.
- Text display settings are now saved with project file.
- Setting edge color from the ""Properties..."" menu. Set unique color and alpha.
- Improve export dialog ergonomics.
- Add a button to center the camera on zero.
- Add proxy configuration in preferences. Proxy parameters are needed for the experimental photo panel.
- Add new windows executable Gephi_extreme.exe with more default memory settings. It is intended to be used with manipulating very large graphs.
- Fixed 'Force Atlas' algorithm.
- Fixed many bugs and general stability.
",['Teddy Lion']
158,2009-02-28 17:24:21+01:00,Gephi at ICWSM¬†2009,"
The Gephi team will present a demo paper at the ICWSM 2009, 3rd Int‚Äôl AAAI Conference on Weblogs and Social Media conference.  We are very excited of taking part of this event, especially because this will be our first publication. The conference is set for May 17 ‚Äì 20 in San Jose, California.
‚ÄúThe social and community driven aspects of our digital lives continue to rapidly increase, resulting in transformative behaviours and, significantly, publishing and distributing huge amounts of fascinating data. The International Conference on Weblogs and Social Media will meet once more in 2009 to discuss the latest research analyzing and leveraging this resource. As with previous meetings, we will bring together a wide range of researchers and industry practitioners from many disciplines providing a unique opportunity for sharing ideas and collaboration in this space.‚Äù
With various areas of interest, the conference insists on interdisciplinary collaboration. The invited speakers, the data challenge and the list of sponsors makes already the conference remarkably promising.
I noticed presence of Jon Kleinberg and Duncan Watts. We will follow their speeches with the highest attention.
The demo paper we will present is a general introduction about Gephi and open-up about dynamic network studies. We will work hard for presenting thrilling Gephi features and interesting network case studies.
 Paper: Gephi : An Open Source Software for Exploring and Manipulating Networks
See you in San Jose !
","['Jon Kleinberg', 'Duncan Watts']"
159,2009-02-17 13:32:45+01:00,Nodes groups visualization,"
Loic Fricoteaux, student in Computer Science worked on a Gephi research project about visual representation of nodes groups. Next big move of Gephi will be supporting clustering and hierarchy navigation. Thus this project helps to keep network readibility within cluster exploration. We expect presence of this functionality for the first 0.7 release, later this year.

Implicit surface system on a sample graph
The purpose of this module is to enable users to highlight nodes groups in a graph, providing a better visibility for them. For instance, it can be useful to reveal/highlight patterns or just to highlight meaningful nodes aggregates in a network.
To visually represent nodes groups, each node of a group has a circular (by default) influence area which decreases as long as the distance from the associated node increases. A thresholding of the summation of all these influence areas defines a surface (not necessary connected) enclosing every nodes in a smoothness manner. The final rendering can be hugely parameterized to match user preferences (size of influence areas, color, antialiasing, ‚Ä¶).

In order to allow a real-time rendering for many nodes groups in big dynamic graphs, an optimized algorithm has been specifically developed to fill the corresponding enclosing surfaces while keeping a handsome rendering.
",['Loic Fricoteaux']
160,2009-02-13 13:52:42+01:00,Experimental algorithm,"
Gephi provides a simple API to insert your own spatialization algorithms. This one is developed by Mathieu Jacomy of WebAtlas for its own needs : displaying news during time in 3D. Each layer correspond to a month.
News River
",['Mathieu Jacomy']
161,2009-02-06 20:33:32+01:00,Advanced features demo,"
Gephi allows users to easily customize the visual style and the way nodes and edges appears. Filters bring the control of node size and color, and styles let us change background color, type of objects and edges. Labels are customizable in a fine way : users can select font, color, transparency, shadow and set their size according to the node the are related to. Furthermore, most of our implemented algorithms don‚Äôt use the Z axis, but some do, like Stairizer used in this demo.
This video presents advanced functionalities in 5 steps :
1. Spatializing a semantic graph on genetics take on a case study with the Stairizer algorithm
2. Changing the style of the background and the edges
3. Filtering the nodes (ordering by a node attribute) to improve lisibility
4. Tweaking labels rendering and positioning by a Label Adjust
5. Exploring the 3D graph
http://vimeo.com/moogaloop.swf?clip_id=3108330&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=00ADEF&fullscreen=1
Watch it in HD
Download AVI version (30MB)
",['Moogaaloop']
162,2009-01-10 03:22:44+01:00,Rich SVG Export,"
I would like to present some new enhancements for SVG Export. Developments are very active in this branch, thanks to strong needs coming from Webatlas studies.
Interpreting complex networks remains a challenge and though our tool is designed in this aim, exporting (and in some cases printing) network maps is often necessary.
Rich SVG Export




New settings panel with preview window: It improves user experience with allowing editing many design parameters and seeing directly the result. WYSIWYG in a sense.



Line and arrow links: Configure them with many settings. In addition to the cuve mode.



White disk: A round shape around the node is drawn to hide edges fror other nodes. It increases readability of the map.



Mini labels: Small labels are shown at extremities of edges to enhance network interpretation.



Better font support: You can either personalize fonts or let the computing use the one from the graph visualization. In this case the SVG exported will look like as the graph window.



Here are some examples of SVG exports:
















You can see more networks in the Exhibition section.
The new SVG Exporter will be included in next Gephi release. Additionally it will serve then for the creation of a PDF exporter.
In addition of this presentation here is a list of software able to edit SVG Files. The most known and powerful tools are Inkscape and Adobe Illustrator. They can also create PDF in output.
",['Webatlas']
163,2008-12-19 02:01:31+01:00,Demo data set,"
Sample data set are now available from the Demo page. You can download them and import these files either in the demo version or in releases. You can use these data to discover Gephi capabilities or observe an example of the GEXF file format.
We put three small examples, two of them are classical case study, and the third is the network of the French IPR study. More will be added in the future. By the way, if you built nice maps with Gephi send them to us and we will put them in the exhibition section.








The brain network of the
C. Elegans worm
Semantic graphs of
French IPR
Protein-Protein interaction
network



","['C. Elegans', 'French']"
164,2008-12-11 00:43:23+01:00,Connected: The Power of Six¬†Degrees,"
A very rich documentary about the new science of network. It is built around reproducing the ‚ÄúSix degrees of separation‚Äù experience. The main concepts are well explained and the history of discoveries is emphasized with many examples and interviews of the researchers. I personally think the documentary is well realized and may be understood by any public.
The first part is about small worlds model and explaining why six degrees works. The second part brings the concepts of hubs and power-law degree distribution. At the end we learn more about network theory applications, in particular about cancer research.
Warning: the video is no longer available, due to right owner‚Äôs decision to remove it from vimeo. 
EDIT: Video available here

To go further :

The disease map developed at the end can be found here. The PDF article ‚ÄúThe human disease network‚Äù is here.
The new Diseasome : Explore online the diseasome network
Six Degrees: The Science of a Connected Age
Linked: How Everything Is Connected to Everything Else and What It Means for Business, Science, and Everyday Life

Found here.
",['none']
165,2008-12-11 00:16:57+01:00,Gephi 2009 Roadmap,"
The first public Gephi release has been successfully launched in October 2008 and has already been tested by dozens of people. As we are motivated to continue the project we are now thinking about a 2009 roadmap. Continually inspired by users comments and our own experience, we want to share our ideas with the community and create a group dynamic.
At this time we are pretty sure to release a 0.6 beta2 soon but this article is about guidelines for next versions, from 0.7 to final 1.0. Plans may change however, we always expect to implement new experimental features based on current research. The software tends to be both a flexible experimental platform and a robust application fulfilling daily needs.
We lead the project to three main directions: Explore networks, Create maps and Organize your work. Although some specific topics are already in development and will be explained later in following articles let√¢‚Ç¨‚Ñ¢s have a look first at the main goals for 2009.
Plugins
More mature the project is, more the architecture should be flexible and durable. Giving a real power to plugin development will for sure provide the best chance from Gephi project to fulfill community and emerging projects.
Data edition
Open the possibility of editing data imported in Gephi, through a data laboratory or annotation. Moreover, have search features to explore and mine network data.
Performance, scalability and flexibility
See the posts Performance and scalability and Flexibility in visualization. Great achievements can be done to support larger networks.
Explore network
Continue the work on Dynamic Network Analysis (DNA), integrate network dynamics in visualization and manipulation. Think about tools for tracking burst phenomena, contagion or percolation
Clustering
As for spatialisation algorithm, create a development platform for clustering and classification algorithm. Besides of the huge interests of clustering algorithms themselves, this area will open the possibility of hierarchical (multi-level) networks and the support of larger networks.
Export design
Many works can be done to improve vectorial (SVG) export, with more settings and freedom but a PDF exporter has also to be done and a regular screenshot PNG if necessary. Needless to say more filters and modules has to be developed, they will bring better link analysis and help to build richer maps.
User Interface Design, Usability and Ergonomics
We attach great importance to UI and easy-to-use software. The first feedback we had shows they are still more to do in that. Besides many tiny improvements can be done everywhere, the global rigor of the application has to be enhanced.
GEXF Standard
As we are developing dynamic features, we also expand the GEXF (Graph Exchange XML Format) specification into the community and keep explaining concepts. In order to make this work circulate, libraries able to create/export GEXF must be developed.
As I said before this may not be all but it‚Äôs already enough for keeping our motivation at the maximum level. I hope these guidelines will also motivate again the community to participate, help of any kind is definitively needed.
",[]
166,2008-11-27 01:01:43+01:00,Flexibility in visualization,"
To understand some of the visualization design choices, the flexibility aspect has to be seen in detail. The aim of flexibility is part of any big software products, so it is also part of Gephi‚Äôs visualization module. In this article the evolution of software architecture is discussed and the existing solution of the visualization module is presented.
Architecture
The objective is always the same, maximize change and minimize architecture adaptation. Although minimum coding is also an objective, it doesn‚Äôt cause such problems as with architecture.  When you realize what you want to achieve is completely incompatible with the current architecture you have to break the compatibility. This may have effect in all modules and require a lot of effort. For instance the current Gephi architecture is not suited for supporting clustering, so we had to think again some systems from the root.
With a flexible architecture one expect architecture change, but in accord with the long-range planning.
If the flexibility is about architecture, what really characterize a flexible architecture?
From a technical point of view, a flexible architecture allows to add new functionalities easily. Code is reused and all advantages of object-oriented programming is taken, like design pattern. When a flexible architecture is also a modular one, this allows easy move from a type of architecture to another. That said, it depends a lot from what technologies you‚Äôre using and level of liberty you dispose.
On an upper level, what is even more important is a clear architecture, well structured, readable code and documentation. Keeping an overview on the whole system finally makes developer‚Äôs decision better. If this is lost, I assume it‚Äôs very difficult to ensure both backward compatibility and new functionalities. But who cares about backward compatibility? üòâ
Visualization module
The visualization module is an important part of Gephi. Because long-range plan exists, a flexible architecture could be achieved. But the module has also heavy efficiency requirements. As I said in a precedent article it is difficult to have both flexibility and efficiency in the same time.
Some other graph visualization software can draw a lot of different graph like UML, processes or diagrams. Drawing all of these different objects in an efficient way is almost impossible, especially in 3D rendering. Hopefully Gephi concentrates only on network visualization. So the number of objects is limited: nodes and edges on the first place.
Here is an outline on what is already achieved:
* The complete display engine is reusable: To ensure graphic card compatibility, several render engines can be used and the engine with the best compatibility is chosen. This is necessary to be free to implement new technologies very quickly. For instance we plan to develop in 2009 a second graphic engine, using new Shaders technology.
* Separate the engine from objects to render: This point is prevailing, in order to support new things to render. Each type of objects doesn‚Äôt need the same care, so let them have their own initializer classes, a bit like the decorator design pattern.
* Avoid event-driven architecture because it becomes too complicated with multi-threading.
Objects
Different objects in different classes need to be displayed by the visualization module. All of this has to be dynamic in order to allow plugins to add their own object types. Hence there are two packages, the objects themselves and related initializers. They provide what object need. For instance, some objects will need LOD (Level-of-detail) or some other texture functionalities.
Objects type can be changed from the Properties dialog. Right click on the graph and then Properties‚Ä¶
Here are the current object types supported by Gephi:







Sphere
Cube



Standard geometric forms, these are the most efficient to render. Sphere is enabled by default.






Panel



The Panel is very special. Visually it is a texture but in real it exists as a JPanel. This is the standard Java interface panel here you can put anything (labels, forms, table, charts, images‚Ä¶). The dedicated initializer transforms the JPanel into a texture that display engine can render. This object is really the pedestal of the variety of objects possibilities.






Attributes panel



The attributes panel. This is an example of Panel implementation. When nodes are initialized a JPanel is created with a list of the node attributes value. Then this panel is automatically converted in the drawable object.






Image panel



The Image panel. Also an implementation of the panel, it simply takes an image URL in nodes attributes. The image is then automatically downloaded and set on the panel. It can also work with images stored on the hard drive or sent through a data-source.
",[]
167,2008-11-15 02:23:37+01:00,Label Adjust,"
The Label Adjust functionality is a special type of algorithm. It is available through the Spatialization menu but instead of working with nodes position it works with labels. The aim is to automatically avoid label overlapping.
Gephi is built to produce readable maps, which can be published or printed. By default, if a network has more than 1000 nodes it becomes hard to read and even more if labels are displayed. With the Label Adjust algorithm, the boring work when you manually move each node of the network vanished.
When running, the algorithm slightly moves nodes where labels are overlapping. For instance with long labels like URLs  this functionality is really time-saving, and it is easy to use. Display labels as you want (font, size, color, ‚Ä¶) and start the algorithm. It automatically stops when its detect no more label overlapping, but you can also stop it by hand.
Here is a small demo video of the feature running. Needless to say the algorithm is designed for larger networks.
http://vimeo.com/moogaloop.swf?clip_id=2242916&server=vimeo.com&show_title=1&show_byline=1&show_portrait=0&color=&fullscreen=1
This functionality is important when exporting map results in Gephi. The standard process of publishing network maps in Gephi would be something like that:
1. Spatialize the network, using for instance Force Atlas algorithm.
2.Use filters to set nodes color and size depending of the network data.
3.Display labels and set text settings.
4.Use Label Adjust to makes all labels readable.
5.Export.
",[]
168,2008-10-26 00:46:44+01:00,Semantic graphs of French¬†IPR,"







These work-in-progress maps are a study produced the last spring for the economist Yann Moulier-Boutang, law professor at the engineer school UTC. They represent the linked terms of vocabulary used on the Web to talk about the intellectual property rights in French language. Datasets come from Exalead SA (web/intranet search engine).
Each node is a term and each edge exists when two terms or expressions are co-cited on a sufficient number of web pages, over more than 120,000 pages. 1283 expressions and 4984 co-citing links have been selected, assuming a representative approach against an exhaustive one. Semantic clusters are represented with node colors in the general map. The contract rights map shows the ‚Äúimprint‚Äù of this cluster (red nodes) inside the overall graph (in grey). The last image is a test to display the imprint of two meta-clusters : the vocabulary of intellectual property rights (in red) versus the one of industrial property rights (in blue).
How we did this ? After an information extraction phase from the Exalead databases and a manual filtering, we made a GDF file of row data (download it and feel free to make your own viz !), spatialized the graph in Gephi with a force-vector algorithm (in a nutshell, two nodes tied by an edge are graphically attracted to each other, otherwise they are rejected), applied some filters to colorize the nodes regarding to which semantic cluster they belong to, and then export the maps in SVG format. The second part of the work consisted in softly improving the rendering and adding contextual informations like names of clusters, main terms clouds, legend‚Ä¶in Inkscape, to finally build the PDF files.
Download the general map in PDF (50Mo) ‚Äì Creative Commons by-nc-sa
Download the map of the contract rights in PDF (50Mo) ‚Äì Creative Commons by-nc-sa
Download the GDF file (graph not spatialized) (a shift in nodes positioning is normal)


Main semantic graph


Zoom on the Free Software cluster


Contract rights map


Zoom on the core of contract rights


Intellectual (red) vs industrial (blue) rights

Download the general map in PDF (50Mo) ‚Äì Creative Commons by-nc-sa
Download the map of the contract rights in PDF (50Mo) ‚Äì Creative Commons by-nc-sa
Download the GDF file (graph not spatialized) (a shift in nodes positioning is normal)
",['Yann Moulier-Boutang']
169,2008-10-25 12:39:22+01:00,Performance and scalability,"
With this article and some following I‚Äôll focus on the application design and explain technical points I think relevant to understand our approach.
Today‚Äôs subject is performance and scalability in the visualization. Although other modules need high-quality performances, the visualization of thousands nodes and edges remains the major challenge. For a visualization-centered software like Gephi it is a key feature we attach great important.
What you can find in other network visualization software is either a poor visualization module or a stunning aspect but not efficient. For instance Pajek has a very efficient core and you can achieve a lot with it but problems starts when you want to visualize your network. With GUESS you are able to produce nice maps but the render engine starts suffering seriously over 2000 nodes. Gephi tries to combine an efficient render engine with looking good results.
In 2007 when we started designing the current version of Gephi we had in mind we want to create a new generation of network visualization software and hence we made some choices I will try to explain here.
Use multi-core
Already in 2007 and even more now multi-core processors impose new rules in software development. It brings appealing features but also some risks. However technology starts to be mature in this, all current Top 10 video games has been thought multi-thread from the beginning. Multi-core brings performance but does it bring scalability as well? I would say YES for Gephi because no matter how many processor you have, what can be parallelized will be parallelized. Graphics card are not able to parallelize yet but we count this would be the case in the future.
Use GPU
You may notice we got some inspiration from video games development. When using the graphic card features, Gephi‚Äôs render engine let the processor free for other computing and allows using GPU acceleration to speed up rendering. Apart allowing 3D graphs, many drawings are speed up by the GPU in Gephi. I would say the only problem is compatibility, due to the high number of different graphic cards on the market.
Architecture
The visualization package architecture is a compromise between flexibility and performances. In 3D engine design it is quite impossible to have both in the same time. Hence our engine has flexibility where it doesn‚Äôt harm efficiency.
These choices allow good performance for visualizing, and I would say it is only the beginning. Currently, up to 50,000 nodes can be visualized and even more but this depends on edges number and how your graph is spatialized. Indeed we use techniques to avoid computing of parts of the graphs out of the screen:











Octree cubes partition
Octree cubes on a 3D graph



The graph is cut in fixed volumes in a structure called Octree. It is easy for the render engine to determine which cubes are hidden and which are visible. Only 3D objects in visible cubes are computed. As a consequence performances don‚Äôt depend on how much nodes you have in your network but how many you are currently visualizing. So even with huge graphs, zooming in and exploring parts of it remains fast.
Besides the current 3D engine, which is intended to work on all configurations a new one will be developed in 2009. Using the last features of graphic card, networks size limit around 200,000 nodes may be reached.
",['Yves-Alexandre de Casabal']
170,2008-10-22 12:08:03+01:00,Gephi dynamic demo,"
While this video is getting popular I uploaded it on Vimeo in order to share it.
http://vimeo.com/moogaloop.swf?clip_id=2035117&server=vimeo.com&show_title=1&show_byline=0&show_portrait=0&color=00ADEF&fullscreen=1
Gephi ‚Äì Dynamic demo from gephi on Vimeo.
Here are some clues how it has been generated: 
‚Äì First I had a words network of 6600 expressions clustered in 117 clusters.
‚Äì I chose 4 clusters and moved them to a separate space.
‚Äì I exported the corresponding GEXF file.
‚Äì I created a new simple datasource. Its aim was to take a GEXF in input and send five nodes every 500 milliseconds to the workspace. Hence when started the datasource simulates nodes arriving from an external program.
‚Äì Before starting the datasource I launched a Force Atlas spatialization algorithm with speed set at 1.
‚Äì I started the simple datasource and recorded the video.
With the datasource I‚Äôve been talking it is possible to do this kind of demo with any network.
",['gephi']
171,2008-09-29 09:25:59+01:00,Euro SiS Map,"

WebAtlas recently produced a work-in-progress map of european websites in a training workshop during which european scientists got involved in web crawling and information spatialization.
This map uses a force vector to place the websites (nodes), related to others by their hyperlinks (edges). Colors highlight the clusters by country, e.g. green for Poland, light violet for France etc.
Download the PDF map of all countries (Note that with PDF Reader you can search URLs in the PDF)
Download the Excel file of all websites (with pre-expanded websites as ‚ÄúNEXT‚Äù)
",[]
172,2008-09-28 18:50:35+01:00,Gephi 0.6 Beta,"
The first Gephi beta version just came out!
It is a great day for this project, a new website and a beta to download. After several months of effort I can say there is some electricity in the air, we are strongly waiting the audience comments. But this is only the beginning and the team is already preparing the suite.
After big announcements, more serious posts will come about the project future. We will also fill the website with new contents, like tutorials and community work.
 Go to download page
And remember, you are welcome to join this community and we will be pleased to share our experience with other students.
",['no one mentioned']
173,2008-09-28 18:34:37+01:00,In the beginning‚Ä¶,"
Welcome to the Gephi project website!
Gephi is a powerful software for visualize and explore networks. With introducing new technologies, Gephi helps to analyze relationships in networks and produce results as maps.
Whether networks are social, biological, web or others, exploring them remains a challenge. We propose technologies to speed up exploration in large networks and support analysis.
Gephi is developed by a team of computer-scientists students interested by information visualization and network sciences. However we are working with researchers, especially in sociology and we attach great importance to strong relationships between engineers and researchers to produce great achievements.
We are looking forward Gephi can help you.
",['']
